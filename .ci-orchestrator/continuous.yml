type: pipeline_definition
product: Liberty
name: Open Liberty Continuous
description: A scheduled pipeline that tests changes delivered to the integration branch of OpenLiberty/open-liberty.
triggers:
- type: schedule
  description: A scheduled pipeline that tests changes delivered to the integration branch of OpenLiberty/open-liberty.
  triggerName: "Scheduled"
  triggerRank: 90
  groups: ["CSD"]
  triggerThreshold: 100
  every:
    hours: 24

- type: github
  description: Test that the WebSphere Liberty Continuous pipeline will function with the current code in the targeted branch.
  triggerName: "pr-ol-continuous"
  triggerRank: 90
  groups: ["CSD"]
  keyword: "!continuous"
  aliasKeywords:
  - "#continuous"
  propertyDefinitions:
  - name: git.laos.clone.repository.username
    defaultValue: ${github_pr_user}
    steps:
    - stepName: Compile Liberty Images
    - stepName: Unittest Open Liberty
    - stepName: Compile FATs
  - name: git.laos.clone.checkout.branch
    defaultValue: ${github_pr_branch}
    steps:
    - stepName: Compile Liberty Images
    - stepName: Unittest Open Liberty
    - stepName: Compile FATs

steps:
- stepName: Compile Liberty Images
  coreStep: true
  workType: RTC
  timeoutInMinutes: 1440
  projectName: "Open Liberty Continuous Build on FYRE CI Orchestrator - EBC"
  dependsOn:
  - stepName: Compile FATs
    awaitOutputProperties: true
  includeProperties:
  - file: compileContinuous.properties
  - file: compile.properties
  properties:
    build.stub.target: build.CachedWSCD.CompileImageOnly
    skip.fat.tests: true
    upload.buckets.with.uuid: ${Compile FATs:execution_id}

- stepName: Unittest Open Liberty
  workType: RTC
  timeoutInMinutes: 1440
  projectName: "Open Liberty Continuous Build on FYRE CI Orchestrator - EBC"
  includeProperties:
  - file: compileContinuous.properties
  - file: compile.properties
  properties:
    build.stub.target: build.CachedWSCD.OLTest

- stepName: Compile FATs
  workType: RTC
  timeoutInMinutes: 1440
  projectName: "Open Liberty Continuous Build on FYRE CI Orchestrator - EBC"
  includeProperties:
  - file: compileContinuous.properties
  - file: compile.properties
  properties:
    build.stub.target: build.CachedWSCD.CompileFATs
    # Do not create IM buckets in this step because some require an image to compile,
    # so they are built in the Compile Liberty Images step.
    create.im.repo: false
    personal.im.build: false

- stepName: Distributed Lite FATs
  workType: FAT
  dependsOn:
    - stepName: Compile Liberty Images
      awaitOutputProperties: true
    - stepName: Compile FATs
      allowFailures: false
      awaitOutputProperties: true
  timeoutInMinutes: 1920
  properties:
    aggregationId: ${Compile Liberty Images:execution_id}
    product_image_artifact_execution_id: ${Compile Liberty Images:execution_id}
    bucket_image_artifact_execution_id: ${Compile FATs:execution_id}
    changes_summary_artifact_execution_id: ${Compile Liberty Images:execution_id}
    buildType: continuous
    command: ant -f build-test.xml localrun -propertyfile ../../../buildandbucket.properties -DhaltOnFailure=false -lib ../ant_build/lib.antClasspath
    fat.test.mode: lite
    fat_uploads_to_expect: ${Compile Liberty Images:fat_uploads_to_expect},${Compile FATs:fat_uploads_to_expect}
    fats_to_omit: "build.featureStart.part1_fat, build.featureStart.part2_fat, build.featureStart.part3_fat, build.featureStart.part4_fat, build.featureStart.part1.was_fat, build.featureStart.part2.was_fat, build.featureStart.part3.was_fat, build.featureStart.part4.was_fat, com.ibm.ws.collective.controller.deploy_fat, com.ibm.ws.health.manager.odrlib_fat, com.ibm.ws.dynamic.routing_ihs_fat, com.ibm.ws.node.scaling_fat, com.ibm.ws.scaling.member_fat_multinode, com.ibm.ws.node.health_fat"
    outputPath: /liberty/personal/2/ciorchestrator
    outputServer: libertyfs.hursley.ibm.com
    reportingOS: ubuntu22_x86
    ebcPlan: See Shortlist 
    ebcShortlist: jenkins-child.yml
    retry_failing_fats: true
    runner_projectName: ebcTestRunner
    runner_threshold: 5
    runner_max_total: 80
    runner_workType: Jenkins
    testBucketPriorityStrategy: 50%|ci-bucket-failure-predictor-v1 #We want to 50% of the time run buckets in order of predicted failures
  includeProperties:
  - file: fatMaxDurationOverrides.properties
  - file: jvms/dev/linux_x86_64.properties

- stepName: Open Liberty Feature Start FATs
  workType: FAT
  dependsOn:
    - stepName: Compile Liberty Images
      awaitOutputProperties: true
    - stepName: Compile FATs
      allowFailures: false
      awaitOutputProperties: true
  timeoutInMinutes: 1920
  properties:
    aggregationId: ${Compile Liberty Images:execution_id}
    bucket_image_artifact_execution_id: ${Compile FATs:execution_id}
    buildType: continuous
    changes_summary_artifact_execution_id: ${Compile Liberty Images:execution_id}
    command: ant -f build-test.xml localrun -propertyfile ../../../buildandbucket.properties -DhaltOnFailure=false -lib ../ant_build/lib.antClasspath
    ebcPlan: See Shortlist
    ebcShortlist: jenkins-child.yml
    fat_uploads_to_expect: ${Compile Liberty Images:fat_uploads_to_expect},${Compile FATs:fat_uploads_to_expect}
    fat.buckets.to.run: all
    fat.test.mode: full
    fatPatternToMatch: build.featureStart.part\d*_fat
    outputPath: /liberty/personal/2/ciorchestrator
    outputServer: libertyfs.hursley.ibm.com
    product_image_artifact_execution_id: ${Compile Liberty Images:execution_id}
    product_image_type_under_test: wlp-embeddable-full
    # asyncArchive.zip is 6 directories up from the wlp-embeddable-full image.
    dependenciesRelativePath: ../../../../../..
    reportingOS: ubuntu22_x86
    retry_failing_fats: true
    runner_minimum_total: 1
    runner_max_total: 4
    runner_projectName: ebcTestRunner
    runner_threshold: 4
    runner_workType: Jenkins
  includeProperties:
  - file: fatMaxDurationOverrides.properties
  - file: jvms/dev/linux_x86_64.properties

- stepName: Liberty Feature Start FATs
  workType: FAT
  dependsOn:
    - stepName: Compile Liberty Images
      awaitOutputProperties: true
    - stepName: Compile FATs
      allowFailures: false
      awaitOutputProperties: true
  timeoutInMinutes: 1920
  properties:
    aggregationId: ${Compile Liberty Images:execution_id}
    bucket_image_artifact_execution_id: ${Compile FATs:execution_id}
    buildType: continuous
    changes_summary_artifact_execution_id: ${Compile Liberty Images:execution_id}
    command: ant -f build-test.xml localrun -propertyfile ../../../buildandbucket.properties -DhaltOnFailure=false -lib ../ant_build/lib.antClasspath
    ebcPlan: See Shortlist 
    ebcShortlist: jenkins-child.yml
    fat_uploads_to_expect: ${Compile Liberty Images:fat_uploads_to_expect},${Compile FATs:fat_uploads_to_expect}
    fat.buckets.to.run: all
    fat.test.mode: full
    fatPatternToMatch: build.featureStart.part\d*.was_fat
    outputPath: /liberty/personal/2/ciorchestrator
    outputServer: libertyfs.hursley.ibm.com
    product_image_artifact_execution_id: ${Compile Liberty Images:execution_id}
    product_image_type_under_test: wlp-embeddable-full
    # asyncArchive.zip is 6 directories up from the wlp-embeddable-full image.
    dependenciesRelativePath: ../../../../../..
    reportingOS: ubuntu22_x86
    retry_failing_fats: true
    runner_minimum_total: 1
    runner_max_total: 4
    runner_projectName: ebcTestRunner
    runner_threshold: 4
    runner_workType: Jenkins
  includeProperties:
  - file: fatMaxDurationOverrides.properties
  - file: jvms/dev/linux_x86_64.properties

- stepName: z/OS FATs
  workType: FAT
  dependsOn:
    - stepName: Compile Liberty Images
      awaitOutputProperties: true
    - stepName: Compile FATs
      allowFailures: false
      awaitOutputProperties: true
  timeoutInMinutes: 1920
  properties:
    aggregationId: ${Compile Liberty Images:execution_id}
    product_image_artifact_execution_id: ${Compile Liberty Images:execution_id}
    bucket_image_artifact_execution_id: ${Compile FATs:execution_id}
    changes_summary_artifact_execution_id: ${Compile Liberty Images:execution_id}
    buildType: continuous
    command: ant -f build-ztest.xml localrun -propertyfile ../../../buildandbucket.properties -DhaltOnFailure=false -lib ../ant_build/lib.antClasspath
    ebcPlan: managed-pool-zos-fat-test-jenkins-middleware.yml
    fat.buckets.to.run: all
    fatPatternToMatch: .*_zfat
    fat.test.mode: lite
    outputPath: /liberty/personal/2/ciorchestrator
    outputServer: libertyfs.hursley.ibm.com
    product_image_type_under_test: wlp-zosimage
    reportingOS: zOS
    retry_failing_fats: true
    runner_projectName: ebcTestRunner
    runner_workType: Jenkins
    runner_threshold: 13
    runner_max_total: 4
    runZosTests: true
    testBucketPriorityStrategy: 50%|ci-bucket-failure-predictor-v1 #We want to 50% of the time run buckets in order of predicted failures
  includeProperties:
  - file: jvms/dev/zOS_s390_64.properties

- stepName: z/OS Unittests
  workType: FAT
  dependsOn:
    - stepName: Compile Liberty Images
      awaitOutputProperties: true
    - stepName: Compile FATs
      allowFailures: false
      awaitOutputProperties: true
  timeoutInMinutes: 1920
  properties:
    aggregationId: ${Compile Liberty Images:execution_id}
    product_image_artifact_execution_id: ${Compile Liberty Images:execution_id}
    bucket_image_artifact_execution_id: ${Compile FATs:execution_id}
    changes_summary_artifact_execution_id: ${Compile Liberty Images:execution_id}
    buildType: continuous
    command: ant -f build-zunittest.xml unittest -propertyfile ../../../buildandbucket.properties -DhaltOnFailure=false -lib ../ant_build/lib.antClasspath -lib ../prereq.published/lib -lib ../ant_build/lib/biz.aQute.bnd-3.3.0.jar -lib ../ant_build/lib/jsoup-1.7.2.jar
    ebcPlan: managed-pool-zos-fat-test-jenkins-middleware.yml
    fat.buckets.to.run: all
    fatPatternToMatch: .*_ztest
    fat.test.mode: lite
    outputPath: /liberty/personal/2/ciorchestrator
    outputServer: libertyfs.hursley.ibm.com
    product_image_type_under_test: wlp-zosimage
    reportingOS: zOS
    retry_failing_fats: true
    runner_projectName: ebcTestRunner
    runner_workType: Jenkins
    runner_threshold: 5
    runner_max_total: 2
    runZosTests: true
    testBucketPriorityStrategy: 50%|ci-bucket-failure-predictor-v1 #We want to 50% of the time run buckets in order of predicted failures
  includeProperties:
  - file: jvms/dev/zOS_s390_64_java11.properties
