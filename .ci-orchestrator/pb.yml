type: pipeline_definition
product: Liberty
name: Open Liberty Personal Build
description: "Run a Personal Pipeline against an Open Liberty PR."
triggers:
- type: github
  description: "Runs an optimised Open Liberty Personal Pipeline, running FATs using the CI Orchestrator/Jenkins."
  triggerName: "ol-pbbeta"
  triggerRank: 50
  groups: ["LibertyDev"]
  keyword: "!pbbeta"
  aliasKeywords:
    - "#build"
    - "#pbbeta"
    - "!build"
  propertyDefinitions:
    # If a user defines this property, set it for all steps that use it except the "Distributed Full FATs" step.
    - name: fat.buckets.to.run
      defaultValue: ${PR Changes:fat.buckets.to.run}
      steps:
        - stepName: Compile Liberty Images
        - stepName: Compile FATs
        - stepName: Determine FATs Needed
        - stepName: Distributed Lite FATs
    # Enable the testing of the checkpoint feature which additionally runs any compiled FATs declaring that they test the checkpoint feature in a CRIU environment.
    # Note: The FATs will run in this step will *only* run the test cases annotated with CheckpointTest. The FATs will also run in the standard FAT steps where they will only run un-annotated test cases.
    - name: spawn.checkpoint
      defaultValue: "true"
      steps:
        - stepName: Checkpoint FATs (Lite)
    # Allow user to override ebc.shortlist for only parent steps.
    - name: ebc.shortlist
      defaultValue: parentbuild-personal.yml
      steps:
        - stepName: Compile Liberty Images
        - stepName: Unittest Open Liberty
        - stepName: Compile FATs

- type: manual
  triggerName: "ol-pbbeta-manual"
  description: "Runs an optimised Open Liberty Personal Pipeline, running FATs using the CI Orchestrator/Jenkins."
  triggerRank: 50
  groups: ["LibertyDev"]
  propertyDefinitions:
    - name: github_pr_user
      isRequired: true
      defaultValue: "Name of Open Liberty user or organization for checkout."
      description: "Name of Open Liberty user or organization for checkout."
    - name: github_pr_branch
      isRequired: true
      defaultValue: "Name of Open Liberty branch to checkout."
      description: "Name of Open Liberty branch to checkout."
    - name: github_pr_number
      isRequired: true
      defaultValue: "PR number in Open Liberty to checkout."
      description: "PR number in Open Liberty to checkout."
    - name: github_pr_api
      defaultValue: "https://api.github.com/repos/OpenLiberty/open-liberty/pulls/${github_pr_number}"
    # Enable the testing of the checkpoint feature which additionally runs any compiled FATs declaring that they test the checkpoint feature in a CRIU environment.
    # Note: The FATs will run in this step will *only* run the test cases annotated with CheckpointTest. The FATs will also be run in the standard FAT steps where they will only run unannotated test cases.
    - name: spawn.checkpoint
      defaultValue: "true"
      steps:
        - stepName: Checkpoint FATs (Lite)
    # Allow user to override ebc.shortlist for only parent steps.
    - name: ebc.shortlist
      defaultValue: parentbuild-personal.yml
      steps:
        - stepName: Compile Liberty Images
        - stepName: Unittest Open Liberty
        - stepName: Compile FATs

- type: github
  triggerName: "ol-fullpbbeta"
  description: "Runs an optimised Open Liberty Personal Pipeline, including building the IM and z/OS images, then running all FATs using the CI Orchestrator/Jenkins."
  triggerRank: 50
  groups: ["LibertyDev"]
  keyword: "!fullpbbeta"
  aliasKeywords:
    - "#fullpbbeta"
  propertyDefinitions:
    # Run all buckets in full mode.
    - name: fat.buckets.to.run
      defaultValue: all
      steps:
        - stepName: Compile Liberty Images
        - stepName: Compile FATs
        - stepName: Distributed Full FATs
    # Run IM buckets.
    - name: create.im.repo
      defaultValue: true
      steps:
        - stepName: Compile Liberty Images
    # Run z/OS buckets.
    - name: spawn.zos
      defaultValue: true
      steps:
        - stepName: Compile Liberty Images
        - stepName: Compile FATs
        - stepName: z/OS FATs
        - stepName: z/OS Unittests
    # Enable the testing of the checkpoint feature which additionally runs any compiled FATs declaring that they test the checkpoint feature in a CRIU environment.
    # Note: The FATs will run in this step will *only* run the test cases annotated with CheckpointTest. The FATs will also be run in the standard FAT steps where they will only run unannotated test cases.
    - name: spawn.checkpoint
      defaultValue: "true"
      steps:
        - stepName: Checkpoint FATs (Lite)
    # Allow user to override ebc.shortlist for only parent steps.
    - name: ebc.shortlist
      defaultValue: parentbuild-personal.yml
      steps:
        - stepName: Compile Liberty Images
        - stepName: Unittest Open Liberty
        - stepName: Compile FATs

steps:
- stepName: PR Changes
  workType: PRChangesDetection
  timeoutInMinutes: 30
  properties:
    githubPRApi: ${github_pr_api}
    githubPRNumber: ${github_pr_number}

- stepName: Copyright Header Check
  workType: Jenkins
  projectName: copyrightHeaderCheck
  timeoutInMinutes: 120
  properties:
    githubPRApi: ${github_pr_api}
    githubPRNumber: ${github_pr_number}

- stepName: Prohibited Terms Check
  workType: Jenkins
  projectName: prohibitedTermsCheck
  timeoutInMinutes: 120
  properties:
    githubPRApi: ${github_pr_api}
    githubPRNumber: ${github_pr_number}

- stepGroup: Compile Liberty Images
  projectName: "Open Liberty Personal Build CI Orchestrator - EBC"
  dependsOn:
    - stepName: PR Changes
      awaitOutputProperties: true
  properties:
    create.im.repo: ${PR Changes:create.im.repo}
    disable.run.createDoc: ${PR Changes:disable.run.createDoc}
    disable.run.runBvtTests: ${PR Changes:disable.run.runBvtTests}
    disable.run.runUnitTests: ${PR Changes:disable.run.runUnitTests}
    fat.buckets.to.run: ${PR Changes:fat.buckets.to.run}
    fat.run.count: ${PR Changes:fat.run.count}
    personal.im.build: ${PR Changes:personal.im.build}
    run.chkpii: ${PR Changes:run.chkpii}
    run.findbugs: ${PR Changes:run.findbugs}
    run.packaging.verification: ${PR Changes:run.packaging.verification}
    skip.open.liberty.build.if.possible: ${PR Changes:skip.open.liberty.build.if.possible}
    skip.open.liberty.fats.if.possible: ${PR Changes:skip.open.liberty.fats.if.possible}
    spawn.fullfat.buckets: ${PR Changes:spawn.fullfat.buckets}
    spawn.zos: ${PR Changes:spawn.zos}
  includeProperties:
    - file: compilePersonal.properties
  includeSteps:
    - file: steps/compileLibertyImages.yml

- stepGroup: Unittest Open Liberty
  projectName: "Open Liberty Personal Build CI Orchestrator - EBC"
  dependsOn:
    - stepName: PR Changes
      awaitOutputProperties: true
  conditionalRun:
    - type: ifFalse
      value: ${disable.run.runUnitTests}
  properties:
    disable.run.runUnitTests: ${PR Changes:disable.run.runUnitTests}
  includeProperties:
    - file: compilePersonal.properties
  includeSteps:
    - file: steps/unittestOpenLiberty.yml

- stepGroup: Compile FATs
  projectName: "Open Liberty Personal Build CI Orchestrator - EBC"
  dependsOn:
    - stepName: PR Changes
      awaitOutputProperties: true
  properties:
    fat.buckets.to.run: ${PR Changes:fat.buckets.to.run}
    skip.open.liberty.build.if.possible: ${PR Changes:skip.open.liberty.build.if.possible}
    skip.open.liberty.fats.if.possible: ${PR Changes:skip.open.liberty.fats.if.possible}
    spawn.zos: ${PR Changes:spawn.zos}
  includeProperties:
    - file: compilePersonal.properties
  includeSteps:
    - file: steps/compileFATs.yml

- stepGroup: Determine FATs Needed
  includeSteps:
    - file: steps/determineFATsNeeded.yml

- stepGroup: Run FATs
  dependsOn:
    - stepName: PR Changes
      awaitOutputProperties: true
    - stepName: Compile Liberty Images
      awaitOutputProperties: true
    - stepName: Compile FATs
      allowFailures: false
      awaitOutputProperties: true
    - stepName: Determine FATs Needed
      allowFailures: true
  properties:
    aggregationId: ${Compile Liberty Images:execution_id}
    product_image_artifact_execution_id: ${Compile Liberty Images:execution_id}
    bucket_image_artifact_execution_id: ${Compile FATs:execution_id}
    changes_summary_artifact_execution_id: ${Compile Liberty Images:execution_id}
    buildType: personal
    spawn.feature.start: ${PR Changes:fat.buckets.to.run}
    spawn.zos: ${PR Changes:spawn.zos}
  includeSteps:
    - file: steps/fats/liteFATs.yml
    - file: steps/fats/fullFATs.yml
    - file: steps/fats/openLibertyFeatureStartFATs.yml
    - file: steps/fats/libertyFeatureStartFATs.yml
    - file: steps/fats/zOSFATs.yml
    - file: steps/fats/zOSUnittests.yml
    - file: steps/fats/liteCheckpointFATs.yml
