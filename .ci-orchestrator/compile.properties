allowed.failing.suites=
async.thread.count=3
async.thread.count.for.bluemix=1
async.thread.count.for.extended=1
async.thread.count.for.nd=1
# specify a non-standard build target
build.stub.target=build.CachedWSCD.Combined
# Remove the '.disabled' suffix to re-enable autofvt.zip creation
create.autofvt.zip.disabled=true
# Setting create.im.repo to true will implicitly turn spawn.zos to true
create.im.repo=true
data.collection.commits.url=http://kerrigan.hursley.ibm.com:9093/analytics_dataCollection/changesetToDB/commit
delete.fat.buckets=true
# Delete output/results after FAT has run
delete.run.fats=true
delete.tests.from.GSA=true
disable.run.buildSamples=true
disable.run.packagePII=false
disable.run.runBvtTests=false
disable.run.runUnitTests=false
extra.ant.options=-Dcom.ibm.team.repository.common.transport.TeamServerConfiguration.socketTimeout=3600000 -Dcom.ibm.team.repository.common.transport.TeamServerConfiguration.connectTimeout=1800000 -Dteam.build.retry=true
fat.buckets.to.run=all
fat.run.count=1
fat.test.local.ldap.server=true
# This is the base snapshot name compared by the fix list application
fixlist.lastGMsnapshotName=85 Stabilization Release Build - Liberty_cl50520150305-2202
# The server used to download git repository baseline
git.clone.download.server=libfsfe06.hursley.ibm.com
# SSH URL of the git repository to clone - typically a fork of open-liberty (e.g. git@github.com:username/open-liberty.git).
git.laos.clone.repository.sshUrl=git@github.com:${git.laos.clone.repository.username}/open-liberty.git
# Your username or "OpenLiberty"
git.laos.clone.repository.username=OpenLiberty
# Branch checked out before build launch (e.g. username/new.feature), or "release".
git.clone.checkout.branch=release
git.launcher.clone.sshUrl=git@github.ibm.com:${git.launcher.clone.username}/rtc-build-launcher.git
git.launcher.clone.username=websphere
# OVERRIDE while libertyfs is down.  Remove libertyfs. from property name when libertyfs is working correctly.
gsa.server=libfsfe06.hursley.ibm.com
gsaUpload=true
ignoreBuildStatusForAsyncLaunch=true
image.gsa.server=libfsfe06.hursley.ibm.com
liberty.fs.management=true
nagios.monitoring=true
# A hack to force 32-bit JVM. The EBC JBEs launch with 64-bit JREs, but some parts of our infrastructure, such as "will chkpii run ok" detection and jshint, work much better with 32-bit JVMs.
os.arch=x86
# The definition name for the packaging verification build.
packaging.verification.build.name=Liberty Packaging Verification Build - NEW EBC
# Whether the build should collect nmon data
perf.nmon=true
personal.async.target.name=Liberty Async Tests - EBC
report.testing.platform=true
run.chkpii=true
# Create zipped image
run.createImage=true
# create plugin for IBM workload deployer
run.createIwdImage=true
# If true, run FAT in async build
run.fat.async=true
# Run findbugs target
run.findbugs=false
# Whether or not kick off the fix list application
run.fixlist=false
run.jshint=false
# If true run the media verification tests
run.mvt=true
# If true, run the async packaging verification build to check for install file changes.
run.packaging.verification=true
run.unittest.async=false
# If the Open Liberty build is being skipped (see skip.open.liberty.build.if.possible property), set this true to also skip executing the Open Liberty FATs.  Otherwise, if this is false the Open Liberty FATs will still be executed.
skip.open.liberty.fats.if.possible=false
soe.report.results=true
soe.reporting.install.type=Archive
soe.reporting.publish=false
soe.reporting.release.version=9.0.0.0
soe.reporting.topology=Standalone
soe.target.stream=Liberty
# If true, will build and test z-specific parts of Liberty. If you do set this, make sure there are no spaces in your workspace name! Under normal circumstances, there should be no need to set this to be true.
spawn.zos=true
test.coverage=false
# Set to true to force all bvt and fat logs to be uploaded even if tests pass.
upload.all.test.logs=false
use.libertyfs.jvm.cache=true
wait.for.async=true
zos.aggregator.target.name=Liberty z/OS Test Build NEW EBC
# The name of the z/OS build definition to use.
zos.target.name=Liberty z/OS Packaging Build EBC
# Ensure we get the ProductImageUploaded and the BucketImageUploaded events
post.upload.events=true
# ci-orchestrator builds should post activity events
post.activity.events=true
