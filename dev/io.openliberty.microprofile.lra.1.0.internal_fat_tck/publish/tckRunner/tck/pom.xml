<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed under the Apache License, Version 2.0 (the "License"); you 
	may not use this file except in compliance with the License. You may obtain 
	a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless 
	required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.openliberty.microprofile.lra</groupId>
	<artifactId>tck.runner.tck</artifactId>
	<version>1.0-SNAPSHOT</version>
	<name>MicroProfile LRA TCK Runner TCK Module</name>

	<properties>
		<microprofile.lra.version>1.0-M2</microprofile.lra.version>
		<microprofile.config.version>1.3</microprofile.config.version>

		<arquillian.version>1.3.0.Final</arquillian.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<!-- the below is used in arquillian.xml -->
		<wlp>${wlp}</wlp>
		<defaultSuiteFiles>tck-suite.xml</defaultSuiteFiles>
		<suiteXmlFile>${defaultSuiteFiles}</suiteXmlFile>
		<targetDirectory>${project.basedir}/target</targetDirectory>
		
		<!-- This is usually overridden in the TCK launcher test which kicks off this maven build-->
		<lraTestsToRun>**/*Test*.java</lraTestsToRun>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>${arquillian.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
 
		<dependency>
			<groupId>com.ibm.ws</groupId>
			<artifactId>fattest.simplicity</artifactId>
			<version>1</version>
			<scope>system</scope>
			<!-- This will point to build/libs/autoFVT/lib/fattest.simplicity.jar -->
			<systemPath>${project.basedir}/../../../lib/fattest.simplicity.jar</systemPath> 
			<!-- If running the maven pom file outside of a fat test build, then you need to run
			mvn -Dwlp=<build-path>/build.image/wlp
			And set the systemPath as below --> 
			<!-- <systemPath>${project.basedir}/../../../build/libs/autoFVT/lib/fattest.simplicity.jar</systemPath>--> 
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.lra</groupId>
			<artifactId>microprofile-lra-tck</artifactId>
			<version>${microprofile.lra.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.lra</groupId>
			<artifactId>microprofile-lra-api</artifactId>
			<version>${microprofile.lra.version}</version>
			<!-- TODO not sure why this was here for fault tolerance -->
			<!-- but microprofile.metrics doesn't have this -->
			<!-- <systemPath>${com.ibm.websphere.org.eclipse.microprofile.faulttolerance.2.0}</systemPath> 
				<scope>system</scope> -->
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.config</groupId>
			<artifactId>microprofile-config-api</artifactId>
			<version>${microprofile.config.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.openliberty.arquillian</groupId>
			<artifactId>arquillian-liberty-managed</artifactId>
			<version>1.0.6</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<directory>${targetDirectory}</directory>
		<defaultGoal>clean test</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.9</version>
				<executions>
					<execution>
						<id>build-classpath</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>build-classpath</goal>
						</goals>
						<configuration>
							<!-- configure the plugin here -->
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<!-- Needed for ZOS. sourceEncoding is needed because arquillian calls String.getBtytes(). 
						Attach is needed because because Arquillian uses com.sun.tools.attach to find VMs -->
					<argLine>-Dfile.encoding=${project.build.sourceEncoding} -Dcom.ibm.tools.attach.enable=yes</argLine> 
					<systemPropertyVariables>
						<wlp>${wlp}</wlp>
						<tck_server>${tck_server}</tck_server>
						<tck_port>${tck_port}</tck_port>
						<lra.tck.base.url>http://localhost:${tck_port}</lra.tck.base.url>
					</systemPropertyVariables>
					<dependenciesToScan>
						<dependency>org.eclipse.microprofile.lra:microprofile-lra-tck</dependency>
					</dependenciesToScan>
					<includes>
						<include>${lraTestsToRun}</include>
					</includes>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
