<!--
    Copyright (c) 2022 IBM Corporation and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License 2.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-2.0/
    
    SPDX-License-Identifier: EPL-2.0

    Contributors:
        IBM Corporation - initial API and implementation
 -->

<server>

<!-- RP's -->
<!-- RP Does NOT propagate -->

    <authFilter 
    	id="authFilterThirdPartyOP_noExtraClaims_3rdPartyDoesNotPropagate">
        <requestUrl
            matchType="contains"
            urlPattern="/oidc/endpoint/OP_noExtraClaims_3rdPartyDoesNotPropagate/authorize" />
    </authFilter>

    <openidConnectClient 
    	id="RP_noExtraClaims_3rdPartyDoesNotPropagate"
        clientId="oidcclient_thirdparty_noExtraClaims"
        clientSecret="password"
        grantType="${testGrantType}"
        discoveryEndpointUrl="https://localhost:${bvt.prop.security_3_HTTP_default.secure}/oidc/endpoint/OP_3rdParty_propagateNoClaims/.well-known/openid-configuration"
        authFilterRef="authFilterThirdPartyOP_noExtraClaims_3rdPartyDoesNotPropagate">
    </openidConnectClient>

    <authFilter 
    	id="authFilterThirdPartyOP_propagateGroupIdsIdTokenClaims_3rdPartyDoesNotPropagate">
        <requestUrl
            matchType="contains"
            urlPattern="/oidc/endpoint/OP_propagateGroupIdsIdTokenClaims_3rdPartyDoesNotPropagate/authorize" />
    </authFilter>

    <openidConnectClient 
    	id="RP_propagateGroupIdsIdTokenClaims_3rdPartyDoesNotPropagate"
        clientId="oidcclient_thirdparty_propagateGroupIdsIdTokenClaims"
        clientSecret="password"
        grantType="${testGrantType}"
        discoveryEndpointUrl="https://localhost:${bvt.prop.security_3_HTTP_default.secure}/oidc/endpoint/OP_3rdParty_propagateNoClaims/.well-known/openid-configuration"
        authFilterRef="authFilterThirdPartyOP_propagateGroupIdsIdTokenClaims_3rdPartyDoesNotPropagate">
    </openidConnectClient>

    <authFilter 
    	id="authFilterThirdPartyOP_propagate1TestClaimIdTokenClaims_3rdPartyDoesNotPropagate">
        <requestUrl
            matchType="contains"
            urlPattern="/oidc/endpoint/OP_propagate1TestClaimIdTokenClaims_3rdPartyDoesNotPropagate/authorize" />
    </authFilter>

    <openidConnectClient 
    	id="RP_propagate1TestClaimIdTokenClaims_3rdPartyDoesNotPropagate"
        clientId="oidcclient_thirdparty_propagate1TestClaimIdTokenClaims"
        clientSecret="password"
        grantType="${testGrantType}"
        discoveryEndpointUrl="https://localhost:${bvt.prop.security_3_HTTP_default.secure}/oidc/endpoint/OP_3rdParty_propagateNoClaims/.well-known/openid-configuration"
        authFilterRef="authFilterThirdPartyOP_propagate1TestClaimIdTokenClaims_3rdPartyDoesNotPropagate">
    </openidConnectClient>

    <authFilter 
    	id="authFilterThirdPartyOP_propagate2TestClaimsIdTokenClaims_3rdPartyDoesNotPropagate">
        <requestUrl
            matchType="contains"
            urlPattern="/oidc/endpoint/OP_propagate2TestClaimsIdTokenClaims_3rdPartyDoesNotPropagate/authorize" />
    </authFilter>

    <openidConnectClient 
    	id="RP_propagate2TestClaimsIdTokenClaims_3rdPartyDoesNotPropagate"
        clientId="oidcclient_thirdparty_propagate2TestClaimsIdTokenClaims"
        clientSecret="password"
        grantType="${testGrantType}"
        discoveryEndpointUrl="https://localhost:${bvt.prop.security_3_HTTP_default.secure}/oidc/endpoint/OP_3rdParty_propagateNoClaims/.well-known/openid-configuration"
        authFilterRef="authFilterThirdPartyOP_propagate2TestClaimsIdTokenClaims_3rdPartyDoesNotPropagate">
    </openidConnectClient>

    <authFilter 
    	id="authFilterThirdPartyOP_propagate3TestClaimsIdTokenClaims_3rdPartyDoesNotPropagate">
        <requestUrl
            matchType="contains"
            urlPattern="/oidc/endpoint/OP_propagate3TestClaimsIdTokenClaims_3rdPartyDoesNotPropagate/authorize" />
    </authFilter>

    <openidConnectClient 
    	id="RP_propagate3TestClaimsIdTokenClaims_3rdPartyDoesNotPropagate"
        clientId="oidcclient_thirdparty_propagate3TestClaimsIdTokenClaims"
        clientSecret="password"
        grantType="${testGrantType}"
        discoveryEndpointUrl="https://localhost:${bvt.prop.security_3_HTTP_default.secure}/oidc/endpoint/OP_3rdParty_propagateNoClaims/.well-known/openid-configuration"
        authFilterRef="authFilterThirdPartyOP_propagate3TestClaimsIdTokenClaims_3rdPartyDoesNotPropagate">
    </openidConnectClient>

<!-- RP Does propagate -->

    <authFilter 
    	id="authFilterThirdPartyOP_noExtraClaims_3rdPartyPropagates">
        <requestUrl
            matchType="contains"
            urlPattern="/oidc/endpoint/OP_noExtraClaims_3rdPartyPropagates/authorize" />
    </authFilter>

    <openidConnectClient 
    	id="RP_noExtraClaims_3rdPartyPropagates"
        clientId="oidcclient_thirdparty_noExtraClaims"
        clientSecret="password"
        grantType="${testGrantType}"
        discoveryEndpointUrl="https://localhost:${bvt.prop.security_3_HTTP_default.secure}/oidc/endpoint/OP_3rdParty_propagateAllClaims/.well-known/openid-configuration"
        authFilterRef="authFilterThirdPartyOP_noExtraClaims_3rdPartyPropagates">
    </openidConnectClient>

    <authFilter 
    	id="authFilterThirdPartyOP_propagateGroupIdsIdTokenClaims_3rdPartyPropagates">
        <requestUrl
            matchType="contains"
            urlPattern="/oidc/endpoint/OP_propagateGroupIdsIdTokenClaims_3rdPartyPropagates/authorize" />
    </authFilter>

    <openidConnectClient 
    	id="RP_propagateGroupIdsIdTokenClaims_3rdPartyPropagates"
        clientId="oidcclient_thirdparty_propagateGroupIdsIdTokenClaims"
        clientSecret="password"
        grantType="${testGrantType}"
        discoveryEndpointUrl="https://localhost:${bvt.prop.security_3_HTTP_default.secure}/oidc/endpoint/OP_3rdParty_propagateAllClaims/.well-known/openid-configuration"
        authFilterRef="authFilterThirdPartyOP_propagateGroupIdsIdTokenClaims_3rdPartyPropagates">
    </openidConnectClient>

    <authFilter 
    	id="authFilterThirdPartyOP_propagate1TestClaimIdTokenClaims_3rdPartyPropagates">
        <requestUrl
            matchType="contains"
            urlPattern="/oidc/endpoint/OP_propagate1TestClaimIdTokenClaims_3rdPartyPropagates/authorize" />
    </authFilter>

    <openidConnectClient 
    	id="RP_propagate1TestClaimIdTokenClaims_3rdPartyPropagates"
        clientId="oidcclient_thirdparty_propagate1TestClaimIdTokenClaims"
        clientSecret="password"
        grantType="${testGrantType}"
        discoveryEndpointUrl="https://localhost:${bvt.prop.security_3_HTTP_default.secure}/oidc/endpoint/OP_3rdParty_propagateAllClaims/.well-known/openid-configuration"
        authFilterRef="authFilterThirdPartyOP_propagate1TestClaimIdTokenClaims_3rdPartyPropagates">
    </openidConnectClient>

    <authFilter 
    	id="authFilterThirdPartyOP_propagate2TestClaimsIdTokenClaims_3rdPartyPropagates">
        <requestUrl
            matchType="contains"
            urlPattern="/oidc/endpoint/OP_propagate2TestClaimsIdTokenClaims_3rdPartyPropagates/authorize" />
    </authFilter>

    <openidConnectClient 
    	id="RP_propagate2TestClaimsIdTokenClaims_3rdPartyPropagates"
        clientId="oidcclient_thirdparty_propagate2TestClaimsIdTokenClaims"
        clientSecret="password"
        grantType="${testGrantType}"
        discoveryEndpointUrl="https://localhost:${bvt.prop.security_3_HTTP_default.secure}/oidc/endpoint/OP_3rdParty_propagateAllClaims/.well-known/openid-configuration"
        authFilterRef="authFilterThirdPartyOP_propagate2TestClaimsIdTokenClaims_3rdPartyPropagates">
    </openidConnectClient>

    <authFilter 
    	id="authFilterThirdPartyOP_propagate3TestClaimsIdTokenClaims_3rdPartyPropagates">
        <requestUrl
            matchType="contains"
            urlPattern="/oidc/endpoint/OP_propagate3TestClaimsIdTokenClaims_3rdPartyPropagates/authorize" />
    </authFilter>

    <openidConnectClient 
    	id="RP_propagate3TestClaimsIdTokenClaims_3rdPartyPropagates"
        clientId="oidcclient_thirdparty_propagate3TestClaimsIdTokenClaims"
        clientSecret="password"
        grantType="${testGrantType}"
        discoveryEndpointUrl="https://localhost:${bvt.prop.security_3_HTTP_default.secure}/oidc/endpoint/OP_3rdParty_propagateAllClaims/.well-known/openid-configuration"
        authFilterRef="authFilterThirdPartyOP_propagate3TestClaimsIdTokenClaims_3rdPartyPropagates">
    </openidConnectClient>

<!-- override claims clients -->
<!-- iss -->
    <authFilter 
    	id="authFilterThirdPartyOP_issClaimInIdToken">
        <requestUrl
            matchType="contains"
            urlPattern="/oidc/endpoint/OP_issClaimInIdToken/authorize" />
    </authFilter>

    <openidConnectClient id="RP_issClaimInIdToken"
        clientId="oidcclient_thirdparty_issClaimInIdToken"
        clientSecret="password"
        grantType="${testGrantType}"
        discoveryEndpointUrl="https://localhost:${bvt.prop.security_3_HTTP_default.secure}/oidc/endpoint/OP_3rdParty_propagateAllClaims/.well-known/openid-configuration"
        authFilterRef="authFilterThirdPartyOP_issClaimInIdToken">
    </openidConnectClient>

<!-- sub -->
    <authFilter 
    	id="authFilterThirdPartyOP_subClaimInIdToken">
        <requestUrl
            matchType="contains"
            urlPattern="/oidc/endpoint/OP_subClaimInIdToken/authorize" />
    </authFilter>

    <openidConnectClient id="RP_subClaimInIdToken"
        clientId="oidcclient_thirdparty_subClaimInIdToken"
        clientSecret="password"
        grantType="${testGrantType}"
        discoveryEndpointUrl="https://localhost:${bvt.prop.security_3_HTTP_default.secure}/oidc/endpoint/OP_3rdParty_propagateAllClaims/.well-known/openid-configuration"
        authFilterRef="authFilterThirdPartyOP_subClaimInIdToken">
    </openidConnectClient>

<!-- aud -->
    <authFilter 
    	id="authFilterThirdPartyOP_audClaimInIdToken">
        <requestUrl
            matchType="contains"
            urlPattern="/oidc/endpoint/OP_audClaimInIdToken/authorize" />
    </authFilter>

    <openidConnectClient id="RP_audClaimInIdToken"
        clientId="oidcclient_thirdparty_audClaimInIdToken"
        clientSecret="password"
        grantType="${testGrantType}"
        discoveryEndpointUrl="https://localhost:${bvt.prop.security_3_HTTP_default.secure}/oidc/endpoint/OP_3rdParty_propagateAllClaims/.well-known/openid-configuration"
        authFilterRef="authFilterThirdPartyOP_audClaimInIdToken">
    </openidConnectClient>

</server>
