/*******************************************************************************
 * Copyright (c) 2021 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/

//evaluationDependsOn(':com.ibm.ws.security.oidc.server_fat') // Need in order to access project's autoFvtDir prop

repositories {
  if (isUsingArtifactory) {
    maven {
      credentials {
        username userProps.getProperty("artifactory.download.user")
        password userProps.getProperty("artifactory.download.token")
      }
      url ("https://" + gradle.userProps.getProperty("artifactory.download.server") + "/artifactory/wasliberty-maven-remote")
    }
  } else {
    mavenCentral()
  }
}


dependencies {
   requiredLibs project(':com.ibm.ws.security.fat.common'),
                project(':com.ibm.ws.security.oidc.server_fat'),
                project(':com.ibm.ws.security.oauth.oidc_fat.common'),
                project(':com.ibm.ws.com.meterware.httpunit.1.7'),
                project(':com.ibm.ws.crypto.passwordutil'),
                fileTree("${project(':com.ibm.ws.security.oauth.oidc_fat.common').buildDir}/collectedJars") { include '*.jar' },
                'jtidy:jtidy:4aug2000r7-dev',
                'rhino:js:1.6R5'
                
  /*
   * Previously we had an uber jar named htmlunit-2.20-OSGi.jar. It appears to have contained all of
   * the runtime dependencies for htmlunit. Instead of generating an uber jar, we'll add the dependencies
   * here. The uber jar also was configured to be an OSGi bundle, but it is not necessary for this bucket.
   */ 
  requiredLibs project(':com.ibm.ws.org.apache.commons.io'),        // htmlunit-2.44.0 --> 2.8.0
               project(':com.ibm.ws.org.apache.commons.lang3'),     // htmlunit-2.44.0 --> 3.11
               'net.sourceforge.htmlunit:htmlunit-core-js:2.44.0',
               'net.sourceforge.htmlunit:htmlunit-cssparser:1.6.0',
               'net.sourceforge.htmlunit:neko-htmlunit:2.44.0',
               'org.apache.httpcomponents:httpmime:4.5.12',
               'org.brotli:dec:0.1.2',
               'xalan:xalan:2.7.2',
               'xerces:xercesImpl:2.11.0'
}

addRequiredLibraries.dependsOn addJakartaTransformer


/******************************************************************
 ******************************************************************
 **
 ** Copy feature bundles and applications to specific servers.
 **
 ******************************************************************
 ******************************************************************/
autoFVT.dependsOn ':com.ibm.ws.security.oidc.server_fat:assemble'

autoFVT.doFirst {
  /*
   * This is a HACK to generate the fat-metadata.json file when starting the FVT framework.
   */
  copy {
    from new File(project(':com.ibm.ws.security.oidc.server_fat').projectDir, 'publish/files/serversettings')
    into new File(autoFvtDir, 'lib/LibertyFATTestFiles/serversettings')
    include '*.xml'
  }
}

autoFVT.doLast {

  /*
   * Copy the local ApacheDS LDAP instances. 
   */
  copy {
    from project(':com.ibm.ws.org.apache.directory.server').projectDir
    into autoFvtDir
    include 'apacheds-2.0.0-M15/**'
  }
  
  
  /*
   * Copy security internals test feature.
   */
  copy {
    from new File(project(':com.ibm.ws.security.oidc.server_fat').projectDir, 'publish/test-features/securitylibertyinternals-1.0.mf')
    into new File(autoFvtDir, 'lib/LibertyFATTestFiles/lib/features')
  }
  copy {
    from new File(project(':com.ibm.ws.security.oidc.server_fat').projectDir, 'publish/test-features/securitylibertyinternals-1.0.mf')
    into new File(autoFvtDir, 'lib/LibertyFATTestFiles/internalFeatures')
  }
  
  
  /*
   * Copy the OIDC TAI bundle and feature.
   */
  copy {
    from project(':com.ibm.ws.security.oidc.server_fat').buildDir
    into new File(autoFvtDir, 'lib/LibertyFATTestFiles/lib')
    include 'com.ibm.ws.security.tai.jar', 'com.ibm.ws.security.tai.jakarta.jar'
    rename 'com.ibm.ws.security.tai.jar', 'com.ibm.ws.security.tai_1.0.jar'
    rename 'com.ibm.ws.security.tai.jakarta.jar', 'com.ibm.ws.security.tai_2.0.jar'
  }
  copy {
    from new File(project(':com.ibm.ws.security.oidc.server_fat').projectDir, 'publish/test-features')
    into new File(autoFvtDir, 'lib/LibertyFATTestFiles/lib/features')
    include 'oidcTai-1.0.mf', 'oidcTai-2.0.mf'
  }
  copy {
    from new File(project(':com.ibm.ws.security.oidc.server_fat').projectDir, 'publish/test-features/l10n/customTai.properties')
    into new File(autoFvtDir, 'lib/LibertyFATTestFiles/lib/features/l10n')
  }
  
  
  /*
   * Copy the sample TAI bundle feature.
   */
  copy {
    from project(':com.ibm.ws.security.oidc.server_fat').buildDir
    into new File(autoFvtDir, 'lib/LibertyFATTestFiles/lib')
    include 'com.ibm.ws.security.tai.sample.jar', 'com.ibm.ws.security.tai.sample.jakarta.jar'
    rename 'com.ibm.ws.security.tai.sample.jar', 'com.ibm.ws.security.tai.sample_1.0.jar'
    rename 'com.ibm.ws.security.tai.sample.jakarta.jar', 'com.ibm.ws.security.tai.sample_2.0.jar'
  }
  copy {
    from new File(project(':com.ibm.ws.security.oidc.server_fat').projectDir, 'publish/test-features')
    include 'sampleTai-1.0.mf', 'sampleTai-2.0.mf'
    into new File(autoFvtDir, 'lib/LibertyFATTestFiles/lib/features')
  }
  copy {
    from new File(project(':com.ibm.ws.security.oidc.server_fat').projectDir, 'publish/test-features/l10n/sampleTai.properties')
    into new File(autoFvtDir, 'lib/LibertyFATTestFiles/lib/features/l10n')
  }
  
  
  /*
   * Copy published servers and artifacts from com.ibm.ws.security.oidc.server_fat.
   */
  copy {
    from project(':com.ibm.ws.security.oidc.server_fat').autoFvtDir
    into autoFvtDir
    include 'publish/**'
  }

  
  /*
   * Copy in common securitykeys.
   */
  copy {
    from new File(project(':com.ibm.ws.security.oauth.oidc_fat.common').projectDir, 'securitykeys')
    into new File(autoFvtDir, 'securitykeys')
    include 'commonLDAPUser1.jks', 'commonSslClientDefault.jks'
  }
}
