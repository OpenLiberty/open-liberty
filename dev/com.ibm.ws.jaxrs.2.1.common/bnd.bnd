#*******************************************************************************
# Copyright (c) 2017 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
#*******************************************************************************
-include= ~../cnf/resources/bnd/bundle.props
bVersion=1.0

javac.source: 1.8
javac.target: 1.8

Bundle-Name: JAX-RS 2.1 Engine
Bundle-SymbolicName: com.ibm.ws.jaxrs.2.1.common
Bundle-Description: IBM JAX-RS 2.1 engine; version=${bVersion}

# jaxrs-2.1 is part of EE8 and therefore requires java 1.8
Require-Capability: osgi.ee;filter:="(&(osgi.ee=JavaSE)(version=1.8))"

WS-TraceGroup: JAXRS

-nouses: false

#  META-INF.cxf,\

Export-Package: \
  com.ibm.websphere.jaxrs.providers.json4j;version=1.1.0,\
  com.ibm.ws.jaxrs20.clientconfig,\
  com.ibm.ws.jaxrs20.providers.api,\
  com.ibm.ws.jaxrs21.sse

# Using version=! in order to not have a version attached to the import for packages that were removed
# from Java after Java 8.  Doing this keeps the import like before Java 11 support. It will get the 
# packages from Java when using Java 8 or earlier and from the new shipped bundles for Java 9 and later.
Import-Package: \
  com.ibm.json.java;resolution:=optional,\
  javax.xml.bind;version=!,\
  javax.xml.bind.annotation;version=!,\
  *
# !com.wordnik.swagger.jaxrs.config, \
# !com.wordnik.swagger.jaxrs.listing, \
# com.ibm.websphere.jaxrs20.multipart, \
# !sun.reflect.generics.reflectiveObjects, \
# !javax.cache.*, \
# javax.ws.rs.*, \
# junit.framework.*;resolution:=optional, \
# org.apache.xml.resolver.*;resolution:=optional, \
# !org.junit.*;resolution:=optional, \
# !org.apache.velocity.*, \
# org.objectweb.asm.*;resolution:=optional, \
# org.slf4j.*;resolution:=optional;version="[1.5,2)", \
# org.osgi.framework.*, \
# org.apache.neethi;resolution:=optional, \
# org.apache.commons.logging.*;resolution:=optional, \
# javax.activation, \
# javax.annotation;version="[1.2,2)", \
# javax.xml.stream.*, \
# !com.sun.xml.fastinfoset.stax.*, \
# !javax.xml.ws, \
# javax.xml.namespace;resolution:=optional, \
# javax.servlet.*;resolution:=optional;version="[0.0,4)", \
# javax.xml.ws.*;version="[2.2,3)", \
# javax.servlet.*;resolution:=optional;version="[0.0,4)", \
# com.ibm.wsspi.classloading, \
# com.ibm.websphere.ras, \
# com.ibm.websphere.ras.annotation, \
# com.ibm.ws.ffdc, \
# com.ibm.ws.webcontainer.extension, \
# com.ibm.ws.webcontainer.osgi, \
# com.ibm.websphere.security, \
# !com.sun.xml.bind.marshaller, \
# !com.ctc.wstx.*, \
# !com.sun.msv.*, \
# !com.sun.xml.fastinfoset.stax.*, \
# !net.sf.cglib.proxy.*, \
# !javax.validation.*, \
# !org.codehaus.stax2.*, \
# !org.apache.log4j.*, \
# !org.apache.xerces.dom, \
# !org.apache.xerces.*, \
# !com.ibm.wsdl.util.xml, \
# !org.springframework.*;resolution:=optional;version="[2.5,4)", \
# !org.apache.aries.*;version="[0.3,2)", \
# !org.osgi.service.blueprint.*, \
# !org.apache.xerces.dom, \
# !com.sun.tools.xjc.reader.internalizer, \
# !org.springframework.*;resolution:=optional;version="[2.5,4)", \
# !org.apache.aries.*;version="[0.3,2)", \
# !org.osgi.service.blueprint.*, \
# !org.apache.aries.*;version="[0.3,2)", \
# !org.osgi.service.blueprint.*, \
# !org.apache.xerces.dom, \
# !org.apache.xerces.*, \
# !org.apache.cxf.ws.policy.*, \
# !javax.wsdl.*, \
# !org.apache.cxf.wsdl.*, \
# !org.joda.time.*, \
# !javax.xml.bind.*, \
# com.ibm.json.xml, \
# com.ibm.json.java, \
# !org.osgi.service.http.*, \
# org.qi4j.*;resolution:=optional, \
# javax.enterprise.context.*;resolution:=optional, \
# javax.enterprise.event.*;resolution:=optional, \
# javax.enterprise.inject.*;resolution:=optional, \
# javax.enterprise.util.*;resolution:=optional, \
# javax.inject.*;resolution:=optional, \
# !org.atmosphere.*, \
# !org.apache.cxf.cdi.*, \
# *

# Use dynamicImport-Package for JAXB APIs, with this, Equonix will have a chance to wire
# those packages to the JAXB-2.2 API if the target bundle is started, or the one from system
# bundle will be always used due to JAXB 2.2 API is not resolved
DynamicImport-Package: \
 javax.xml.ws, \
 javax.xml.ws.*, \
 javax.xml.bind, \
 javax.xml.bind.annotation, \
 javax.xml.bind.annotation.adapters, \
 javax.xml.bind.attachment, \
 javax.xml.bind.helpers, \
 javax.xml.bind.util
# javax.json, \
# javax.json.*

Private-Package:\
   com.ibm.ws.jaxrs20.component.*,\
   com.ibm.ws.jaxrs20.providers.customexceptionmapper,\
   com.ibm.ws.jaxrs20.providers.json4j.utils,\
   com.ibm.ws.jaxrs20.providers.security,\
   com.ibm.ws.jaxrs20.security


-dsannotations: com.ibm.ws.jaxrs20.component.*, \
  com.ibm.ws.jaxrs20.clientconfig.JAXRSClientConfigImpl, \
  com.ibm.ws.jaxrs20.providers.customexceptionmapper.CustomExceptionMapperRegister, \
  com.ibm.ws.jaxrs20.providers.security.SecurityAnnoProviderRegister

instrument.classesExcludes: com/ibm/ws/jaxrs20/internal/resources/*.class

-buildpath: \
  com.ibm.websphere.javaee.jaxb.2.2;version=latest,\
  com.ibm.websphere.appserver.spi.logging,\
  com.ibm.websphere.appserver.spi.threading,\
  com.ibm.websphere.javaee.annotation.1.2;version=latest,\
  com.ibm.websphere.javaee.jaxrs.2.1;version=latest,\
  com.ibm.websphere.javaee.jsonb.1.0,\
  com.ibm.websphere.javaee.jsonp.1.1,\
  com.ibm.websphere.javaee.servlet.3.0;version=latest,\
  com.ibm.websphere.org.osgi.core,\
  com.ibm.websphere.org.osgi.service.component,\
  com.ibm.ws.adaptable.module;version=latest,\
  com.ibm.ws.anno;version=latest,\
  com.ibm.ws.artifact;version=latest,\
  com.ibm.ws.artifact.overlay;version=latest,\
  com.ibm.ws.classloading;version=latest,\
  com.ibm.ws.container.service;version=latest,\
  com.ibm.ws.injection;version=latest,\
  com.ibm.ws.javaee.dd.common;version=latest,\
  com.ibm.ws.jaxrs.2.x.config;version=latest,\
  com.ibm.ws.kernel.feature,\
  com.ibm.ws.kernel.service,\
  com.ibm.ws.logging.core,\
  com.ibm.ws.org.apache.cxf.cxf.core.3.2;version=latest,\
  com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxrs.3.2;version=latest,\
  com.ibm.ws.org.apache.cxf.cxf.rt.rs.client.3.2;version=latest,\
  com.ibm.ws.org.apache.cxf.cxf.rt.rs.service.description.3.2;version=latest,\
  com.ibm.ws.org.apache.cxf.cxf.rt.rs.sse.3.2;version=latest,\
  com.ibm.ws.org.apache.cxf.cxf.rt.transports.http.3.2;version=latest,\
  com.ibm.ws.org.apache.cxf.cxf.tools.common.3.2;version=latest,\
  com.ibm.ws.org.apache.cxf.cxf.tools.wadlto.jaxrs.3.2;version=latest,\
  com.ibm.ws.org.osgi.annotation.versioning;version=latest,\
  com.ibm.ws.webservices.handler;version=latest,\
  com.ibm.wsspi.org.osgi.service.component.annotations

-testpath: \
  ../build.sharedResources/lib/junit/old/junit.jar;version=file,\
  com.ibm.websphere.javaee.annotation.1.1;version=latest,\
  com.ibm.ws.junit.extensions;version=latest,\
  com.ibm.ws.kernel.boot;version=latest,\
  javax.activation:activation;version=1.1,\
  javax.xml.bind:jaxb-api;version=latest,\
  org.jmock:jmock;strategy=exact;version=2.5.1,\
  org.jmock:jmock-junit4;strategy=exact;version=2.5.1,\
  org.hamcrest:hamcrest-all;version=1.3
