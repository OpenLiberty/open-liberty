<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.openliberty.microprofile.openapi40.internal</groupId>
    <artifactId>tck.runner.tck</artifactId>
    <version>4.0</version>
    <packaging>jar</packaging>

    <name>MicroProfile OpenAPI TCK Runner</name>
    
    <properties>
        <microprofile.openapi.version>4.0-RC3</microprofile.openapi.version>

        <surefire.version>2.17</surefire.version> <!-- Any changes to the surefire version must be tested against ZOS-->

        <arquillian.version>1.8.0.Final</arquillian.version>
        <arquillian.liberty.managed.jakarta.version>2.1.1</arquillian.liberty.managed.jakarta.version>

        <defaultSuiteFiles>tck-suite.xml</defaultSuiteFiles>
        <suiteXmlFile>${defaultSuiteFiles}</suiteXmlFile>
        <targetDirectory>${project.basedir}/target</targetDirectory>

        <testng.version>7.8.0</testng.version>
        <slf4j.version>1.7.36</slf4j.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Needed for ZOS. Defines the version of this artifact that arquillian-liberty-managed should use -->
            <!-- This doesn't exist for JEE 9 so leaving it out for now, will have to see what happens on ZOS -->
            <!-- <dependency>
                <groupId>org.jboss.spec.javax.servlet</groupId>
                <artifactId>jboss-servlet-api_3.0_spec</artifactId>
                <version>1.0.2.Final</version>
            </dependency>-->
            <dependency>
              <groupId>org.jboss.arquillian</groupId>
              <artifactId>arquillian-bom</artifactId>
              <version>${arquillian.version}</version>
              <type>pom</type>
              <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <directory>${targetDirectory}</directory>
        <defaultGoal>clean test</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <configuration>
                    <argLine>-Dfile.encoding=${project.build.sourceEncoding} -Dcom.ibm.tools.attach.enable=yes</argLine> <!-- Needed for ZOS. sourceEncoding is needed becuase arquillian calls string.getBtytes(). Attach is needed becuase because arquillian uses com.sun.tools.attach to find VMs -->

                    <suiteXmlFiles>
                        <suiteXmlFile>${suiteXmlFile}</suiteXmlFile>
                    </suiteXmlFiles>

                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
         <dependency>
             <groupId>org.hamcrest</groupId>
             <artifactId>java-hamcrest</artifactId>
             <version>2.0.0.0</version>
         </dependency>
        <dependency>
            <groupId>com.ibm.ws</groupId>
            <artifactId>fattest.simplicity</artifactId>
            <version>1</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/../../../lib/fattest.simplicity.jar</systemPath> <!-- This will point to build/libs/autoFVT/lib/fattest.simplicity.jar -->
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.openapi</groupId>
            <artifactId>microprofile-openapi-api</artifactId>
            <version>${microprofile.openapi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.openapi</groupId>
            <artifactId>microprofile-openapi-tck</artifactId>
            <version>${microprofile.openapi.version}</version>
        </dependency>
        <dependency>
          <groupId>jakarta.ws.rs</groupId>
          <artifactId>jakarta.ws.rs-api</artifactId>
          <version>3.0.0</version>
        </dependency>
        <dependency>
          <groupId>jakarta.validation</groupId>
          <artifactId>jakarta.validation-api</artifactId>
          <version>3.0.0</version>
        </dependency>
        <!--
          - https://issues.redhat.com/browse/ARQ-2144?attachmentViewMode=list
          - https://github.com/cbeust/testng/issues/1677
          -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.beust</groupId>
                    <artifactId>jcommander</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
            <version>1.78</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.testng</groupId>
            <artifactId>arquillian-testng-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.openliberty.arquillian</groupId>
            <artifactId>arquillian-liberty-managed-jakarta</artifactId>
            <version>${arquillian.liberty.managed.jakarta.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
