###############################################################################
# Copyright (c) 2017, 2021 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#
#ISMESSAGEFILE FALSE
# -------------------------------------------------------------------------------------------------

mpjwt.conf=JWT MicroProfile
mpjwt.conf.desc=Configuration pour le traitement du jeton JWT MicroProfile.

uniqueId=ID unique
uniqueId.desc=ID unique.

jwksUri=URL du point d'extr\u00e9mit\u00e9 JWK
jwksUri.desc=Sp\u00e9cifie une URL de service JSON Web Key.

sslRef=R\u00e9f\u00e9rence SSL
sslRef.desc=Sp\u00e9cifie un ID de la configuration SSL utilis\u00e9e pour les connexions SSL.
sslRef$Ref=R\u00e9f\u00e9rence SSL

userNameAttribute=Revendication Principal de l'utilisateur
userNameAttribute.desc=La valeur de la revendication sera utilis\u00e9e comme principal de l'utilisateur pour son authentification.

groupNameAttribute=Revendication Groupe
groupNameAttribute.desc=La valeur de la revendication sera utilis\u00e9e comme appartenance de l'utilisateur au groupe.

mapToUserRegistry=Mapper l'identificateur d'utilisateur
mapToUserRegistry.desc=Indique si userIdentifier doit \u00eatre mapp\u00e9 \u00e0 un utilisateur de registre.

tokenReuse=R\u00e9utiliser le jeton
tokenReuse.desc=Indique si le jeton peut \u00eatre r\u00e9utilis\u00e9.

authFilterRef=R\u00e9f\u00e9rence de filtre d'authentification
authFilterRef$Ref=R\u00e9f\u00e9rence de filtre d'authentification
authFilterRef.desc=Sp\u00e9cifie la r\u00e9f\u00e9rence de filtre d'authentification.

issuer=Emetteur
issuer.desc=URL de l'\u00e9metteur.

trustAliasName=Nom de cl\u00e9 de v\u00e9rification
trustAliasName.desc=Sp\u00e9cifie un alias de cl\u00e9 fiable pour utilisation de la cl\u00e9 publique afin de v\u00e9rifier la signature du jeton.

#Do not translate "aud"
audiences=Audiences dignes de confiance
audiences.desc=Liste des audiences dignes de confiance \u00e0 inclure dans la revendication aud du jeton Web JSON.

clockSkew=D\u00e9calage d'horloge autoris\u00e9 entre les syst\u00e8mes
clockSkew.desc=Utilis\u00e9 pour sp\u00e9cifier le d\u00e9calage d'horloge autoris\u00e9 en minutes lors de la validation du jeton Web JSON.

ignoreApplicationAuthMethod=Ignorer la m\u00e9thode d'authentification
ignoreApplicationAuthMethod.desc=Ignorez la m\u00e9thode d'authentification configur\u00e9e dans l'application. Permettez aux applications existantes qui ne configurent pas MP-JWT comme leur m\u00e9thode d'authentification d'utiliser le jeton JWT MicroProfile, s'il est inclus dans la demande.

signatureAlgorithm=Algorithme de signature du jeton JWT
signatureAlgorithm.desc=Indique l'algorithme de signature qui va \u00eatre utilis\u00e9 pour signer le jeton JWT.

sharedKey=Secret partag\u00e9
sharedKey.desc=Sp\u00e9cifie la cha\u00eene \u00e0 utiliser pour g\u00e9n\u00e9rer les cl\u00e9s partag\u00e9es pour les signatures HS256. La valeur peut \u00eatre stock\u00e9e en clair ou sous forme encod\u00e9e (plus s\u00fbre). Utilisez l'outil securityUtility avec l'option encode pour encoder la cl\u00e9 partag\u00e9e.

useSystemPropertiesForHttpClientConnections=Utiliser les propri\u00e9t\u00e9s syst\u00e8me pour les connexions de clients HTTP
useSystemPropertiesForHttpClientConnections.desc=Pr\u00e9cise s'il faut ou non utiliser les propri\u00e9t\u00e9s syst\u00e8me Java lorsque le consommateur JWT (jwtConsumer) cr\u00e9e des connexions de clients HTTP. Mettez cette propri\u00e9t\u00e9 \u00e0 true si vous voulez que les connexions utilisent les propri\u00e9t\u00e9s syst\u00e8me http* ou javax*.

# Do not translate "MicroProfile", "JWT", "MP-JWT", "mp.jwt.token.header", or "MicroProfile Config"
tokenHeader=En-t\u00eate de jeton
tokenHeader.desc=En-t\u00eate de demande HTTP devant contenir un jeton Web JSON (JWT) MicroProfile. Cet attribut n'est utilis\u00e9 que par les versions 1.2 et au-del\u00e0 de la fonction MP-JWT. Cette valeur remplace la propri\u00e9t\u00e9 MicroProfile Config mp.jwt.token.header si elle est configur\u00e9e.

tokenHeader.Authorization=Autorisation
tokenHeader.Cookie=Cookie

# Do not translate "MicroProfile", "JWT", "MP-JWT", "mp.jwt.token.cookie", or "MicroProfile Config"
cookieName=Nom du cookie
cookieName.desc=Nom du cookie devant contenir un jeton Web JSON (JWT) MicroProfile. La valeur par d\u00e9faut est Bearer. Cet attribut n'est utilis\u00e9 que par les versions 1.2 et au-del\u00e0 de la fonction MP-JWT. Cette valeur remplace la propri\u00e9t\u00e9 MicroProfile Config mp.jwt.token.cookie si elle est configur\u00e9e. Elle est ignor\u00e9e sauf si la propri\u00e9t\u00e9 MicroProfile Config tokenHeader ou mp.jwt.token.header a pour valeur Cookie.

# Do not translate "Content Encryption Key", "JWE", "MP-JWT", "mp.jwt.decrypt.key.location", or "MicroProfile Config"
keyManagementKeyAlias=Alias de cl\u00e9 pour la gestion des cl\u00e9s
keyManagementKeyAlias.desc=Alias de cl\u00e9 priv\u00e9e de la cl\u00e9 de gestion des cl\u00e9s qui est utilis\u00e9 pour d\u00e9chiffrer la cl\u00e9 Content Encryption Key. Cette cl\u00e9 priv\u00e9e doit correspondre \u00e0 la cl\u00e9 publique qui est utilis\u00e9e pour chiffrer la cl\u00e9 Content Encryption Key. Cet attribut n'est utilis\u00e9 que par les versions 1.2 et au-del\u00e0 de la fonction MP-JWT. Cette valeur remplace la propri\u00e9t\u00e9 MicroProfile Config mp.jwt.decrypt.key.location si elle est configur\u00e9e.
