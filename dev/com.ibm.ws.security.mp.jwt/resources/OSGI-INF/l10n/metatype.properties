###############################################################################
# Copyright (c) 2017, 2023 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License 2.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-2.0/
# 
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#
#ISMESSAGEFILE FALSE
# -------------------------------------------------------------------------------------------------

mpjwt.conf=MicroProfile JWT
mpjwt.conf.desc=The configuration to process the MicroProfile JWT token.

uniqueId=Unique ID
uniqueId.desc=The unique ID.

jwksUri=JWK endpoint url
jwksUri.desc=Specifies a JSON Web Key service URL.

sslRef=SSL reference
sslRef.desc=Specifies an ID of the SSL configuration that is used for SSL connections.
sslRef$Ref=SSL reference

userNameAttribute=User principal claim
userNameAttribute.desc=The value of the claim will be used as user principal to authenticate.

groupNameAttribute=Group claim
groupNameAttribute.desc=The value of the claim will be used as the user group membership.

mapToUserRegistry=Map user identifier
mapToUserRegistry.desc=Specifies whether to map userIdentifier to a registry user.

tokenReuse=Re-use the token
tokenReuse.desc=Specifies whether the token can be re-used.

authFilterRef=Authentication Filter Reference
authFilterRef$Ref=Authentication filter reference
authFilterRef.desc=Specifies the authentication filter reference.

issuer=Issuer
issuer.desc=The url of the issuer.

trustAliasName=Verification key name
trustAliasName.desc=Specifies a trusted key alias for using the public key to verify the signature of the token.

#Do not translate "aud"
audiences=Trusted audiences
audiences.desc=The trusted audience list to be included in the aud claim in the JSON web token.

clockSkew=The time difference allowed between systems
clockSkew.desc=This is used to specify the allowed clock skew in minutes when validating the JSON web token.

authorizationHeaderScheme=Authorization header scheme
authorizationHeaderScheme.desc=The expected authentication scheme in the Authorization header that contains the JSON Web Token.

ignoreApplicationAuthMethod=Ignore authentication method
ignoreApplicationAuthMethod.desc=Ignore the configured authentication method in the application. Allow legacy applications that do not configure MP-JWT as their authentication method to use MicroProfile JWT token if one is included in the request.

signatureAlgorithm=JWT token signature algorithm
signatureAlgorithm.desc=Specifies the signature algorithm that will be used to sign the JWT token.

sharedKey=Shared secret
sharedKey.desc=Specifies the string that will be used to generate the shared keys for HS256 signatures. The value can be stored in clear text or in the more secure encoded form. Use the securityUtility tool with the encode option to encode the shared key.

useSystemPropertiesForHttpClientConnections=Use system properties for HTTP client connections
useSystemPropertiesForHttpClientConnections.desc=Specifies whether to use Java system properties when the JWT Consumer creates HTTP client connections. Set this property to true if you want the connections to use the http* or javax* system properties.

# Do not translate "MicroProfile", "JWT", "MP-JWT", "mp.jwt.token.header", or "MicroProfile Config"
tokenHeader=Token header
tokenHeader.desc=The HTTP request header that is expected to contain a MicroProfile JWT. This attribute is only used by versions 1.2 and beyond of the MP-JWT feature. This value overrides the mp.jwt.token.header MicroProfile Config property if one is configured.

tokenHeader.Authorization=Authorization
tokenHeader.Cookie=Cookie

# Do not translate "MicroProfile", "JWT", "MP-JWT", "mp.jwt.token.cookie", or "MicroProfile Config"
cookieName=Cookie name
cookieName.desc=The name of the cookie that is expected to contain a MicroProfile JWT. The default value is Bearer. This attribute is only used by versions 1.2 and beyond of the MP-JWT feature. This value overrides the mp.jwt.token.cookie MicroProfile Config property if one is configured. This value will be ignored unless tokenHeader or the mp.jwt.token.header MicroProfile Config property is set to Cookie.

# Do not translate "Content Encryption Key", "JWE", "MP-JWT", "mp.jwt.decrypt.key.location", or "MicroProfile Config"
keyManagementKeyAlias=Key management key alias
keyManagementKeyAlias.desc=Private key alias of the key management key that is used to decrypt the Content Encryption Key. This private key must correspond to the public key that is used to encrypt the Content Encryption Key. This attribute is only used by versions 1.2 and beyond of the MP-JWT feature. This value overrides the mp.jwt.decrypt.key.location MicroProfile Config property if one is configured.

# Do not translate "Content Encryption Key", "JWE", "MP-JWT", "mp.jwt.decrypt.key.algorithm", or "MicroProfile Config"
keyManagementKeyAlgorithm=Key management key algorithm
keyManagementKeyAlgorithm.desc=Specifies the decryption algorithm that is used to decrypt the Content Encryption Key. This attribute is used only in versions 2.1 and later of the MP-JWT feature. The specified decryption algorithm overrides the mp.jwt.decrypt.key.algorithm MicroProfile Config property if it is configured.

# Do not translate "iat", "JWT", "MP-JWT", "mp.jwt.verify.token.age", or "MicroProfile Config"
tokenAge=Time allowed since the JWT token was issued
tokenAge.desc=Specifies the allowed token age in seconds when validating the JSON web token. This attribute is used only in versions 2.1 and later of the MP-JWT feature. The issued at (iat) claim must be present in the JWT token. The configured number of seconds since iat must not have elapsed. If it has elapsed, then the request is rejected with an unauthorized response. The specified token age overrides the mp.jwt.verify.token.age MicroProfile Config property if it is configured.
