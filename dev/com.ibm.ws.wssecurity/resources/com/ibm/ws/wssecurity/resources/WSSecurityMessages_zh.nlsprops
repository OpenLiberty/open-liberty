###############################################################################
# Copyright (c) 2019 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
# ORIGINS: 27         (used for IBM originated files)
#
# Caution: because some text editors automatically convert
# consecutive runs of spaces to tabs, use the Java "\ " escape
# sequence to represent each space in a run of multiple spaces.
#
# translator:
# Translate words on the right hand side of the = sign.
# Do not translate {0}, {1}, %1, %2 etc.
# Do NOT translate any words when they START with: '-
# Do NOT translate any words when they START with: @
# Preserve all spaces after a backslash (\) even at the end of a line.
#
# NLS_MESSAGEFORMAT_ALL
#
#CMVCPATHNAME com.ibm.ws.wssecurity/resources/com/ibm/ws/wssecurity/resources/WSSecurityMessages.nlsprops
#ISMESSAGEFILE TRUE
#COMPONENTPREFIX CWWKW
#COMPONENTNAMEFOR CWWKW WebSphere JAX-WS WebServices Security
#NLS_MESSAGEFORMAT_VAR
#NLS_ENCODING=UNICODE
#

# -------------------------------------------------------------------------------------------------
# WSSecurity message ID from CWWKW0201 - CWWKW0300

# TO BE DELETED
# info.policy.loaded=CWWKW0201I: WS-Security Policy Loader.
# info.policy.loaded.explanation=The IBM WS-Security Policy Loader is called.
# info.policy.loaded.useraction=Information only.

# Message logged once during server startup
# {0} is the exception
error.policy.notloaded=CWWKW0202E: WS-Security \u65e0\u6cd5\u5e94\u7528\u4e8e\u4efb\u4f55 Web Service\u3002 \u5c1d\u8bd5\u5411 CXF \u6846\u67b6\u6ce8\u518c WS-Security \u7b56\u7565\u88c5\u5165\u7a0b\u5e8f\u65f6\u53d1\u751f\u4e86\u9519\u8bef\uff1a[{0}]
error.policy.notloaded.explanation=\u670d\u52a1\u5668\u542f\u52a8\u671f\u95f4\u672a\u80fd\u5411 CXF \u6846\u67b6\u6ce8\u518c WS-Security \u7b56\u7565\u88c5\u5165\u7a0b\u5e8f\u3002\u56e0\u4e3a\u53d1\u751f\u4e86\u9519\u8bef\uff0c\u6240\u4ee5\u4e0d\u4f1a\u5bf9\u4efb\u4f55 SOAP \u6d88\u606f\u8c03\u7528 WS-Security \u8fd0\u884c\u65f6\uff0c\u4e5f\u4e0d\u4f1a\u6dfb\u52a0 WS-Security \u7ea6\u675f\u3002
error.policy.notloaded.useraction=\u8bf7\u89e3\u51b3\u6d88\u606f\u4e2d\u63cf\u8ff0\u7684\u9519\u8bef\u3002

# Message logged once during server startup
WSSECURITY_NO_CONFIG_DEFINED=CWWKW0203I: WS-Security \u65e0\u6cd5\u5e94\u7528\u4e8e\u4efb\u4f55 Web Service \u5ba2\u6237\u673a\u5e94\u7528\u7a0b\u5e8f\u3002WS-Security \u5ba2\u6237\u673a\u914d\u7f6e\u5143\u7d20 wsSecurityClient \u5728 server.xml \u4e2d\u4e0d\u5b58\u5728\u3002
WSSECURITY_NO_CONFIG_DEFINED.explanation=\u5df2\u542f\u7528 wsSecurity-1.1 \u529f\u80fd\u90e8\u4ef6\uff0c\u4f46\u8be5 WS-Security \u7ec4\u4ef6\u5728 server.xml \u4e2d\u627e\u4e0d\u5230 wsSecurityClient \u5143\u7d20\u3002
WSSECURITY_NO_CONFIG_DEFINED.useraction=\u5982\u679c\u5ba2\u6237\u673a Web Service \u5e94\u7528\u7a0b\u5e8f\u9700\u8981 WS-Security \u7ea6\u675f\uff0c\u8bf7\u5c06\u6240\u9700 wsSecurityClient \u914d\u7f6e\u5143\u7d20\u6dfb\u52a0\u81f3 server.xml\u3002

# Message logged once during server startup
WSSECURITY_NO_CONFIG_DEFINED_PROV=CWWKW0204I: WS-Security \u65e0\u6cd5\u5e94\u7528\u4e8e\u4efb\u4f55 Web Service \u63d0\u4f9b\u8005\u5e94\u7528\u7a0b\u5e8f\u3002WS-Security \u63d0\u4f9b\u7a0b\u5e8f\u914d\u7f6e\u5143\u7d20 wsSecurityProvider \u5728 server.xml \u4e2d\u4e0d\u5b58\u5728\u3002
WSSECURITY_NO_CONFIG_DEFINED_PROV.explanation=\u5df2\u542f\u7528 wsSecurity-1.1 \u529f\u80fd\u90e8\u4ef6\uff0c\u4f46\u8be5 WS-Security \u7ec4\u4ef6\u5728 server.xml \u4e2d\u627e\u4e0d\u5230 wsSecurityProvider \u5143\u7d20\u3002
WSSECURITY_NO_CONFIG_DEFINED_PROV.useraction=\u5982\u679c Web Service \u63d0\u4f9b\u8005\u5e94\u7528\u7a0b\u5e8f\u9700\u8981 WS-Security \u7ea6\u675f\uff0c\u8bf7\u5c06\u6240\u9700 wsSecurityProvider \u914d\u7f6e\u5143\u7d20\u6dfb\u52a0\u81f3 server.xml\u3002

# TO BE DELETED
# WSSECURITY_NO_USER_CONFIG_DEFINED=CWWKW0204I: The user name does not exist.
# WSSECURITY_NO_USER_CONFIG_DEFINED.explanation=user name needs to be specified as attribute.
# WSSECURITY_NO_USER_CONFIG_DEFINED.useraction=Check the syntax.

# Message logged once during server startup on error when reading in the config
# {0} is a token type, ex: X509, UsernameToken
# {1} is the list of valid token types
UNKNOWN_CALLER_TOKEN_NAME=CWWKW0205E: \u8c03\u7528\u8005\u4ee4\u724c\u914d\u7f6e\u65e0\u6cd5\u5e94\u7528\u4e8e Web Service \u63d0\u4f9b\u8005\u5e94\u7528\u7a0b\u5e8f\u3002\u5728 server.xml \u5185\u7684 wsSecurityProvider \u914d\u7f6e\u4e2d\u5bf9 callerToken \u5143\u7d20\u6307\u5b9a\u7684\u540d\u79f0 [{0}] \u65e0\u6548\u3002\u6709\u6548\u503c\u4e3a\uff1a[{1}] 
UNKNOWN_CALLER_TOKEN_NAME.explanation=\u5728 server.xml \u5185\u7684 wsSecurityProvider \u914d\u7f6e\u4e2d\u5bf9 callerToken \u5143\u7d20\u6307\u5b9a\u7684\u540d\u79f0\u65e0\u6548\u3002
UNKNOWN_CALLER_TOKEN_NAME.useraction=\u8bf7\u68c0\u67e5 server.xml \u6587\u4ef6\u4ee5\u786e\u4fdd\u5df2\u5bf9 callerToken \u5143\u7d20\u6307\u5b9a\u53d7\u652f\u6301\u503c\u3002\u9519\u8bef\u6d88\u606f\u4e2d\u663e\u793a\u4e86\u6709\u6548\u503c\u3002

# Message logged at runtime for each errant inbound SOAP request
multiple_unt_exist_err=CWWKW0206E: \u65e0\u6cd5\u4e3a Web Service \u521b\u5efa\u5b89\u5168\u4e3b\u9898\u3002\u65e0\u6cd5\u5728\u5165\u7ad9\u6d88\u606f\u4e2d\u6807\u8bc6 callerToken\uff0c\u56e0\u4e3a SOAP \u5b89\u5168\u5934\u4e2d\u5b58\u5728\u591a\u4e2a UsernameToken\u3002
multiple_unt_exist_err.explanation=security.xml \u4e2d\u7684 callerToken \u8bbe\u7f6e\u4e3a UsernameToken\uff0c\u5165\u7ad9 SOAP \u6d88\u606f\u4e2d\u7684\u5b89\u5168\u5934\u5305\u542b\u591a\u4e2a UsernameToken\u3002\u56e0\u6b64\uff0cWS-Security \u8fd0\u884c\u65f6\u65e0\u6cd5\u786e\u5b9a\u8981\u7528\u4e8e\u8c03\u7528\u8005\u4ee4\u724c\u7684 UsernameToken\u3002
multiple_unt_exist_err.useraction=\u8bf7\u6267\u884c\u4e0b\u5217\u5176\u4e2d\u4e00\u4e2a\u64cd\u4f5c\uff1a1) \u5c06\u5ba2\u6237\u673a\u914d\u7f6e\u66f4\u6539\u4e3a\u4ec5\u53d1\u9001\u4e00\u4e2a UsernameToken 2) \u9664\u53bb server.xml \u4e2d\u7684 callerToken \u914d\u7f6e

# TO BE DELETED
#  no_unt_exist_err=CWWKW0207E: There is no UsernameToken in inbound SOAP Security header to process the caller.
#  no_unt_exist_err.explanation=Configuration requires the username token to be present in the message.
#  no_unt_exist_err.useraction=Make sure that the requestor WS-Security policy specifies to generate one username token.

# TO BE DELETED
#  no_x509_token_exist_err=CWWKW0208E: There is no binary security token in the message to process the caller.
#  no_x509_token_exist_err.explanation=Missing binary security token in the message.
#  no_x509_token_exist_err.useraction=Make sure that the requestor WS-Security policy specifies to include at least one binary security token.

# Message logged at runtime for each errant inbound SOAP request
# {0} is a token type, ex: X509, UsernameToken ({0} is supposed to be used twice)
no_caller_exist_err=CWWKW0207E: \u65e0\u6cd5\u4e3a Web Service \u521b\u5efa\u5b89\u5168\u4e3b\u9898\u3002\u5df2\u914d\u7f6e {0} callerToken\uff0c\u4f46\u5165\u7ad9 SOAP \u5b89\u5168\u5934\u4e2d\u6ca1\u6709 {0} \u4ee4\u724c\u3002\u672a\u80fd\u9009\u62e9\u8c03\u7528\u8005\u4ee4\u724c\u3002
no_caller_exist_err.explanation=SOAP \u5b89\u5168\u5934\u4e2d\u4e0d\u5b58\u5728 server.xml \u4e2d\u6240\u914d\u7f6e\u7684 callerToken\u3002
no_caller_exist_err.useraction=\u8bf7\u6267\u884c\u4e0b\u5217\u5176\u4e2d\u4e00\u9879\u64cd\u4f5c\uff1a1) \u66f4\u6539\u5ba2\u6237\u673a\u914d\u7f6e\u4ee5\u53d1\u9001\u6b63\u786e\u7684\u8c03\u7528\u8005\u4ee4\u724c 2) \u9664\u53bb server.xml \u4e2d\u7684 callerToken \u914d\u7f6e

# TO BE DELETED
# empty_results_list=CWWKW0209E: A security subject cannot be created for the web service.  Empty results list.
# empty_results_list.explanation=Cannot get message verification results.
# empty_results_list.useraction=This might be due to an internal problem. Please check the logs for more information.

# Message logged at runtime for each errant inbound SOAP request.
# {0} is the error message received from base security
error_authenticate=CWWKW0210E: \u65e0\u6cd5\u4e3a Web Service \u521b\u5efa\u5b89\u5168\u4e3b\u9898\uff0c\u56e0\u4e3a [{0}]\u3002
error_authenticate.explanation=\u65e0\u6cd5\u4e3a\u4ece SOAP \u5b89\u5168\u5934\u4e2d\u68c0\u7d22\u5230\u7684\u8c03\u7528\u8005\u4ee4\u724c\u521b\u5efa\u5b89\u5168\u4e3b\u9898\u3002\u6d88\u606f\u4e2d\u63cf\u8ff0\u4e86\u8be5\u9519\u8bef\u7684\u539f\u56e0\u3002
error_authenticate.useraction=\u8bf7\u89e3\u51b3\u6d88\u606f\u4e2d\u63cf\u8ff0\u7684\u9519\u8bef\u3002

# TO BE DELETED
# Message logged at runtime for each errant inbound SOAP request.
# no_endorsing_token_no_asymmetric_token=CWWKW0211E: There is no EndorsingSupporting token or Asymmetric signature token in the message.
# no_endorsing_token_no_asymmetric_token.explanation=Missing the token in the message to complete caller processing.
# no_endorsing_token_no_asymmetric_token.useraction=Make sure that the requestor WS-Security policy specifies to include either an EndorsingSupporting type token or an Asymmetric signature token in the message.

# Message logged at runtime for each errant inbound SOAP request.
multiple_endorsing_token_err=CWWKW0212E: \u65e0\u6cd5\u4e3a Web Service \u521b\u5efa\u5b89\u5168\u4e3b\u9898\u3002\u65e0\u6cd5\u5728\u5165\u7ad9\u6d88\u606f\u4e2d\u6807\u8bc6\u8c03\u7528\u8005\u4ee4\u724c\u3002server.xml \u4e2d\u7684 callerToken \u8bbe\u7f6e\u4e3a X509Token\uff0cendorsingSupportingToken \u8bbe\u7f6e\u4e3a true\uff08\u7f3a\u7701\u503c\uff09\uff0c\u5e76\u4e14\u5165\u7ad9 SOAP \u5b89\u5168\u5934\u4e2d\u6709\u591a\u4e2a EndorsingSupportingToken\u3002
multiple_endorsing_token_err.explanation=server.xml \u4e2d\u7684 callerToken \u8bbe\u7f6e\u4e3a X509Token\uff0cendorsingSupportingToken \u8bbe\u7f6e\u4e3a true\uff08\u7f3a\u7701\u503c\uff09\uff0c\u5e76\u4e14\u5165\u7ad9 SOAP \u5b89\u5168\u5934\u4e2d\u6709\u591a\u4e2a EndorsingSupportingToken\u3002\u56e0\u4e3a\u6d88\u606f\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2a\u8c03\u7528\u8005\u4ee4\u724c\uff0c\u624d\u80fd\u6210\u529f\u9009\u62e9\u8c03\u7528\u8005\u4ee4\u724c\uff0c\u6240\u4ee5\u4e0d\u5141\u8bb8\u6709\u591a\u4e2a endorsingSupportingToken\u3002                                   
multiple_endorsing_token_err.useraction=\u8bf7\u6267\u884c\u4e0b\u5217\u5176\u4e2d\u4e00\u9879\u64cd\u4f5c\uff1a1) \u66f4\u6539\u7b56\u7565\uff0c\u4ee5\u4fbf\u53ea\u6709\u4e00\u4e2a endorsingSupportingToken \u5c06\u5305\u62ec\u5728\u6d88\u606f\u4e2d\uff0c2) \u9664\u53bb server.xml \u4e2d\u7684 callerToken \u914d\u7f6e\uff0c3) \u5728 server.xml \u5185\u7684 callerToken \u914d\u7f6e\u4e2d\u5c06 endorsingSupportingToken \u8bbe\u7f6e\u4e3a false

# Message logged at runtime for each errant inbound SOAP request.
multiple_asymmetric_token_err=CWWKW0213E: \u65e0\u6cd5\u4e3a Web Service \u521b\u5efa\u5b89\u5168\u4e3b\u9898\u3002\u65e0\u6cd5\u5728\u5165\u7ad9\u6d88\u606f\u4e2d\u6807\u8bc6\u8c03\u7528\u8005\u4ee4\u724c\u3002server.xml \u4e2d\u7684 callerToken \u8bbe\u7f6e\u4e3a X509Token\uff0cendorsingSupportingToken \u8bbe\u7f6e\u4e3a false\uff0c\u5e76\u4e14\u5165\u7ad9 SOAP \u5b89\u5168\u5934\u4e2d\u6709\u591a\u4e2a\u975e\u5bf9\u79f0\u7b7e\u540d\u4ee4\u724c\u3002
multiple_asymmetric_token_err.explanation=server.xml \u4e2d\u7684 callerToken \u8bbe\u7f6e\u4e3a X509Token\uff0cendorsingSupportingToken \u8bbe\u7f6e\u4e3a false\uff0c\u5e76\u4e14\u5165\u7ad9 SOAP \u5b89\u5168\u5934\u4e2d\u6709\u591a\u4e2a\u975e\u5bf9\u79f0\u7b7e\u540d\u4ee4\u724c\u3002\u56e0\u4e3a\u6d88\u606f\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2a\u8c03\u7528\u8005\u4ee4\u724c\uff0c\u624d\u80fd\u6210\u529f\u9009\u62e9\u8c03\u7528\u8005\u4ee4\u724c\uff0c\u6240\u4ee5\u4e0d\u5141\u8bb8\u6709\u591a\u4e2a\u975e\u5bf9\u79f0\u7b7e\u540d\u4ee4\u724c\u3002
multiple_asymmetric_token_err.useraction=\u8bf7\u6267\u884c\u4e0b\u5217\u5176\u4e2d\u4e00\u9879\u64cd\u4f5c\uff1a1) \u66f4\u6539\u7b56\u7565\uff0c\u4ee5\u4fbf\u53ea\u6709\u4e00\u4e2a\u975e\u5bf9\u79f0\u7b7e\u540d\u4ee4\u724c\u5c06\u5305\u62ec\u5728\u6d88\u606f\u4e2d\uff0c2) \u9664\u53bb server.xml \u4e2d\u7684 callerToken \u914d\u7f6e

# Do not translate "NotBefore"
saml_token_not_yet_valid=CWWKW0214E: SAML \u4ee4\u724c\u4e2d\u7684 NotBefore \u65ad\u8a00 [{0}] \u8d85\u51fa\u8303\u56f4\u3002\u5f53\u524d\u65f6\u95f4\u4e3a [{1}]\u3002\u5f53\u524d\u65f6\u949f\u504f\u5dee\u8bbe\u7f6e\u4e3a [{2}] \u79d2\u3002
saml_token_not_yet_valid.explanation=SAML \u4ee4\u724c\u4e2d\u7684 NotBefore \u65ad\u8a00\u6307\u5b9a\u8be5\u4ee4\u724c\u53d8\u5f97\u6709\u6548\u7684\u65f6\u95f4\uff1b\u5728\u6b64\u65f6\u95f4\u4e4b\u524d\u65e0\u6cd5\u4f7f\u7528\u8be5\u4ee4\u724c\u3002\u8981\u4f7f\u7528\u6b64 SAML \u4ee4\u724c\uff0cNotBefore \u65ad\u8a00\u7684\u503c\u5fc5\u987b\u662f\u8fc7\u53bb\u67d0\u4e2a\u77ac\u65f6\u3002\u8be5\u9519\u8bef\u7684\u53ef\u80fd\u539f\u56e0\u662f\u63a5\u6536\u65b9\u7684\u65f6\u949f\u4e0e\u65ad\u8a00\u521b\u5efa\u8005\u7684\u65f6\u949f\u4e0d\u540c\u6b65\u3002
saml_token_not_yet_valid.useraction=\u8bf7\u786e\u4fdd IdP \u4e0a\u7684\u65e5\u671f\u548c\u65f6\u95f4\u4e0e\u6b64 SAML Web \u5355\u70b9\u767b\u5f55 (SSO) \u670d\u52a1\u63d0\u4f9b\u7a0b\u5e8f\u540c\u6b65\uff0c\u6216\u8005\u589e\u5927\u65f6\u949f\u504f\u5dee\u3002
# Do not translate "NotOnOrAfter"
saml_token_expired=CWWKW0215E: SAML \u4ee4\u724c\u4e2d\u7684 NotOnOrAfter \u65ad\u8a00 [{0}] \u8d85\u51fa\u8303\u56f4\u3002\u5f53\u524d\u65f6\u95f4\u4e3a [{1}]\u3002\u5f53\u524d\u65f6\u949f\u504f\u5dee\u8bbe\u7f6e\u4e3a [{2}] \u79d2\u3002
saml_token_expired.explanation=SAML \u4ee4\u724c\u4e2d\u7684 NotOnOrAfter \u65ad\u8a00\u6307\u5b9a\u8be5\u4ee4\u724c\u7684\u5230\u671f\u65f6\u95f4\u3002\u5fc5\u987b\u5728\u6b64\u65f6\u95f4\u4e4b\u524d\u4f7f\u7528\u8be5\u4ee4\u724c\u3002\u8be5\u9519\u8bef\u7684\u53ef\u80fd\u539f\u56e0\u662f\u63a5\u6536\u65b9\u7684\u65f6\u949f\u4e0e\u65ad\u8a00\u521b\u5efa\u8005\u7684\u65f6\u949f\u4e0d\u540c\u6b65\u3002
saml_token_expired.useraction=\u8bf7\u786e\u4fdd IdP \u4e0a\u7684\u65e5\u671f\u548c\u65f6\u95f4\u4e0e\u6b64 SAML Web \u5355\u70b9\u767b\u5f55 (SSO) \u670d\u52a1\u63d0\u4f9b\u7a0b\u5e8f\u540c\u6b65\uff0c\u6216\u8005\u589e\u5927\u65f6\u949f\u504f\u5dee\u3002
# Do not translate "IssueInstant"
saml_token_issued_too_long_ago=CWWKW0216E: SAML \u4ee4\u724c\u4e2d\u7684 IssueInstant [{0}] \u8d85\u51fa\u8303\u56f4\u3002\u5f53\u524d\u65f6\u95f4\u4e3a [{1}]\u3002\u5f53\u524d\u65f6\u949f\u504f\u5dee\u8bbe\u7f6e\u4e3a [{2}] \u79d2\u3002
saml_token_issued_too_long_ago.explanation=SAML \u4ee4\u724c\u4e2d\u7684 IssueInstant \u65ad\u8a00\u662f\u5f88\u4e45\u4ee5\u524d\u751f\u6210\u7684\uff0c\u5df2\u65e0\u6cd5\u4f7f\u7528\u6b64\u4ee4\u724c\u3002SAML \u4ee4\u724c\u9881\u53d1\u4e4b\u540e\u5fc5\u987b\u5728\u6240\u914d\u7f6e\u7684\u65f6\u95f4\u5185\u4f7f\u7528\u3002\u8be5\u9519\u8bef\u7684\u53ef\u80fd\u539f\u56e0\u662f\u63a5\u6536\u65b9\u7684\u65f6\u949f\u4e0e\u65ad\u8a00\u521b\u5efa\u8005\u7684\u65f6\u949f\u4e0d\u540c\u6b65\u3002
saml_token_issued_too_long_ago.useraction=\u8bf7\u786e\u4fdd IdP \u4e0a\u7684\u65e5\u671f\u548c\u65f6\u95f4\u4e0e\u6b64 SAML Web \u5355\u70b9\u767b\u5f55 (SSO) \u670d\u52a1\u63d0\u4f9b\u7a0b\u5e8f\u540c\u6b65\uff0c\u6216\u8005\u589e\u5927\u65f6\u949f\u504f\u5dee\u3002
# Do not translate "IssueInstant"
saml_token_issue_instant_in_future=CWWKW0217E: SAML \u4ee4\u724c\u4e2d\u7684 IssueInstant [{0}] \u662f\u5c06\u6765\u67d0\u4e2a\u65f6\u95f4\uff0c\u56e0\u6b64\u8d85\u51fa\u8303\u56f4\u3002\u5f53\u524d\u65f6\u95f4\u4e3a [{1}]\u3002\u5f53\u524d\u65f6\u949f\u504f\u5dee\u8bbe\u7f6e\u4e3a [{2}] \u79d2\u3002
saml_token_issue_instant_in_future.explanation=SAML \u4ee4\u724c\u4e2d\u7684 IssueInstant \u65ad\u8a00\u88ab\u8bbe\u7f6e\u4e3a\u5c06\u6765\u67d0\u4e2a\u65f6\u95f4\uff0c\u56e0\u6b64\u76ee\u524d\u8ba4\u4e3a\u5b83\u65e0\u6548\u3002IssueInstant \u503c\u5fc5\u987b\u662f\u8fc7\u53bb\u67d0\u4e2a\u65f6\u95f4\uff0c\u4ee5\u4fbf SAML \u4ee4\u724c\u6709\u6548\u3002\u8be5\u9519\u8bef\u7684\u53ef\u80fd\u539f\u56e0\u662f\u63a5\u6536\u65b9\u7684\u65f6\u949f\u4e0e\u65ad\u8a00\u521b\u5efa\u8005\u7684\u65f6\u949f\u4e0d\u540c\u6b65\u3002
saml_token_issue_instant_in_future.useraction=\u8bf7\u786e\u4fdd IdP \u4e0a\u7684\u65e5\u671f\u548c\u65f6\u95f4\u4e0e\u6b64 SAML Web \u5355\u70b9\u767b\u5f55 (SSO) \u670d\u52a1\u63d0\u4f9b\u7a0b\u5e8f\u540c\u6b65\uff0c\u6216\u8005\u589e\u5927\u65f6\u949f\u504f\u5dee\u3002
failed_to_extract_saml_element=CWWKW0218W: \u5c1d\u8bd5\u4ece\u6240\u63d0\u4f9b\u7684 SAML \u4ee4\u724c\u4e2d\u62bd\u53d6 SAML \u5143\u7d20\u65f6\u53d1\u751f\u5f02\u5e38\u3002\u5f02\u5e38\u4e3a\uff1a[{0}]
failed_to_extract_saml_element.explanation=\u89e3\u6790 SAML \u4ee4\u724c\u65f6\u53d1\u751f\u5f02\u5e38\u3002\u8be5\u4ee4\u724c\u53ef\u80fd\u683c\u5f0f\u4e0d\u6b63\u786e\uff0c\u6216\u8005\u5728\u5c1d\u8bd5\u89e3\u6790\u4ee4\u724c\u5b57\u7b26\u4e32\u65f6\u53d1\u751f\u5185\u90e8\u9519\u8bef\u3002
failed_to_extract_saml_element.useraction=\u8bf7\u67e5\u770b\u670d\u52a1\u5668\u65e5\u5fd7\u4ee5\u4e86\u89e3\u6709\u5173\u8be5\u9519\u8bef\u7684\u66f4\u591a\u4fe1\u606f\u3002

failed_to_extract_saml_token_from_subject=CWWKW0219W: \u5c1d\u8bd5\u4ece\u4e3b\u4f53\u96c6\u4e2d\u62bd\u53d6 SAML \u4ee4\u724c\u65f6\u53d1\u751f\u5f02\u5e38\u3002\u5f02\u5e38\u4e3a\uff1a[{0}]
failed_to_extract_saml_token_from_subject.explanation=\u4ece\u4e3b\u4f53\u96c6\u4e2d\u62bd\u53d6 SAML \u4ee4\u724c\u65f6\u53d1\u751f\u5f02\u5e38\u3002
failed_to_extract_saml_token_from_subject.useraction=\u8bf7\u67e5\u770b\u670d\u52a1\u5668\u65e5\u5fd7\u4ee5\u4e86\u89e3\u6709\u5173\u8be5\u9519\u8bef\u7684\u66f4\u591a\u4fe1\u606f\u3002

failed_to_obtain_subject_info=CWWKW0220E: \u7531\u4e8e\u4ece SAML \u65ad\u8a00\u4e2d\u83b7\u5f97\u4e3b\u4f53\u96c6\u4fe1\u606f\u65f6\u53d1\u751f\u5f02\u5e38\u800c\u8ba4\u8bc1\u5931\u8d25\u3002\u5f02\u5e38\u4e3a\uff1a[{0}]
failed_to_obtain_subject_info.explanation=\u5c1d\u8bd5\u83b7\u5f97\u6709\u5173\u6240\u63d0\u4f9b SAML \u4ee4\u724c\u4e2d\u7684\u4e3b\u4f53\u96c6\u7684\u4fe1\u606f\u65f6\u53d1\u751f\u5f02\u5e38\u3002
failed_to_obtain_subject_info.useraction=\u8bf7\u67e5\u770b\u670d\u52a1\u5668\u65e5\u5fd7\u4ee5\u4e86\u89e3\u6709\u5173\u8be5\u9519\u8bef\u7684\u66f4\u591a\u4fe1\u606f\u3002

failed_to_authenticate=CWWKW0221E: \u7531\u4e8e\u53d1\u751f\u610f\u5916\u5f02\u5e38\uff0c\u56e0\u6b64\u8ba4\u8bc1\u5931\u8d25\u3002\u5f02\u5e38\u4e3a\uff1a[{0}]\u3002
failed_to_authenticate.explanation=\u4e0e\u7528\u6237\u6ce8\u518c\u8868\u4ea4\u4e92\u65f6\uff0c\u5728\u83b7\u5f97\u4e3b\u4f53\u96c6\u6216\u8005\u8eab\u4efd\u4fe1\u606f\u65f6\u53ef\u80fd\u53d1\u751f\u4e86\u95ee\u9898\u3002
failed_to_authenticate.useraction=\u8bf7\u67e5\u770b\u670d\u52a1\u5668\u65e5\u5fd7\u4ee5\u4e86\u89e3\u6709\u5173\u8be5\u9519\u8bef\u7684\u66f4\u591a\u4fe1\u606f\u3002\u8bf7\u786e\u4fdd SAML \u4ee4\u724c\u4e2d\u7684\u4e3b\u4f53\u96c6\u4fe1\u606f\u6620\u5c04\u81f3\u6240\u914d\u7f6e\u7528\u6237\u6ce8\u518c\u8868\u4e2d\u7684\u671f\u671b\u503c\u3002

# Do not translate "UsernameToken"
password_type_mismatch=CWWKW0222E: \u4ee4\u724c\u9a8c\u8bc1\u5931\u8d25\uff0c\u56e0\u4e3a\u63a5\u6536\u5230\u7684 UsernameToken \u5bc6\u7801\u7c7b\u578b [{0}] \u4e0e\u6240\u9700\u5bc6\u7801\u7c7b\u578b [{0}] \u4e0d\u5339\u914d\u3002
password_type_mismatch.explanation=UsernameToken \u4e2d\u7684\u5bc6\u7801\u7c7b\u578b\u4e0e WS-Security \u7b56\u7565\u4e2d\u5b9a\u4e49\u7684\u6240\u9700\u5bc6\u7801\u7c7b\u578b\u4e0d\u5339\u914d\u3002\u8fd9\u4e9b\u7c7b\u578b\u5fc5\u987b\u5b8c\u5168\u76f8\u540c\uff1bWeb Service \u5ba2\u6237\u673a\u58f0\u660e\u7684\u5bc6\u7801\u7c7b\u578b\u5fc5\u987b\u4e0e WS-Security \u7b56\u7565\u4e2d\u6240\u5b9a\u4e49\u7684\u5bc6\u7801\u7c7b\u578b\u76f8\u540c\uff0c\u4ee5\u4fbf\u9a8c\u8bc1\u6210\u529f\u3002
password_type_mismatch.useraction=\u8bf7\u786e\u4fdd Web Service \u5ba2\u6237\u673a\u58f0\u660e\u7684\u5bc6\u7801\u7c7b\u578b\u4e0e WS-Security \u7b56\u7565\u4e2d\u6240\u5b9a\u4e49\u7684\u5bc6\u7801\u7c7b\u578b\u76f8\u540c\u3002

# Do not translate "UsernameToken"
cannot_handle_custom_password_types=CWWKW0223E: \u4ee4\u724c\u9a8c\u8bc1\u5931\u8d25\uff0c\u56e0\u4e3a\u68c0\u6d4b\u5230\u5b9a\u5236\u5bc6\u7801\u7c7b\u578b\uff0c\u4f46\u662f\uff0c\u8bf7\u6c42\u4e2d\u6240\u63d0\u4f9b\u7684\u914d\u7f6e\u6570\u636e\u660e\u786e\u6307\u51fa\u5b9a\u5236\u5bc6\u7801\u7c7b\u578b\u4e0d\u53d7\u652f\u6301\u3002
cannot_handle_custom_password_types.explanation=UsernameToken \u4e2d\u7684\u5bc6\u7801\u65e2\u672a\u6563\u5217\u5316\uff0c\u4e5f\u4e0d\u662f\u7eaf\u6587\u672c\uff0c\u56e0\u6b64\u88ab\u8ba4\u4e3a\u662f\u5b9a\u5236\u5bc6\u7801\u7c7b\u578b\u3002\u8bf7\u6c42\u6570\u636e\u4e2d\u7684\u914d\u7f6e\u660e\u786e\u6307\u51fa\u5b9a\u5236\u5bc6\u7801\u7c7b\u578b\u4e0d\u53d7\u652f\u6301\u3002
cannot_handle_custom_password_types.useraction=\u8bf7\u786e\u4fdd Web Service \u5ba2\u6237\u673a\u4f7f\u7528 UsernameToken \u6982\u8981\u6587\u4ef6\u4e2d\u6240\u5b9a\u4e49\u7684\u5bc6\u7801\u7c7b\u578b\uff0c\u6216\u8005\u914d\u7f6e Web Service \u63d0\u4f9b\u7a0b\u5e8f\u4ee5\u63a5\u53d7\u5b9a\u5236\u5bc6\u7801\u7c7b\u578b\u3002

# Do not translate "UsernameToken"
empty_user_or_password=CWWKW0224E: UsernameToken \u4e2d\u6240\u6307\u5b9a\u7684\u7528\u6237\u540d\u6216\u5bc6\u7801\u4e3a\u7a7a\u3002\u8bf7\u68c0\u67e5 UsernameToken \u4ee5\u786e\u4fdd\u4ee4\u724c\u4e2d\u63d0\u4f9b\u4e86\u975e\u7a7a\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002
empty_user_or_password.explanation=\u7f3a\u5c11 UsernameToken \u4e2d\u7684\u7528\u6237\u540d\u6216\u5bc6\u7801\u6761\u76ee\uff0c\u6216\u8005\u8fd9\u4e9b\u6761\u76ee\u4e3a\u7a7a\u3002
empty_user_or_password.useraction=\u8bf7\u68c0\u67e5\u4ee4\u724c\u4e2d\u662f\u5426\u63d0\u4f9b\u4e86\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002\u5982\u679c\u672a\u63d0\u4f9b\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u90a3\u4e48\u8bf7\u83b7\u53d6\u65b0\u7684 UsernameToken\u3002

registry_exception_checking_password=CWWKW0225E: \u8bbf\u95ee\u7528\u6237\u6ce8\u518c\u8868\u65f6\u6216\u8005\u68c0\u67e5\u7528\u6237 [{0}] \u7684\u5bc6\u7801\u65f6\u53d1\u751f\u4e86\u5f02\u5e38\u3002\u5f02\u5e38\u4e3a\uff1a[{1}]
registry_exception_checking_password.explanation=\u83b7\u53d6\u7528\u6237\u6ce8\u518c\u8868\u670d\u52a1\u4e2d\u5bf9\u7528\u6237\u6ce8\u518c\u8868\u7684\u5f15\u7528\u65f6\u53d1\u751f\u9519\u8bef\uff0c\u6216\u8005\u68c0\u67e5\u6240\u7ed9\u5b9a\u7528\u6237\u7684\u5bc6\u7801\u65f6\u53d1\u751f\u5f02\u5e38\u3002
registry_exception_checking_password.useraction=\u8bf7\u67e5\u770b\u670d\u52a1\u5668\u65e5\u5fd7\u4ee5\u4e86\u89e3\u6709\u5173\u8be5\u5f02\u5e38\u7684\u66f4\u591a\u4fe1\u606f\u3002\u8bf7\u786e\u4fdd\u6240\u63d0\u4f9b\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u6b63\u786e\uff0c\u5e76\u4e14\u5bf9\u5e94\u4e8e\u6240\u914d\u7f6e\u7528\u6237\u6ce8\u518c\u8868\u4e2d\u7684\u6761\u76ee\u3002

check_password_failed=CWWKW0226E: \u672a\u80fd\u9a8c\u8bc1\u7528\u6237 [{0}]\u3002\u8bf7\u786e\u8ba4\u6240\u63d0\u4f9b\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u51ed\u8bc1\u6b63\u786e\u3002
check_password_failed.explanation=\u672a\u80fd\u9488\u5bf9\u6240\u914d\u7f6e\u7684\u7528\u6237\u6ce8\u518c\u8868\u6765\u9a8c\u8bc1\u6240\u6307\u5b9a\u7684\u7528\u6237\u3002\u8fd9\u5f88\u6709\u53ef\u80fd\u662f\u7531\u4e8e\u7528\u6237\u540d\u6216\u5bc6\u7801\u4e0d\u5339\u914d\u3002
check_password_failed.useraction=\u8bf7\u68c0\u67e5\u6240\u63d0\u4f9b\u7684\u51ed\u8bc1\uff0c\u4ee5\u786e\u4fdd\u7528\u6237\u540d\u548c\u5bc6\u7801\u4e0e\u6240\u914d\u7f6e\u7684\u7528\u6237\u6ce8\u518c\u8868\u4e2d\u7684\u6761\u76ee\u76f8\u5339\u914d\u3002

# Do not translate "PasswordDigest" or "UsernameToken"
no_password_returned_by_callback=CWWKW0227E: \u4ece\u5bc6\u7801\u56de\u8c03\u5904\u7406\u7a0b\u5e8f\u8fd4\u56de\u4e86 null \u5bc6\u7801\u3002
no_password_returned_by_callback.explanation=\u5bf9\u4e8e UsernameToken \u4e2d PasswordDigest \u7c7b\u578b\u7684\u5bc6\u7801\uff0c\u5bc6\u7801\u56de\u8c03\u5904\u7406\u7a0b\u5e8f\u5fc5\u987b\u8fd4\u56de\u975e null \u5bc6\u7801\u3002
no_password_returned_by_callback.useraction=\u8bf7\u786e\u4fdd\u5bc6\u7801\u56de\u8c03\u5904\u7406\u7a0b\u5e8f\u5bf9\u6709\u6548\u7528\u6237\u8fd4\u56de\u975e null \u5bc6\u7801\u548c\u975e\u7a7a\u5bc6\u7801\u3002

# Example: {0} = userIdentifierValue {1} = userIdentifier
SAML20_ATTRIBUTE_ERR=CWWKW0228E: SAML \u65ad\u8a00\u4e0d\u5305\u542b [{0}] \u5c5e\u6027\u3002[{0}] \u5c5e\u6027\u662f\u5fc5\u9700\u7684\u5c5e\u6027\uff0c\u56e0\u4e3a\u8c03\u7528\u8005\u914d\u7f6e\u5c06\u6b64\u5c5e\u6027\u6307\u5b9a\u4e3a [{1}] \u6807\u8bc6\u3002
SAML20_ATTRIBUTE_ERR.explanation=SAML \u65ad\u8a00\u7f3a\u5c11\u8be5\u5c5e\u6027\uff0c\u6216\u8005\u8c03\u7528\u8005\u914d\u7f6e\u4e3a\u6240\u63d0\u5230\u7684\u6807\u8bc6\u6307\u5b9a\u4e86\u9519\u8bef\u503c\u3002
SAML20_ATTRIBUTE_ERR.useraction=\u8bf7\u6267\u884c\u4e0b\u5217\u5176\u4e2d\u4e00\u9879\u64cd\u4f5c\uff1a1) \u8bf7\u786e\u4fdd SAML \u65ad\u8a00\u4e2d\u5b58\u5728\u8be5\u5c5e\u6027\u30022) \u914d\u7f6e callerToken \u4ee5\u5c06\u53e6\u4e00\u4e2a\u5c5e\u6027\u6307\u5b9a\u4e3a\u6807\u8bc6\u3002

# Example: {0} = realm
SAML20_ELEMENT_ERR=CWWKW0229E: SAML \u65ad\u8a00\u4e0d\u5305\u542b [{0}] \u5143\u7d20\u3002\u9700\u8981 [{0}] \u5143\u7d20\u3002
SAML20_ELEMENT_ERR.explanation=SAML \u65ad\u8a00\u7f3a\u5c11 WS-Security \u8fd0\u884c\u65f6\u6240\u9700\u8981\u7684\u5143\u7d20\uff0c\u65e0\u6cd5\u5b8c\u6210\u8c03\u7528\u8005\u4ee4\u724c\u7684\u5904\u7406\u3002
SAML20_ELEMENT_ERR.useraction=\u8bf7\u6267\u884c\u4e0b\u5217\u5176\u4e2d\u4e00\u9879\u64cd\u4f5c\uff1a1) \u8bf7\u786e\u4fdd SAML \u65ad\u8a00\u4e2d\u5b58\u5728\u8be5\u5fc5\u9700\u5143\u7d20\u30022) \u914d\u7f6e callerToken \u4ee5\u5b9a\u4e49\u8be5\u5143\u7d20\u7684\u503c\u3002


SAML20_CANNOT_RESOLVE_ASSERTION=CWWKW0230E: UserCredentialResolver \u672a\u80fd\u89e3\u6790 SAML \u65ad\u8a00\uff0c\u968f\u6d88\u606f [{0}] \u629b\u51fa UserIdentityException\u3002
SAML20_CANNOT_RESOLVE_ASSERTION.explanation=\u7528\u6237\u529f\u80fd\u90e8\u4ef6\u63d0\u4f9b\u7684 UserCredentialResolver \u670d\u52a1\u65e0\u6cd5\u6b63\u786e\u6620\u5c04 SAML \u65ad\u8a00\uff0c\u5e76\u629b\u51fa UserIdentityException\u3002
SAML20_CANNOT_RESOLVE_ASSERTION.useraction=\u786e\u4fdd\u5728 UserIdentityException \u4e3a\u975e\u9884\u671f\u65f6\u6b63\u786e\u8bbe\u7f6e\u4e86 UserCredentialResolver \u670d\u52a1\u3002

# Message logged at runtime for each errant inbound SOAP request
multiple_saml_exist_err=CWWKW0231E: \u65e0\u6cd5\u4e3a Web Service \u521b\u5efa\u5b89\u5168\u4e3b\u9898\u3002\u65e0\u6cd5\u5728\u5165\u7ad9\u6d88\u606f\u4e2d\u6807\u8bc6 callerToken\uff0c\u56e0\u4e3a SOAP \u5b89\u5168\u5934\u4e2d\u5b58\u5728\u591a\u4e2a SAML \u65ad\u8a00\u3002
multiple_saml_exist_err.explanation=server.xml \u4e2d\u7684 callerToken \u8bbe\u7f6e\u4e3a SamlToken\uff0c\u5165\u7ad9 SOAP \u6d88\u606f\u4e2d\u7684\u5b89\u5168\u5934\u5305\u542b\u591a\u4e2a SAML \u65ad\u8a00\u3002\u56e0\u6b64\uff0cWS-Security \u8fd0\u884c\u65f6\u65e0\u6cd5\u786e\u5b9a\u8981\u7528\u4e8e\u8c03\u7528\u8005\u4ee4\u724c\u7684 SAML \u65ad\u8a00\u3002
multiple_saml_exist_err.useraction=\u8bf7\u6267\u884c\u4e0b\u5217\u5176\u4e2d\u4e00\u9879\u64cd\u4f5c\uff1a1) \u66f4\u6539\u5ba2\u6237\u673a\u914d\u7f6e\u4ee5\u4ec5\u53d1\u9001\u4e00\u4e2a SAML \u65ad\u8a00\uff0c2) \u9664\u53bb server.xml \u4e2d\u7684 callerToken \u914d\u7f6e

# Message logged at runtime for each errant inbound SOAP request.
# {0} user id
# Do not translate mapToUserRegistry
error_authenticate_maptouser=CWWKW0232E: \u65e0\u6cd5\u4f7f\u7528\u7528\u6237\u6807\u8bc6 [{0}] \u4e3a Web Service \u521b\u5efa\u5b89\u5168\u4e3b\u9898\u3002
error_authenticate_maptouser.explanation=\u65e0\u6cd5\u4e3a\u4ece SOAP \u5b89\u5168\u5934\u4e2d\u68c0\u7d22\u5230\u7684\u8c03\u7528\u8005\u4ee4\u724c\u521b\u5efa\u5b89\u5168\u4e3b\u9898\u3002\u786e\u4fdd\u6d88\u606f\u4e2d\u6307\u5b9a\u7684\u7528\u6237\u4f4d\u4e8e\u7528\u6237\u6ce8\u518c\u8868\u4e2d\u3002
error_authenticate_maptouser.useraction=\u8bf7\u6267\u884c\u4e0b\u5217\u5176\u4e2d\u4e00\u9879\u64cd\u4f5c\uff1a1) \u8bf7\u786e\u4fdd server.xml \u4e2d\u7528\u6237\u6ce8\u518c\u8868\u4e2d\u5b58\u5728\u8be5\u7528\u6237\u30022) \u8bf7\u52ff\u5728 callerToken \u914d\u7f6e\u4e2d\u8bbe\u7f6e mapToUserRegistry \u5c5e\u6027\u3002

no_callbacks_provided=CWWKW0233E: \u672a\u63d0\u4f9b\u56de\u8c03\uff0c\u65e0\u6cd5\u5904\u7406\u8bf7\u6c42\u3002
no_callbacks_provided.explanation=\u5fc5\u987b\u5c06\u81f3\u5c11\u4e00\u4e2a\u56de\u8c03\u4f20\u9012\u7ed9\u56de\u8c03\u5904\u7406\u7a0b\u5e8f\uff0c\u4ee5\u5904\u7406\u548c\u8fd4\u56de SAML \u4ee4\u724c\u3002
no_callbacks_provided.useraction=\u5728\u6b64\u60c5\u51b5\u4e2d\uff0c\u7528\u6237\u65e0\u9700\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002

no_saml_found_in_subject=CWWKW0234E: \u4e3b\u9898\u4e2d\u7f3a\u5c11\u6240\u9700 SAML \u4ee4\u724c\u3002
no_saml_found_in_subject.explanation=\u4ece\u4e3b\u9898\u62bd\u53d6 SAML \u4ee4\u724c\u65f6\u53d1\u751f\u9519\u8bef\uff0c\u5f53\u524d\u4e3b\u9898\u4e2d\u627e\u4e0d\u5230 SAML \u5143\u7d20\u3002
no_saml_found_in_subject.useraction=\u5982\u679c\u521b\u5efa run-as \u4e3b\u9898\uff0c\u8bf7\u786e\u4fdd\u5c06 SAML \u4ee4\u724c\u6dfb\u52a0\u5230\u4e3b\u9898\u3002\u6216\u8005\uff0c\u901a\u8fc7\u5728 SAML \u914d\u7f6e\u4e2d\u68c0\u67e5 includeTokenInSubject \u5c5e\u6027\uff0c\u786e\u4fdd\u670d\u52a1\u5668\u914d\u7f6e\u652f\u6301\u5411\u4e3b\u9898\u6dfb\u52a0 SAML \u4ee4\u724c\u3002
