###############################################################################
# Copyright (c) 2019 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
# ORIGINS: 27         (used for IBM originated files)
#
# Caution: because some text editors automatically convert
# consecutive runs of spaces to tabs, use the Java "\ " escape
# sequence to represent each space in a run of multiple spaces.
#
# translator:
# Translate words on the right hand side of the = sign.
# Do not translate {0}, {1}, %1, %2 etc.
# Do NOT translate any words when they START with: '-
# Do NOT translate any words when they START with: @
# Preserve all spaces after a backslash (\) even at the end of a line.
#
# NLS_MESSAGEFORMAT_ALL
#
#CMVCPATHNAME com.ibm.ws.wssecurity/resources/com/ibm/ws/wssecurity/resources/WSSecurityMessages.nlsprops
#ISMESSAGEFILE TRUE
#COMPONENTPREFIX CWWKW
#COMPONENTNAMEFOR CWWKW WebSphere JAX-WS WebServices Security
#NLS_MESSAGEFORMAT_VAR
#NLS_ENCODING=UNICODE
#

# -------------------------------------------------------------------------------------------------
# WSSecurity message ID from CWWKW0201 - CWWKW0300

# TO BE DELETED
# info.policy.loaded=CWWKW0201I: WS-Security Policy Loader.
# info.policy.loaded.explanation=The IBM WS-Security Policy Loader is called.
# info.policy.loaded.useraction=Information only.

# Message logged once during server startup
# {0} is the exception
error.policy.notloaded=CWWKW0202E: WS-Security \u7121\u6cd5\u5957\u7528\u65bc\u4efb\u4f55 Web \u670d\u52d9\u3002\u8a66\u5716\u5728 CXF \u67b6\u69cb\u4e2d\u767b\u9304 WS-Security \u539f\u5247\u8f09\u5165\u5668\u6642\uff0c\u767c\u751f\u932f\u8aa4\uff1a[{0}]
error.policy.notloaded.explanation=\u5728\u555f\u52d5\u4f3a\u670d\u5668\u671f\u9593\uff0c\u7121\u6cd5\u5728 CXF \u67b6\u69cb\u4e2d\u767b\u9304 WS-Security \u539f\u5247\u8f09\u5165\u5668\u3002\u767c\u751f\u932f\u8aa4\uff0c\u4e0d\u6703\u91dd\u5c0d\u4efb\u4f55 SOAP \u8a0a\u606f\u4f86\u547c\u53eb WS-Security \u57f7\u884c\u6642\u671f\uff0c\u4e14\u4e0d\u6703\u65b0\u589e WS-Security \u9650\u5236\u3002
error.policy.notloaded.useraction=\u8acb\u8655\u7406\u8a0a\u606f\u4e2d\u6240\u8aaa\u660e\u7684\u932f\u8aa4\u3002

# Message logged once during server startup
WSSECURITY_NO_CONFIG_DEFINED=CWWKW0203I: WS-Security \u7121\u6cd5\u5957\u7528\u65bc\u4efb\u4f55 Web \u670d\u52d9\u7528\u6236\u7aef\u61c9\u7528\u7a0b\u5f0f\u3002\u5728 server.xml \u4e2d\uff0cWS-Security \u7528\u6236\u7aef\u914d\u7f6e\u5143\u7d20 wsSecurityClient \u4e0d\u5b58\u5728\u3002
WSSECURITY_NO_CONFIG_DEFINED.explanation=\u5df2\u555f\u7528 wsSecurity-1.1 \u7279\u6027\uff0c\u4f46 WS-Security \u5143\u4ef6\u5728 server.xml \u4e2d\u627e\u4e0d\u5230 wsSecurityClient \u5143\u7d20\u3002
WSSECURITY_NO_CONFIG_DEFINED.useraction=\u5982\u679c\u9700\u8981\u7528\u6236\u7aef Web \u670d\u52d9\u61c9\u7528\u7a0b\u5f0f\u7684 WS-Security \u9650\u5236\uff0c\u8acb\u65b0\u589e\u5fc5\u8981\u7684 wsSecurityClient \u914d\u7f6e\u5143\u7d20\u5230 server.xml \u4e2d\u3002

# Message logged once during server startup
WSSECURITY_NO_CONFIG_DEFINED_PROV=CWWKW0204I: WS-Security \u7121\u6cd5\u5957\u7528\u65bc\u4efb\u4f55 Web \u670d\u52d9\u63d0\u4f9b\u8005\u61c9\u7528\u7a0b\u5f0f\u3002\u5728 server.xml \u4e2d\uff0cWS-Security \u63d0\u4f9b\u8005\u914d\u7f6e\u5143\u7d20 wsSecurityProvider \u4e0d\u5b58\u5728\u3002
WSSECURITY_NO_CONFIG_DEFINED_PROV.explanation=\u5df2\u555f\u7528 wsSecurity-1.1 \u7279\u6027\uff0c\u4f46 WS-Security \u5143\u4ef6\u5728 server.xml \u4e2d\u627e\u4e0d\u5230 wsSecurityProvider \u5143\u7d20\u3002
WSSECURITY_NO_CONFIG_DEFINED_PROV.useraction=\u5982\u679c\u9700\u8981\u63d0\u4f9b\u8005 Web \u670d\u52d9\u61c9\u7528\u7a0b\u5f0f\u7684 WS-Security \u9650\u5236\uff0c\u8acb\u65b0\u589e\u5fc5\u8981\u7684 wsSecurityProvider \u914d\u7f6e\u5143\u7d20\u5230 server.xml \u4e2d\u3002

# TO BE DELETED
# WSSECURITY_NO_USER_CONFIG_DEFINED=CWWKW0204I: The user name does not exist.
# WSSECURITY_NO_USER_CONFIG_DEFINED.explanation=user name needs to be specified as attribute.
# WSSECURITY_NO_USER_CONFIG_DEFINED.useraction=Check the syntax.

# Message logged once during server startup on error when reading in the config
# {0} is a token type, ex: X509, UsernameToken
# {1} is the list of valid token types
UNKNOWN_CALLER_TOKEN_NAME=CWWKW0205E: \u547c\u53eb\u7aef\u8a18\u865f\u914d\u7f6e\u7121\u6cd5\u5957\u7528\u65bc Web \u670d\u52d9\u63d0\u4f9b\u8005\u61c9\u7528\u7a0b\u5f0f\u3002\u5728 server.xml \u4e2d\uff0c\u6307\u5b9a\u7d66 wsSecurityProvider \u914d\u7f6e\u4e2d callerToken \u5143\u7d20\u7684\u540d\u7a31 [{0}] \u7121\u6548\u3002\u6709\u6548\u503c\u5982\u4e0b\uff1a[{1}] 
UNKNOWN_CALLER_TOKEN_NAME.explanation=\u5728 server.xml \u4e2d\uff0c\u6307\u5b9a\u7d66 wsSecurityProvider \u914d\u7f6e\u4e2d callerToken \u5143\u7d20\u7684\u540d\u7a31\u7121\u6548\u3002
UNKNOWN_CALLER_TOKEN_NAME.useraction=\u8acb\u6aa2\u67e5 server.xml \u6a94\uff0c\u78ba\u5b9a\u6307\u5b9a\u7d66 callerToken \u5143\u7d20\u7684\u503c\u53d7\u5230\u652f\u63f4\u3002\u6709\u6548\u503c\u986f\u793a\u5728\u932f\u8aa4\u8a0a\u606f\u4e2d\u3002

# Message logged at runtime for each errant inbound SOAP request
multiple_unt_exist_err=CWWKW0206E: \u7121\u6cd5\u5efa\u7acb Web \u670d\u52d9\u7684\u5b89\u5168\u4e3b\u984c\u3002\u5728\u5165\u57e0\u8a0a\u606f\u4e2d\u7121\u6cd5\u8b58\u5225 callerToken\uff0c\u56e0\u70ba\u5728\u300cSOAP \u5b89\u5168\u300d\u6a19\u982d\u4e2d\u6709\u591a\u500b UsernameToken\u3002
multiple_unt_exist_err.explanation=security.xml \u4e2d\u7684 callerToken \u8a2d\u70ba UsernameToken\uff0c\u4e14\u5165\u57e0 SOAP \u8a0a\u606f\u4e2d\u7684 Security \u6a19\u982d\u5305\u542b\u591a\u500b UsernameToken\u3002\u56e0\u6b64\uff0cWS-Security \u57f7\u884c\u6642\u671f\u7121\u6cd5\u5224\u65b7\u547c\u53eb\u7aef\u8a18\u865f\u8981\u4f7f\u7528\u54ea\u500b UsernameToken\u3002
multiple_unt_exist_err.useraction=\u8acb\u57f7\u884c\u4e0b\u5217\u52d5\u4f5c\u4e4b\u4e00\uff1a1) \u5c07\u7528\u6236\u7aef\u914d\u7f6e\u8b8a\u66f4\u70ba\u53ea\u50b3\u9001\u4e00\u500b UsernameToken\uff0c2) \u79fb\u9664 server.xml \u4e2d\u7684 callerToken \u914d\u7f6e

# TO BE DELETED
#  no_unt_exist_err=CWWKW0207E: There is no UsernameToken in inbound SOAP Security header to process the caller.
#  no_unt_exist_err.explanation=Configuration requires the username token to be present in the message.
#  no_unt_exist_err.useraction=Make sure that the requestor WS-Security policy specifies to generate one username token.

# TO BE DELETED
#  no_x509_token_exist_err=CWWKW0208E: There is no binary security token in the message to process the caller.
#  no_x509_token_exist_err.explanation=Missing binary security token in the message.
#  no_x509_token_exist_err.useraction=Make sure that the requestor WS-Security policy specifies to include at least one binary security token.

# Message logged at runtime for each errant inbound SOAP request
# {0} is a token type, ex: X509, UsernameToken ({0} is supposed to be used twice)
no_caller_exist_err=CWWKW0207E: \u7121\u6cd5\u5efa\u7acb Web \u670d\u52d9\u7684\u5b89\u5168\u4e3b\u984c\u3002\u5df2\u914d\u7f6e {0} callerToken\uff0c\u4f46\u5165\u57e0\u300cSOAP \u5b89\u5168\u300d\u6a19\u982d\u4e2d\u6c92\u6709 {0} \u8a18\u865f\u3002\u7121\u6cd5\u9078\u53d6\u547c\u53eb\u7aef\u8a18\u865f\u3002
no_caller_exist_err.explanation=\u5728\u300cSOAP \u5b89\u5168\u300d\u6a19\u982d\u4e2d\uff0c\u6c92\u6709 server.xml \u4e2d\u6240\u914d\u7f6e\u7684 callerToken\u3002
no_caller_exist_err.useraction=\u8acb\u57f7\u884c\u4e0b\u5217\u52d5\u4f5c\u4e4b\u4e00\uff1a1) \u5c07\u7528\u6236\u7aef\u914d\u7f6e\u8b8a\u66f4\u70ba\u6703\u50b3\u9001\u6b63\u78ba\u7684\u547c\u53eb\u7aef\u8a18\u865f\uff0c2) \u79fb\u9664 server.xml \u4e2d\u7684 callerToken \u914d\u7f6e

# TO BE DELETED
# empty_results_list=CWWKW0209E: A security subject cannot be created for the web service.  Empty results list.
# empty_results_list.explanation=Cannot get message verification results.
# empty_results_list.useraction=This might be due to an internal problem. Please check the logs for more information.

# Message logged at runtime for each errant inbound SOAP request.
# {0} is the error message received from base security
error_authenticate=CWWKW0210E: \u56e0\u70ba [{0}]\uff0c\u7121\u6cd5\u5efa\u7acb Web \u670d\u52d9\u7684\u5b89\u5168\u4e3b\u984c\u3002
error_authenticate.explanation=\u7121\u6cd5\u5efa\u7acb\u5f9e\u300cSOAP \u5b89\u5168\u300d\u6a19\u982d\u4e2d\u64f7\u53d6\u4e4b\u547c\u53eb\u7aef\u8a18\u865f\u7684\u5b89\u5168\u4e3b\u984c\u3002\u8a0a\u606f\u4e2d\u6709\u932f\u8aa4\u539f\u56e0\u7684\u8aaa\u660e\u3002
error_authenticate.useraction=\u8acb\u8655\u7406\u8a0a\u606f\u4e2d\u6240\u8aaa\u660e\u7684\u932f\u8aa4\u3002

# TO BE DELETED
# Message logged at runtime for each errant inbound SOAP request.
# no_endorsing_token_no_asymmetric_token=CWWKW0211E: There is no EndorsingSupporting token or Asymmetric signature token in the message.
# no_endorsing_token_no_asymmetric_token.explanation=Missing the token in the message to complete caller processing.
# no_endorsing_token_no_asymmetric_token.useraction=Make sure that the requestor WS-Security policy specifies to include either an EndorsingSupporting type token or an Asymmetric signature token in the message.

# Message logged at runtime for each errant inbound SOAP request.
multiple_endorsing_token_err=CWWKW0212E: \u7121\u6cd5\u5efa\u7acb Web \u670d\u52d9\u7684\u5b89\u5168\u4e3b\u984c\u3002\u5728\u5165\u57e0\u8a0a\u606f\u4e2d\u7121\u6cd5\u8b58\u5225\u547c\u53eb\u7aef\u8a18\u865f\u3002server.xml \u4e2d\u7684 callerToken \u5df2\u8a2d\u70ba X509Token\uff0cendorsingSupportingToken \u5df2\u8a2d\u70ba true\uff08\u9810\u8a2d\u503c\uff09\uff0c\u5728\u5165\u57e0\u300cSOAP \u5b89\u5168\u300d\u6a19\u982d\u4e2d\uff0c\u6709\u591a\u500b EndorsingSupportingToken\u3002
multiple_endorsing_token_err.explanation=server.xml \u4e2d\u7684 callerToken \u5df2\u8a2d\u70ba X509Token\uff0cendorsingSupportingToken \u5df2\u8a2d\u70ba true\uff08\u9810\u8a2d\u503c\uff09\uff0c\u5728\u5165\u57e0\u300cSOAP \u5b89\u5168\u300d\u6a19\u982d\u4e2d\uff0c\u6709\u591a\u500b EndorsingSupportingToken\u3002\u7531\u65bc\u8a0a\u606f\u4e2d\u5fc5\u9808\u6709\u55ae\u4e00\u547c\u53eb\u7aef\u8a18\u865f\uff0c\u624d\u80fd\u9806\u5229\u9078\u53d6\u547c\u53eb\u7aef\u8a18\u865f\uff0c\u56e0\u6b64\uff0c\u4e0d\u63a5\u53d7\u6709\u591a\u500b EndorsingSupportingToken\u3002
multiple_endorsing_token_err.useraction=\u8acb\u57f7\u884c\u4e0b\u5217\u52d5\u4f5c\u4e4b\u4e00\uff1a1) \u5c07\u539f\u5247\u8b8a\u66f4\u70ba\u8a0a\u606f\u4e2d\u53ea\u5305\u542b\u4e00\u500b endorsingSupportingToken\uff0c2) \u79fb\u9664 server.xml \u4e2d\u7684 callerToken \u914d\u7f6e\uff0c3) \u5728 server.xml \u7684 callerToken \u914d\u7f6e\u4e2d\uff0c\u5c07 endorsingSupportingToken \u8a2d\u70ba false

# Message logged at runtime for each errant inbound SOAP request.
multiple_asymmetric_token_err=CWWKW0213E: \u7121\u6cd5\u5efa\u7acb Web \u670d\u52d9\u7684\u5b89\u5168\u4e3b\u984c\u3002\u5728\u5165\u57e0\u8a0a\u606f\u4e2d\u7121\u6cd5\u8b58\u5225\u547c\u53eb\u7aef\u8a18\u865f\u3002server.xml \u4e2d\u7684 callerToken \u5df2\u8a2d\u70ba X509Token\uff0cendorsingSupportingToken \u5df2\u8a2d\u70ba false\uff0c\u5728\u5165\u57e0\u300cSOAP \u5b89\u5168\u300d\u6a19\u982d\u4e2d\uff0c\u6709\u591a\u500b\u300c\u975e\u5c0d\u7a31\u300d\u7c3d\u7ae0\u8a18\u865f\u3002
multiple_asymmetric_token_err.explanation=server.xml \u4e2d\u7684 callerToken \u5df2\u8a2d\u70ba X509Token\uff0cendorsingSupportingToken \u5df2\u8a2d\u70ba false\uff0c\u5728\u5165\u57e0\u300cSOAP \u5b89\u5168\u300d\u6a19\u982d\u4e2d\uff0c\u6709\u591a\u500b\u300c\u975e\u5c0d\u7a31\u300d\u7c3d\u7ae0\u8a18\u865f\u3002\u7531\u65bc\u8a0a\u606f\u4e2d\u5fc5\u9808\u6709\u55ae\u4e00\u547c\u53eb\u7aef\u8a18\u865f\uff0c\u624d\u80fd\u9806\u5229\u9078\u53d6\u547c\u53eb\u7aef\u8a18\u865f\uff0c\u56e0\u6b64\uff0c\u4e0d\u63a5\u53d7\u6709\u591a\u500b\u300c\u975e\u5c0d\u7a31\u300d\u7c3d\u7ae0\u8a18\u865f\u3002
multiple_asymmetric_token_err.useraction=\u8acb\u57f7\u884c\u4e0b\u5217\u52d5\u4f5c\u4e4b\u4e00\uff1a1) \u5c07\u539f\u5247\u8b8a\u66f4\u70ba\u8a0a\u606f\u4e2d\u53ea\u5305\u542b\u4e00\u500b\u300c\u975e\u5c0d\u7a31\u300d\u7c3d\u7ae0\u8a18\u865f\uff0c2) \u79fb\u9664 server.xml \u4e2d\u7684 callerToken \u914d\u7f6e

# Do not translate "NotBefore"
saml_token_not_yet_valid=CWWKW0214E: SAML \u8a18\u865f\u4e2d\u7684 NotBefore \u4e3b\u5f35 [{0}] \u8d85\u51fa\u7bc4\u570d\u3002\u73fe\u884c\u6642\u9593\u662f [{1}]\u3002\u73fe\u884c\u6642\u9593\u504f\u5dee\u8a2d\u5b9a\u662f [{2}] \u79d2\u3002
saml_token_not_yet_valid.explanation=SAML \u8a18\u865f\u5167\u7684 NotBefore \u4e3b\u5f35\u6307\u5b9a\u8a18\u865f\u7684\u751f\u6548\u6642\u9593\uff1b\u5728\u9019\u500b\u6642\u9593\u4e4b\u524d\u7121\u6cd5\u4f7f\u7528\u8a18\u865f\u3002\u5982\u679c\u8981\u4f7f\u7528\u9019\u500b SAML \u8a18\u865f\uff0cNotBefore \u4e3b\u5f35\u7684\u503c\u5fc5\u9808\u662f\u525b\u525b\u904e\u53bb\u7684\u90a3\u4e00\u523b\u3002\u932f\u8aa4\u7684\u53ef\u80fd\u539f\u56e0\u662f\u63a5\u6536\u7aef\u7684\u6642\u9593\u8207\u4e3b\u5f35\u5efa\u7acb\u8005\u7684\u6642\u9593\u4e0d\u540c\u6b65\u3002
saml_token_not_yet_valid.useraction=\u8acb\u78ba\u5b9a IdP \u4e2d\u7684\u65e5\u671f\u548c\u6642\u9593\uff0c\u5df2\u548c\u9019\u500b SAML Web \u55ae\u4e00\u767b\u5165 (SSO) \u670d\u52d9\u63d0\u4f9b\u8005\u540c\u6b65\uff0c\u6216\u662f\u589e\u52a0\u6642\u9593\u504f\u5dee\u3002

# Do not translate "NotOnOrAfter"
saml_token_expired=CWWKW0215E: SAML \u8a18\u865f\u4e2d\u7684 NotOnOrAfter \u4e3b\u5f35 [{0}] \u8d85\u51fa\u7bc4\u570d\u3002\u73fe\u884c\u6642\u9593\u662f [{1}]\u3002\u73fe\u884c\u6642\u9593\u504f\u5dee\u8a2d\u5b9a\u662f [{2}] \u79d2\u3002
saml_token_expired.explanation=SAML \u8a18\u865f\u5167\u7684 NotOnOrAfter \u4e3b\u5f35\u6307\u5b9a\u8a18\u865f\u7684\u5230\u671f\u6642\u9593\u3002\u5fc5\u9808\u5728\u9019\u500b\u6642\u9593\u4e4b\u524d\u4f7f\u7528\u8a18\u865f\u3002\u932f\u8aa4\u7684\u53ef\u80fd\u539f\u56e0\u662f\u63a5\u6536\u7aef\u7684\u6642\u9593\u8207\u4e3b\u5f35\u5efa\u7acb\u8005\u7684\u6642\u9593\u4e0d\u540c\u6b65\u3002
saml_token_expired.useraction=\u8acb\u78ba\u5b9a IdP \u4e2d\u7684\u65e5\u671f\u548c\u6642\u9593\uff0c\u5df2\u548c\u9019\u500b SAML Web \u55ae\u4e00\u767b\u5165 (SSO) \u670d\u52d9\u63d0\u4f9b\u8005\u540c\u6b65\uff0c\u6216\u662f\u589e\u52a0\u6642\u9593\u504f\u5dee\u3002

# Do not translate "IssueInstant"
saml_token_issued_too_long_ago=CWWKW0216E: SAML \u8a18\u865f\u4e2d\u7684 IssueInstant [{0}] \u8d85\u51fa\u7bc4\u570d\u3002\u73fe\u884c\u6642\u9593\u662f [{1}]\u3002\u73fe\u884c\u6642\u9593\u504f\u5dee\u8a2d\u5b9a\u662f [{2}] \u79d2\u3002
saml_token_issued_too_long_ago.explanation=SAML \u8a18\u865f\u5167\u7684 IssueInstant \u4e3b\u5f35\u5df2\u96e2\u8981\u4f7f\u7528\u9019\u500b\u8a18\u865f\u7684\u6642\u9593\u592a\u4e45\u9060\u3002SAML \u8a18\u865f\u5728\u767c\u51fa\u4e4b\u5f8c\uff0c\u5fc5\u9808\u5728\u914d\u7f6e\u7684\u6642\u9593\u5167\u4f7f\u7528\u3002\u932f\u8aa4\u7684\u53ef\u80fd\u539f\u56e0\u662f\u63a5\u6536\u7aef\u7684\u6642\u9593\u8207\u4e3b\u5f35\u5efa\u7acb\u8005\u7684\u6642\u9593\u4e0d\u540c\u6b65\u3002
saml_token_issued_too_long_ago.useraction=\u8acb\u78ba\u5b9a IdP \u4e2d\u7684\u65e5\u671f\u548c\u6642\u9593\uff0c\u5df2\u548c\u9019\u500b SAML Web \u55ae\u4e00\u767b\u5165 (SSO) \u670d\u52d9\u63d0\u4f9b\u8005\u540c\u6b65\uff0c\u6216\u662f\u589e\u52a0\u6642\u9593\u504f\u5dee\u3002

# Do not translate "IssueInstant"
saml_token_issue_instant_in_future=CWWKW0217E: SAML \u8a18\u865f\u4e2d\u7684 IssueInstant [{0}] \u662f\u5728\u672a\u4f86\uff0c\u56e0\u6b64\u8d85\u51fa\u7bc4\u570d\u3002\u73fe\u884c\u6642\u9593\u662f [{1}]\u3002\u73fe\u884c\u6642\u9593\u504f\u5dee\u8a2d\u5b9a\u662f [{2}] \u79d2\u3002
saml_token_issue_instant_in_future.explanation=SAML \u8a18\u865f\u5167\u7684 IssueInstant \u4e3b\u5f35\u662f\u8a2d\u70ba\u672a\u4f86\u7684\u6642\u9593\uff0c\u56e0\u6b64\u5c1a\u672a\u8996\u70ba\u6709\u6548\u3002IssueInstant \u503c\u5fc5\u9808\u662f\u904e\u53bb\u7684\u6642\u9593\uff0c\u9019\u6a23 SAML \u8a18\u865f\u624d\u6703\u662f\u6709\u6548\u7684\u3002\u932f\u8aa4\u7684\u53ef\u80fd\u539f\u56e0\u662f\u63a5\u6536\u7aef\u7684\u6642\u9593\u8207\u4e3b\u5f35\u5efa\u7acb\u8005\u7684\u6642\u9593\u4e0d\u540c\u6b65\u3002
saml_token_issue_instant_in_future.useraction=\u8acb\u78ba\u5b9a IdP \u4e2d\u7684\u65e5\u671f\u548c\u6642\u9593\uff0c\u5df2\u548c\u9019\u500b SAML Web \u55ae\u4e00\u767b\u5165 (SSO) \u670d\u52d9\u63d0\u4f9b\u8005\u540c\u6b65\uff0c\u6216\u662f\u589e\u52a0\u6642\u9593\u504f\u5dee\u3002

failed_to_extract_saml_element=CWWKW0218W: \u5617\u8a66\u5f9e\u6240\u63d0\u4f9b\u7684 SAML \u8a18\u865f\u64f7\u53d6 SAML \u5143\u7d20\u6642\uff0c\u767c\u751f\u7570\u5e38\u72c0\u6cc1\u3002\u7570\u5e38\u72c0\u6cc1\u662f\uff1a[{0}]
failed_to_extract_saml_element.explanation=\u5256\u6790 SAML \u8a18\u865f\u6642\uff0c\u767c\u751f\u7570\u5e38\u72c0\u6cc1\u3002\u8a18\u865f\u53ef\u80fd\u5f62\u614b\u7570\u5e38\uff0c\u6216\u8005\u5617\u8a66\u5256\u6790\u8a18\u865f\u5b57\u4e32\u6642\uff0c\u767c\u751f\u5167\u90e8\u932f\u8aa4\u3002
failed_to_extract_saml_element.useraction=\u8acb\u6aa2\u67e5\u4f3a\u670d\u5668\u65e5\u8a8c\uff0c\u4ee5\u53d6\u5f97\u932f\u8aa4\u7684\u76f8\u95dc\u8cc7\u8a0a\u3002

failed_to_extract_saml_token_from_subject=CWWKW0219W: \u5617\u8a66\u5f9e\u4e3b\u9ad4\u64f7\u53d6 SAML \u8a18\u865f\u6642\uff0c\u767c\u751f\u7570\u5e38\u72c0\u6cc1\u3002\u7570\u5e38\u72c0\u6cc1\u662f\uff1a[{0}]
failed_to_extract_saml_token_from_subject.explanation=\u5f9e\u4e3b\u9ad4\u64f7\u53d6 SAML \u8a18\u865f\u6642\uff0c\u767c\u751f\u7570\u5e38\u72c0\u6cc1\u3002
failed_to_extract_saml_token_from_subject.useraction=\u8acb\u6aa2\u67e5\u4f3a\u670d\u5668\u65e5\u8a8c\uff0c\u4ee5\u53d6\u5f97\u932f\u8aa4\u7684\u76f8\u95dc\u8cc7\u8a0a\u3002

failed_to_obtain_subject_info=CWWKW0220E: \u9451\u5225\u5931\u6557\uff0c\u56e0\u70ba\u5f9e SAML \u4e3b\u5f35\u53d6\u5f97\u4e3b\u9ad4\u8cc7\u8a0a\u6642\uff0c\u767c\u751f\u7570\u5e38\u72c0\u6cc1\u3002\u7570\u5e38\u72c0\u6cc1\u662f\uff1a[{0}]
failed_to_obtain_subject_info.explanation=\u5617\u8a66\u5f9e\u6240\u63d0\u4f9b\u7684 SAML \u8a18\u865f\u53d6\u5f97\u4e3b\u9ad4\u7684\u76f8\u95dc\u8cc7\u8a0a\u6642\uff0c\u767c\u751f\u7570\u5e38\u72c0\u6cc1\u3002
failed_to_obtain_subject_info.useraction=\u8acb\u6aa2\u67e5\u4f3a\u670d\u5668\u65e5\u8a8c\uff0c\u4ee5\u53d6\u5f97\u932f\u8aa4\u7684\u76f8\u95dc\u8cc7\u8a0a\u3002

failed_to_authenticate=CWWKW0221E: \u9451\u5225\u5931\u6557\uff0c\u56e0\u70ba\u767c\u751f\u975e\u9810\u671f\u7684\u7570\u5e38\u72c0\u6cc1\u3002\u7570\u5e38\u72c0\u6cc1\u662f\uff1a[{0}]\u3002
failed_to_authenticate.explanation=\u8207\u4f7f\u7528\u8005\u767b\u9304\u4e92\u52d5\u671f\u9593\uff0c\u5728\u53d6\u5f97\u4e3b\u9ad4\u6216\u8b58\u5225\u8cc7\u8a0a\u6642\uff0c\u53ef\u80fd\u767c\u751f\u554f\u984c\u3002
failed_to_authenticate.useraction=\u8acb\u6aa2\u67e5\u4f3a\u670d\u5668\u65e5\u8a8c\uff0c\u4ee5\u53d6\u5f97\u8a72\u932f\u8aa4\u7684\u76f8\u95dc\u8cc7\u8a0a\u3002\u8acb\u78ba\u5b9a SAML \u8a18\u865f\u4e2d\u7684\u4e3b\u9ad4\u8cc7\u8a0a\u662f\u5c0d\u6620\u81f3\u6240\u914d\u7f6e\u7684\u4f7f\u7528\u8005\u767b\u9304\u4e2d\u7684\u671f\u671b\u503c\u3002

# Do not translate "UsernameToken"
password_type_mismatch=CWWKW0222E: \u8a18\u865f\u9a57\u8b49\u5931\u6557\uff0c\u56e0\u70ba\u6240\u6536\u5230\u7684 UsernameToken \u5bc6\u78bc\u985e\u578b [{0}] \u4e0d\u7b26\u5408\u5fc5\u8981\u7684\u5bc6\u78bc\u985e\u578b [{0}]\u3002
password_type_mismatch.explanation=UsernameToken \u4e2d\u7684\u5bc6\u78bc\u985e\u578b\u4e0d\u7b26\u5408 WS-Security \u539f\u5247\u4e2d\u6240\u5b9a\u7fa9\u7684\u5bc6\u78bc\u985e\u578b\u3002\u9019\u4e9b\u985e\u578b\u5fc5\u9808\u76f8\u540c\uff1bWeb \u670d\u52d9\u7528\u6236\u7aef\u5fc5\u9808\u6240\u4e3b\u5f35\u7684\u5bc6\u78bc\u985e\u578b\uff0c\u5fc5\u9808\u8207 WS-Security \u4e2d\u6240\u5b9a\u7fa9\u7684\u76f8\u540c\uff0c\u9019\u6a23\u624d\u80fd\u9a57\u8b49\u6210\u529f\u3002
password_type_mismatch.useraction=\u8acb\u78ba\u5b9a Web \u670d\u52d9\u7528\u6236\u7aef\u6240\u4e3b\u5f35\u7684\u5bc6\u78bc\u985e\u578b\uff0c\u8207 WS-Security \u539f\u5247\u4e2d\u6240\u5b9a\u7fa9\u7684\u76f8\u540c\u3002

# Do not translate "UsernameToken"
cannot_handle_custom_password_types=CWWKW0223E: \u8a18\u865f\u9a57\u8b49\u5931\u6557\uff0c\u56e0\u70ba\u5075\u6e2c\u5230\u81ea\u8a02\u5bc6\u78bc\u985e\u578b\uff0c\u4f46\u662f\u8981\u6c42\u4e2d\u63d0\u4f9b\u7684\u914d\u7f6e\u8cc7\u6599\u537b\u662f\u6307\u5b9a\u4e0d\u652f\u63f4\u81ea\u8a02\u5bc6\u78bc\u985e\u578b\u3002
cannot_handle_custom_password_types.explanation=UsernameToken \u4e2d\u7684\u5bc6\u78bc\u4e0d\u662f\u96dc\u6e4a\u4e5f\u4e0d\u662f\u7d14\u6587\u5b57\uff0c\u56e0\u6b64\u8996\u70ba\u81ea\u8a02\u5bc6\u78bc\u985e\u578b\u3002\u8981\u6c42\u8cc7\u6599\u4e2d\u7684\u914d\u7f6e\u6307\u5b9a\u4e0d\u652f\u63f4\u81ea\u8a02\u5bc6\u78bc\u985e\u578b\u3002
cannot_handle_custom_password_types.useraction=\u8acb\u78ba\u5b9a Web \u670d\u52d9\u7528\u6236\u7aef\u4f7f\u7528\u7684\u662f UsernameToken \u8a2d\u5b9a\u6a94\u4e2d\u6240\u5b9a\u7fa9\u7684\u5bc6\u78bc\u985e\u578b\uff0c\u6216\u662f\u5c07 Web \u670d\u52d9\u63d0\u4f9b\u8005\u914d\u7f6e\u6210\u63a5\u53d7\u81ea\u8a02\u5bc6\u78bc\u985e\u578b\u3002

# Do not translate "UsernameToken"
empty_user_or_password=CWWKW0224E: UsernameToken \u4e2d\u6307\u5b9a\u7684\u4f7f\u7528\u8005\u540d\u7a31\u6216\u5bc6\u78bc\u662f\u7a7a\u7684\u3002\u8acb\u6aa2\u67e5 UsernameToken\uff0c\u78ba\u5b9a\u8a18\u865f\u4e2d\u6240\u63d0\u4f9b\u7684\u4f7f\u7528\u8005\u540d\u7a31\u548c\u5bc6\u78bc\u975e\u7a7a\u767d\u3002
empty_user_or_password.explanation=UsernameToken \u4e2d\u7684\u4f7f\u7528\u8005\u540d\u7a31\u6216\u5bc6\u78bc\u907a\u6f0f\u6216\u662f\u7a7a\u767d\u3002
empty_user_or_password.useraction=\u8acb\u6aa2\u67e5\u8a18\u865f\u4e2d\u6709\u63d0\u4f9b\u4f7f\u7528\u8005\u540d\u7a31\u8207\u5bc6\u78bc\u3002\u5982\u679c\u6c92\u6709\u63d0\u4f9b\u4f7f\u7528\u8005\u540d\u7a31\u8207\u5bc6\u78bc\uff0c\u6703\u53d6\u5f97\u65b0\u7684 UsernameToken\u3002

registry_exception_checking_password=CWWKW0225E: \u5b58\u53d6\u4f7f\u7528\u8005\u767b\u9304\u6216\u6aa2\u67e5\u4f7f\u7528\u8005 [{0}] \u7684\u5bc6\u78bc\u6642\uff0c\u767c\u751f\u7570\u5e38\u72c0\u6cc1\u3002\u7570\u5e38\u72c0\u6cc1\u662f\uff1a[{1}]
registry_exception_checking_password.explanation=\u5f9e\u4f7f\u7528\u8005\u767b\u9304\u670d\u52d9\u53d6\u5f97\u4f7f\u7528\u8005\u767b\u9304\u7684\u53c3\u7167\u6642\u767c\u751f\u932f\u8aa4\uff0c\u6216\u8005\u6aa2\u67e5\u7d66\u5b9a\u4f7f\u7528\u8005\u7684\u5bc6\u78bc\u6642\uff0c\u767c\u751f\u7570\u5e38\u72c0\u6cc1\u3002
registry_exception_checking_password.useraction=\u8acb\u6aa2\u67e5\u4f3a\u670d\u5668\u65e5\u8a8c\uff0c\u4ee5\u53d6\u5f97\u8a72\u7570\u5e38\u72c0\u6cc1\u76f8\u95dc\u8cc7\u8a0a\u3002\u8acb\u78ba\u5b9a\u6240\u63d0\u4f9b\u7684\u4f7f\u7528\u8005\u540d\u7a31\u8207\u5bc6\u78bc\u6b63\u78ba\uff0c\u4e14\u5c0d\u61c9\u81f3\u6240\u914d\u7f6e\u4e4b\u4f7f\u7528\u8005\u767b\u9304\u4e2d\u7684\u9805\u76ee\u3002

check_password_failed=CWWKW0226E: \u7121\u6cd5\u9a57\u8b49\u4f7f\u7528\u8005 [{0}]\u3002\u8acb\u9a57\u8b49\u6240\u63d0\u4f9b\u7684\u4f7f\u7528\u8005\u540d\u7a31\u8207\u5bc6\u78bc\u8a8d\u8b49\u6b63\u78ba\u3002
check_password_failed.explanation=\u7121\u6cd5\u6839\u64da\u6240\u914d\u7f6e\u7684\u4f7f\u7528\u8005\u767b\u9304\uff0c\u4f86\u9a57\u8b49\u6307\u5b9a\u7684\u4f7f\u7528\u8005\u3002\u53ef\u80fd\u662f\u56e0\u70ba\u4f7f\u7528\u8005\u540d\u7a31\u6216\u5bc6\u78bc\u4e0d\u7b26\u3002
check_password_failed.useraction=\u8acb\u6aa2\u67e5\u6240\u63d0\u4f9b\u7684\u8a8d\u8b49\uff0c\u78ba\u5b9a\u4f7f\u7528\u8005\u540d\u7a31\u8207\u5bc6\u78bc\u7b26\u5408\u6240\u914d\u7f6e\u4f7f\u7528\u8005\u767b\u9304\u4e2d\u7684\u9805\u76ee\u3002

# Do not translate "PasswordDigest" or "UsernameToken"
no_password_returned_by_callback=CWWKW0227E: \u5bc6\u78bc\u56de\u547c\u8655\u7406\u7a0b\u5f0f\u6240\u50b3\u56de\u7684\u5bc6\u78bc\u662f\u7a7a\u503c\u3002
no_password_returned_by_callback.explanation=\u5bc6\u78bc\u56de\u547c\u8655\u7406\u7a0b\u5f0f\u5c0d\u65bc UsernameToken \u5167\u7684 PasswordDigest \u985e\u578b\u7684\u5bc6\u78bc\uff0c\u5fc5\u9808\u50b3\u56de\u975e\u7a7a\u503c\u7684\u5bc6\u78bc\u3002
no_password_returned_by_callback.useraction=\u8acb\u78ba\u5b9a\u5bc6\u78bc\u56de\u547c\u8655\u7406\u7a0b\u5f0f\u662f\u91dd\u5c0d\u6709\u6548\u4f7f\u7528\u8005\u50b3\u56de\u975e\u7a7a\u503c\u4e14\u975e\u7a7a\u767d\u7684\u5bc6\u78bc\u3002

# Example: {0} = userIdentifierValue {1} = userIdentifier
SAML20_ATTRIBUTE_ERR=CWWKW0228E: SAML \u4e3b\u5f35\u6c92\u6709\u5305\u542b [{0}] \u5c6c\u6027\u3002\u9700\u8981 [{0}] \u5c6c\u6027\uff0c\u56e0\u70ba\u547c\u53eb\u7aef\u914d\u7f6e\u5c07\u6b64\u9805\u6307\u5b9a\u70ba [{1}] ID\u3002
SAML20_ATTRIBUTE_ERR.explanation=SAML \u4e3b\u5f35\u907a\u6f0f\u5c6c\u6027\uff0c\u6216\u8005\u547c\u53eb\u7aef\u914d\u7f6e\u6307\u5b9a\u4e86\u932f\u8aa4\u7684\u503c\u7d66\u6240\u63d0\u53ca\u7684 ID\u3002
SAML20_ATTRIBUTE_ERR.useraction=\u8acb\u57f7\u884c\u4e0b\u5217\u5176\u4e2d\u4e00\u9805\uff1a1) \u78ba\u5b9a\u5c6c\u6027\u5b58\u5728\u65bc SAML \u4e3b\u5f35\u4e2d\u30022) \u914d\u7f6e callerToken\uff0c\u4ee5\u6307\u5b9a\u4e0d\u540c\u7684\u5c6c\u6027\u4f5c\u70ba ID\u3002

# Example: {0} = realm
SAML20_ELEMENT_ERR=CWWKW0229E: SAML \u4e3b\u5f35\u6c92\u6709\u5305\u542b [{0}] \u5143\u7d20\u3002\u9700\u8981 [{0}] \u5143\u7d20\u3002
SAML20_ELEMENT_ERR.explanation=SAML \u4e3b\u5f35\u907a\u6f0f WS-Security \u57f7\u884c\u6642\u671f\u5b8c\u6210\u547c\u53eb\u7aef\u8a18\u865f\u8655\u7406\u6240\u9700\u7684\u5143\u7d20\u3002
SAML20_ELEMENT_ERR.useraction=\u8acb\u57f7\u884c\u4e0b\u5217\u5176\u4e2d\u4e00\u9805\uff1a1) \u78ba\u5b9a\u5fc5\u8981\u5143\u7d20\u5b58\u5728\u65bc SAML \u4e3b\u5f35\u4e2d\u30022) \u914d\u7f6e callerToken\uff0c\u4ee5\u5b9a\u7fa9\u8a72\u5143\u7d20\u7684\u503c\u3002


SAML20_CANNOT_RESOLVE_ASSERTION=CWWKW0230E: UserCredentialResolver \u7121\u6cd5\u89e3\u6790 SAML \u4e3b\u5f35\uff0c\u800c\u96a8\u8a0a\u606f [{0}] \u64f2\u51fa\u4e86 UserIdentityException\u3002
SAML20_CANNOT_RESOLVE_ASSERTION.explanation=\u4f7f\u7528\u8005\u7279\u6027\u63d0\u4f9b\u7684 UserCredentialResolver \u670d\u52d9\u7121\u6cd5\u9069\u7576\u5c0d\u6620 SAML \u4e3b\u5f35\uff0c\u4e26\u64f2\u51fa UserIdentityException\u3002
SAML20_CANNOT_RESOLVE_ASSERTION.useraction=\u5982\u679c\u610f\u5916\u767c\u751f UserIdentityException\uff0c\u8acb\u78ba\u5b9a UserCredentialResolver \u670d\u52d9\u8a2d\u5b9a\u9069\u7576\u3002

# Message logged at runtime for each errant inbound SOAP request
multiple_saml_exist_err=CWWKW0231E: \u7121\u6cd5\u5efa\u7acb Web \u670d\u52d9\u7684\u5b89\u5168\u4e3b\u984c\u3002\u5728\u5165\u57e0\u8a0a\u606f\u4e2d\u7121\u6cd5\u8b58\u5225 callerToken\uff0c\u56e0\u70ba\u5728\u300cSOAP \u5b89\u5168\u300d\u6a19\u982d\u4e2d\u6709\u591a\u9805 SAML \u4e3b\u5f35\u3002
multiple_saml_exist_err.explanation=server.xml \u4e2d\u7684 callerToken \u8a2d\u70ba SamlToken\uff0c\u4e14\u5165\u57e0 SOAP \u8a0a\u606f\u4e2d\u7684\u300c\u5b89\u5168\u300d\u6a19\u982d\u5305\u542b\u591a\u9805 SAML \u4e3b\u5f35\u3002\u56e0\u6b64\uff0cWS-Security \u57f7\u884c\u6642\u671f\u7121\u6cd5\u5224\u65b7\u547c\u53eb\u7aef\u8a18\u865f\u8981\u4f7f\u7528\u54ea\u4e00\u9805\u300cSAML \u4e3b\u5f35\u300d\u3002
multiple_saml_exist_err.useraction=\u8acb\u57f7\u884c\u4e0b\u5217\u5176\u4e2d\u4e00\u9805\uff1a1) \u5c07\u7528\u6236\u7aef\u914d\u7f6e\u8b8a\u66f4\u70ba\u53ea\u50b3\u9001\u4e00\u9805\u300cSAML \u4e3b\u5f35\u300d\uff0c2) \u79fb\u9664 server.xml \u4e2d\u7684 callerToken \u914d\u7f6e

# Message logged at runtime for each errant inbound SOAP request.
# {0} user id
# Do not translate mapToUserRegistry
error_authenticate_maptouser=CWWKW0232E: \u7121\u6cd5\u5229\u7528\u4f7f\u7528\u8005 ID [{0}] \u4f86\u5efa\u7acb Web \u670d\u52d9\u7684\u5b89\u5168\u4e3b\u984c\u3002
error_authenticate_maptouser.explanation=\u7121\u6cd5\u5efa\u7acb\u5f9e\u300cSOAP \u5b89\u5168\u300d\u6a19\u982d\u4e2d\u64f7\u53d6\u4e4b\u547c\u53eb\u7aef\u8a18\u865f\u7684\u5b89\u5168\u4e3b\u984c\u3002\u8acb\u78ba\u5b9a\u5728\u4f7f\u7528\u8005\u767b\u9304\u4e2d\uff0c\u8a0a\u606f\u6240\u6307\u5b9a\u7684\u4f7f\u7528\u8005\u5b58\u5728\u3002
error_authenticate_maptouser.useraction=\u8acb\u57f7\u884c\u4e0b\u5217\u52d5\u4f5c\u4e4b\u4e00\uff1a1) \u5728 server.xml \u4e2d\uff0c\u78ba\u5b9a\u4f7f\u7528\u8005\u5728\u4f7f\u7528\u8005\u767b\u9304\u4e2d\u5b58\u5728\u30022) \u4e0d\u53ef\u5728 callerToken \u914d\u7f6e\u4e2d\u8a2d\u5b9a mapToUserRegistry \u5c6c\u6027\u3002

no_callbacks_provided=CWWKW0233E: \u672a\u63d0\u4f9b\u56de\u547c\u4f86\u8655\u7406\u8981\u6c42\u3002
no_callbacks_provided.explanation=\u81f3\u5c11\u5fc5\u9808\u5411\u56de\u547c\u8655\u7406\u5e38\u5f0f\u50b3\u905e\u4e00\u500b\u56de\u547c\uff0c\u624d\u80fd\u8655\u7406\u53ca\u50b3\u56de SAML \u8a18\u865f\u3002
no_callbacks_provided.useraction=\u9019\u500b\u60c5\u6cc1\u6c92\u6709\u53ef\u7528\u7684\u4f7f\u7528\u8005\u52d5\u4f5c\u3002

no_saml_found_in_subject=CWWKW0234E: \u4e3b\u984c\u907a\u6f0f\u5fc5\u8981\u7684 SAML \u8a18\u865f\u3002
no_saml_found_in_subject.explanation=\u5f9e\u4e3b\u984c\u4e2d\u64f7\u53d6 SAML \u8a18\u865f\u6642\u767c\u751f\u932f\u8aa4\uff0c\u6216\u5728\u73fe\u884c\u4e3b\u984c\u4e2d\u627e\u4e0d\u5230 SAML \u5143\u7d20\u3002
no_saml_found_in_subject.useraction=\u5982\u679c\u60a8\u5efa\u7acb\u57f7\u884c\u8eab\u5206\u4e3b\u984c\uff0c\u8acb\u78ba\u5b9a\u5df2\u5c07 SAML \u8a18\u865f\u65b0\u589e\u81f3\u4e3b\u984c\u4e2d\u3002\u5426\u5247\uff0c\u8acb\u6aa2\u67e5 SAML \u914d\u7f6e\u4e2d\u7684 includeTokenInSubject \u5c6c\u6027\uff0c\u78ba\u5b9a\u60a8\u7684\u4f3a\u670d\u5668\u914d\u7f6e\u652f\u63f4\u65b0\u589e SAML \u8a18\u865f\u81f3\u4e3b\u984c\u4e2d\u3002
