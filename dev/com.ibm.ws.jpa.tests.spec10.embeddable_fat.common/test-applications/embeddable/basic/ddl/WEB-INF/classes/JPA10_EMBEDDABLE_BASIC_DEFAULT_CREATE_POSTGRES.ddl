CREATE TABLE AnnRootEmBT (id INTEGER NOT NULL, enumeratedOrdinalValueFA SMALLINT, enumeratedStringValueFA VARCHAR(20), enumeratedOrdinalValuePA SMALLINT, enumeratedStringValuePA VARCHAR(20), integerValueAttributeOverride INTEGER, integerValue INTEGER, integerValueFAColumn INTEGER, integerValuePAColumn INTEGER, clobValueFA TEXT, clobValuePA TEXT, temporalValueFA DATE, temporalValuePA DATE, PRIMARY KEY (id));
CREATE TABLE ColDate (parent_id INTEGER, value TIMESTAMP, valueOrderColumn INTEGER);
CREATE TABLE ColEnum (parent_id INTEGER, value VARCHAR(255), valueOrderColumn INTEGER);
CREATE TABLE ColInt (parent_id INTEGER, value INTEGER, valueOrderColumn INTEGER);
CREATE TABLE ColLob (parent_id INTEGER, value VARCHAR(255), valueOrderColumn INTEGER);
CREATE TABLE EntColLobPAE (parent_id INTEGER, clobValuePA TEXT, valueOrderColumn INTEGER);
CREATE TABLE EntListEnumPAEOrderBy (parent_id INTEGER, enumeratedOrdinalValuePA SMALLINT, enumeratedStringValuePA VARCHAR(20));
CREATE TABLE EntListEnumPAEOrderColumn (parent_id INTEGER, enumeratedOrdinalValuePA SMALLINT, enumeratedStringValuePA VARCHAR(20), valueOrderColumn INTEGER);
CREATE TABLE EntListIntegerAOE (parent_id INTEGER, integerValueAttributeOverride INTEGER, valueOrderColumn INTEGER);
CREATE TABLE EntListIntegerE (parent_id INTEGER, integerValue INTEGER, valueOrderColumn INTEGER);
CREATE TABLE EntListIntegerPAE (parent_id INTEGER, integerValuePAColumn INTEGER, valueOrderColumn INTEGER);
CREATE TABLE EntListTemporalPAE (parent_id INTEGER, temporalValuePA DATE, valueOrderColumn INTEGER);
CREATE TABLE EntMapDateTemporalPAE (parent_id INTEGER, mykey DATE NOT NULL, temporalValuePA DATE);
CREATE TABLE EntMapEnumPAEEnumPAE (parent_id INTEGER, mykey VARCHAR(255) NOT NULL, valueOrdinal SMALLINT, valueString VARCHAR(255));
CREATE TABLE EntMapIntegerEIntegerE (parent_id INTEGER, mykey INTEGER, value INTEGER);
CREATE TABLE EntMapIntegerIntegerPAE (parent_id INTEGER, mykey INTEGER NOT NULL, value INTEGER);
CREATE TABLE EntMapIntegerTemporalPAE (parent_id INTEGER, mykey INTEGER NOT NULL, temporalValuePA DATE);
CREATE TABLE EntMapLobPAELobPAE (parent_id INTEGER, mykey TEXT, value TEXT);
CREATE TABLE EntSetIntegerPAE (parent_id INTEGER, integerValuePAColumn INTEGER);
CREATE TABLE ListDate (parent_id INTEGER, value TIMESTAMP, valueOrderColumn INTEGER);
CREATE TABLE ListEnum (parent_id INTEGER, value VARCHAR(255), valueOrderColumn INTEGER);
CREATE TABLE ListIntOrderBy (parent_id INTEGER, value INTEGER);
CREATE TABLE ListIntOrderColumn (parent_id INTEGER, value INTEGER, valueOrderColumn INTEGER);
CREATE TABLE ListLob (parent_id INTEGER, value VARCHAR(255), valueOrderColumn INTEGER);
CREATE TABLE MapDateDate (parent_id INTEGER, mykey DATE NOT NULL, value TIMESTAMP);
CREATE TABLE MapEnumEnum (parent_id INTEGER, mykey VARCHAR(255) NOT NULL, value VARCHAR(255));
CREATE TABLE MapEnumLob (parent_id INTEGER, mykey VARCHAR(255) NOT NULL, value VARCHAR(255));
CREATE TABLE MapIntDate (parent_id INTEGER, mykey INTEGER NOT NULL, value TIMESTAMP);
CREATE TABLE MapIntInt (parent_id INTEGER, mykey INTEGER NOT NULL, value INTEGER);
CREATE TABLE SetDate (parent_id INTEGER, value TIMESTAMP);
CREATE TABLE SetEnum (parent_id INTEGER, value VARCHAR(255));
CREATE TABLE SetInt (parent_id INTEGER, value INTEGER);
CREATE TABLE SetLob (parent_id INTEGER, value VARCHAR(255));
CREATE TABLE XMLRootEmBT (id INTEGER NOT NULL, enumeratedOrdinalValueFA SMALLINT, enumeratedStringValueFA VARCHAR(20), enumeratedOrdinalValuePA SMALLINT, enumeratedStringValuePA VARCHAR(20), integerValueAttributeOverride INTEGER, integerValue INTEGER, integerValueFAColumn INTEGER, integerValuePAColumn INTEGER, transientValue INTEGER, clobValueFA TEXT, clobValuePA TEXT, temporalValueFA DATE, temporalValuePA DATE, PRIMARY KEY (id));
CREATE TABLE XMLColDate (parent_id INTEGER, value DATE, valueOrderColumn INTEGER);
CREATE TABLE XMLColEnum (parent_id INTEGER, value VARCHAR(255), valueOrderColumn INTEGER);
CREATE TABLE XMLColInt (parent_id INTEGER, value INTEGER, valueOrderColumn INTEGER);
CREATE TABLE XMLColLob (parent_id INTEGER, value TEXT, valueOrderColumn INTEGER);
CREATE TABLE XMLEntColLobPAE (parent_id INTEGER, clobValuePA TEXT, valueOrderColumn INTEGER);
CREATE TABLE XMLEntListEnumPAEOrderBy (parent_id INTEGER, enumeratedOrdinalValuePA SMALLINT, enumeratedStringValuePA VARCHAR(20));
CREATE TABLE XMLEntListEnumPAEOrderColumn (parent_id INTEGER, enumeratedOrdinalValuePA SMALLINT, enumeratedStringValuePA VARCHAR(20), valueOrderColumn INTEGER);
CREATE TABLE XMLEntListIntegerAOE (parent_id INTEGER, integerValueAttributeOverride INTEGER, valueOrderColumn INTEGER);
CREATE TABLE XMLEntListIntegerE (parent_id INTEGER, integerValue INTEGER, valueOrderColumn INTEGER);
CREATE TABLE XMLEntListIntegerPAE (parent_id INTEGER, integerValuePAColumn INTEGER, valueOrderColumn INTEGER);
CREATE TABLE XMLListDate (parent_id INTEGER, value DATE, valueOrderColumn INTEGER);
CREATE TABLE XMLListEnum (parent_id INTEGER, value VARCHAR(255), valueOrderColumn INTEGER);
CREATE TABLE XMLListIntOrderBy (parent_id INTEGER, value INTEGER);
CREATE TABLE XMLListIntOrderColumn (parent_id INTEGER, value INTEGER, valueOrderColumn INTEGER);
CREATE TABLE XMLListLob (parent_id INTEGER, value TEXT, valueOrderColumn INTEGER);
CREATE TABLE XMLListTemporalPAE (parent_id INTEGER, temporalValuePA DATE, valueOrderColumn INTEGER);
CREATE TABLE XMLMapDateDate (parent_id INTEGER, mykey TIMESTAMP, value DATE);
CREATE TABLE XMLMapDateTemporalPAE (parent_id INTEGER, mykey TIMESTAMP, temporalValuePA DATE);
CREATE TABLE XMLMapEnumEnum (parent_id INTEGER, mykey VARCHAR(255), value VARCHAR(255));
CREATE TABLE XMLMapEnumLob (parent_id INTEGER, mykey VARCHAR(255), value TEXT);
CREATE TABLE XMLMapIntDate (parent_id INTEGER, mykey INTEGER, value DATE);
CREATE TABLE XMLMapIntegerTemporalPAE (parent_id INTEGER, mykey INTEGER, temporalValuePA DATE);
CREATE TABLE XMLMapIntInt (parent_id INTEGER, mykey INTEGER, value INTEGER);
CREATE TABLE XMLSetDate (parent_id INTEGER, value DATE);
CREATE TABLE XMLSetEnum (parent_id INTEGER, value VARCHAR(255));
CREATE TABLE XMLSetInt (parent_id INTEGER, value INTEGER);
CREATE TABLE XMLSetIntegerPAE (parent_id INTEGER, integerValuePAColumn INTEGER);
CREATE TABLE XMLSetLob (parent_id INTEGER, value TEXT);
CREATE INDEX I_COLDATE_PARENT_ID ON ColDate (parent_id);
CREATE INDEX I_COLENUM_PARENT_ID ON ColEnum (parent_id);
CREATE INDEX I_COLINT_PARENT_ID ON ColInt (parent_id);
CREATE INDEX I_COLLOB_PARENT_ID ON ColLob (parent_id);
CREATE INDEX I_NTCLLBP_PARENT_ID ON EntColLobPAE (parent_id);
CREATE INDEX I_NTLSRBY_PARENT_ID ON EntListEnumPAEOrderBy (parent_id);
CREATE INDEX I_NTLSLMN_PARENT_ID ON EntListEnumPAEOrderColumn (parent_id);
CREATE INDEX I_NTLSTGR_PARENT_ID ON EntListIntegerAOE (parent_id);
CREATE INDEX I_NTLSTGR_PARENT_ID1 ON EntListIntegerE (parent_id);
CREATE INDEX I_NTLSGRP_PARENT_ID ON EntListIntegerPAE (parent_id);
CREATE INDEX I_NTLSRLP_PARENT_ID ON EntListTemporalPAE (parent_id);
CREATE INDEX I_NTMPRLP_PARENT_ID1 ON EntMapDateTemporalPAE (parent_id);
CREATE INDEX I_NTMPNMP_PARENT_ID ON EntMapEnumPAEEnumPAE (parent_id);
CREATE INDEX I_NTMPTGR_PARENT_ID ON EntMapIntegerEIntegerE (parent_id);
CREATE INDEX I_NTMPGRP_PARENT_ID ON EntMapIntegerIntegerPAE (parent_id);
CREATE INDEX I_NTMPRLP_PARENT_ID ON EntMapIntegerTemporalPAE (parent_id);
CREATE INDEX I_NTMPLBP_PARENT_ID ON EntMapLobPAELobPAE (parent_id);
CREATE INDEX I_NTSTGRP_PARENT_ID ON EntSetIntegerPAE (parent_id);
CREATE INDEX I_LISTDTE_PARENT_ID ON ListDate (parent_id);
CREATE INDEX I_LISTNUM_PARENT_ID ON ListEnum (parent_id);
CREATE INDEX I_LSTNRBY_PARENT_ID ON ListIntOrderBy (parent_id);
CREATE INDEX I_LSTNLMN_PARENT_ID ON ListIntOrderColumn (parent_id);
CREATE INDEX I_LISTLOB_PARENT_ID ON ListLob (parent_id);
CREATE INDEX I_MPDTDTE_PARENT_ID ON MapDateDate (parent_id);
CREATE INDEX I_MPNMNUM_PARENT_ID ON MapEnumEnum (parent_id);
CREATE INDEX I_MPNUMLB_PARENT_ID ON MapEnumLob (parent_id);
CREATE INDEX I_MPINTDT_PARENT_ID ON MapIntDate (parent_id);
CREATE INDEX I_MPNTINT_PARENT_ID ON MapIntInt (parent_id);
CREATE INDEX I_SETDATE_PARENT_ID ON SetDate (parent_id);
CREATE INDEX I_SETENUM_PARENT_ID ON SetEnum (parent_id);
CREATE INDEX I_SETINT_PARENT_ID ON SetInt (parent_id);
CREATE INDEX I_SETLOB_PARENT_ID ON SetLob (parent_id);
CREATE INDEX I_XMLCLDT_PARENT_ID ON XMLColDate (parent_id);
CREATE INDEX I_XMLCLNM_PARENT_ID ON XMLColEnum (parent_id);
CREATE INDEX I_XMLCLNT_PARENT_ID ON XMLColInt (parent_id);
CREATE INDEX I_XMLCLLB_PARENT_ID ON XMLColLob (parent_id);
CREATE INDEX I_XMLNLBP_PARENT_ID ON XMLEntColLobPAE (parent_id);
CREATE INDEX I_XMLNRBY_PARENT_ID ON XMLEntListEnumPAEOrderBy (parent_id);
CREATE INDEX I_XMLNLMN_PARENT_ID ON XMLEntListEnumPAEOrderColumn (parent_id);
CREATE INDEX I_XMLNTGR_PARENT_ID ON XMLEntListIntegerAOE (parent_id);
CREATE INDEX I_XMLNTGR_PARENT_ID1 ON XMLEntListIntegerE (parent_id);
CREATE INDEX I_XMLNGRP_PARENT_ID ON XMLEntListIntegerPAE (parent_id);
CREATE INDEX I_XMLLTDT_PARENT_ID ON XMLListDate (parent_id);
CREATE INDEX I_XMLLTNM_PARENT_ID ON XMLListEnum (parent_id);
CREATE INDEX I_XMLLRBY_PARENT_ID ON XMLListIntOrderBy (parent_id);
CREATE INDEX I_XMLLLMN_PARENT_ID ON XMLListIntOrderColumn (parent_id);
CREATE INDEX I_XMLLTLB_PARENT_ID ON XMLListLob (parent_id);
CREATE INDEX I_XMLLRLP_PARENT_ID ON XMLListTemporalPAE (parent_id);
CREATE INDEX I_XMLMTDT_PARENT_ID1 ON XMLMapDateDate (parent_id);
CREATE INDEX I_XMLMRLP_PARENT_ID1 ON XMLMapDateTemporalPAE (parent_id);
CREATE INDEX I_XMLMMNM_PARENT_ID ON XMLMapEnumEnum (parent_id);
CREATE INDEX I_XMLMMLB_PARENT_ID ON XMLMapEnumLob (parent_id);
CREATE INDEX I_XMLMTDT_PARENT_ID ON XMLMapIntDate (parent_id);
CREATE INDEX I_XMLMRLP_PARENT_ID ON XMLMapIntegerTemporalPAE (parent_id);
CREATE INDEX I_XMLMTNT_PARENT_ID ON XMLMapIntInt (parent_id);
CREATE INDEX I_XMLSTDT_PARENT_ID ON XMLSetDate (parent_id);
CREATE INDEX I_XMLSTNM_PARENT_ID ON XMLSetEnum (parent_id);
CREATE INDEX I_XMLSTNT_PARENT_ID ON XMLSetInt (parent_id);
CREATE INDEX I_XMLSGRP_PARENT_ID ON XMLSetIntegerPAE (parent_id);
CREATE INDEX I_XMLSTLB_PARENT_ID ON XMLSetLob (parent_id);