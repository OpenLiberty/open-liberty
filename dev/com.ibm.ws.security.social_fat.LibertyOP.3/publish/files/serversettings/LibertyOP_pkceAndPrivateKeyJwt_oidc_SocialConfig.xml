<!--
    Copyright (c) 2023 IBM Corporation and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License 2.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-2.0/
    
    SPDX-License-Identifier: EPL-2.0
   
    Contributors:
        IBM Corporation - initial API and implementation
 -->
<server>


	<authFilter id="filter_proofKeyFalse_RS256_S256_RS256">
		<requestUrl
			id="myRequestUrl"
			urlPattern="/proofKeyFalse_RS256_S256_RS256"
			matchType="contains" />
	</authFilter>

	<oidcLogin
		id="proofKeyFalse_RS256_S256_RS256"
		scope="openid profile"
		clientId="proofKeyFalse_RS256"
		signatureAlgorithm="RS256"
		sslRef="ssl_allSigAlg"
		trustAliasName="RS256"
		mapToUserRegistry="false"
		redirectToRPHostAndPort="https://localhost:${bvt.prop.security_2_HTTP_default.secure}"
		authorizationEndpoint="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/oidc/endpoint/OidcConfigSample_RS256/authorize"
		tokenEndpoint="https://localhost:${bvt.prop.security_2_HTTP_default.secure}/PrivateKeyJwtTokenEndpoint/token"
		userInfoEndpoint="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/oidc/endpoint/OidcConfigSample_RS256/userinfo"
		userInfoEndpointEnabled="true"
		authFilterRef="filter_proofKeyFalse_RS256_S256_RS256"
		tokenEndpointAuthMethod="private_key_jwt"
		tokenEndpointAuthSigningAlgorithm="RS256"
		keyAliasName="rs256"
		pkceCodeChallengeMethod="S256"
		userNameAttribute="sub"
	>
	</oidcLogin>

	<authFilter id="filter_proofKeyFalse_RS256_S256_ES384">
		<requestUrl
			id="myRequestUrl"
			urlPattern="/proofKeyFalse_RS256_S256_ES384"
			matchType="contains" />
	</authFilter>

	<oidcLogin
		id="proofKeyFalse_RS256_S256_ES384"
		scope="openid profile"
		clientId="proofKeyFalse_RS256"
		signatureAlgorithm="RS256"
		sslRef="ssl_allSigAlg"
		trustAliasName="RS256"
		mapToUserRegistry="false"
		redirectToRPHostAndPort="https://localhost:${bvt.prop.security_2_HTTP_default.secure}"
		authorizationEndpoint="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/oidc/endpoint/OidcConfigSample_RS256/authorize"
		tokenEndpoint="https://localhost:${bvt.prop.security_2_HTTP_default.secure}/PrivateKeyJwtTokenEndpoint/token"
		userInfoEndpoint="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/oidc/endpoint/OidcConfigSample_RS256/userinfo"
		userInfoEndpointEnabled="true"
		authFilterRef="filter_proofKeyFalse_RS256_S256_ES384"
		tokenEndpointAuthMethod="private_key_jwt"
		tokenEndpointAuthSigningAlgorithm="ES384"
		keyAliasName="es384"
		pkceCodeChallengeMethod="S256"
		userNameAttribute="sub"
	>
	</oidcLogin>	


	<authFilter id="filter_proofKeyFalse_RS256_Plain_ES512">
		<requestUrl
			id="myRequestUrl"
			urlPattern="/proofKeyFalse_RS256_Plain_ES512"
			matchType="contains" />
	</authFilter>

	<oidcLogin
		id="proofKeyFalse_RS256_Plain_ES512"
		scope="openid profile"
		clientId="proofKeyFalse_RS256"
		signatureAlgorithm="RS256"
		sslRef="ssl_allSigAlg"
		trustAliasName="RS256"
		mapToUserRegistry="false"
		redirectToRPHostAndPort="https://localhost:${bvt.prop.security_2_HTTP_default.secure}"
		authorizationEndpoint="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/oidc/endpoint/OidcConfigSample_RS256/authorize"
		tokenEndpoint="https://localhost:${bvt.prop.security_2_HTTP_default.secure}/PrivateKeyJwtTokenEndpoint/token"
		userInfoEndpoint="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/oidc/endpoint/OidcConfigSample_RS256/userinfo"
		userInfoEndpointEnabled="true"
		authFilterRef="filter_proofKeyFalse_RS256_Plain_ES512"
		tokenEndpointAuthMethod="private_key_jwt"
		tokenEndpointAuthSigningAlgorithm="ES512"
		keyAliasName="es512"
		pkceCodeChallengeMethod="plain"
		userNameAttribute="sub"
	>
	</oidcLogin>

	<authFilter id="filter_proofKeyTrue_RS256_S256_RS512">
		<requestUrl
			id="myRequestUrl"
			urlPattern="/proofKeyTrue_RS256_S256_RS512"
			matchType="contains" />
	</authFilter>

	<oidcLogin
		id="proofKeyTrue_RS256_S256_RS512"
		scope="openid profile"
		clientId="proofKeyTrue_RS256"
		signatureAlgorithm="RS256"
		sslRef="ssl_allSigAlg"
		trustAliasName="RS256"
		mapToUserRegistry="false"
		redirectToRPHostAndPort="https://localhost:${bvt.prop.security_2_HTTP_default.secure}"
		authorizationEndpoint="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/oidc/endpoint/OidcConfigSample_RS256/authorize"
		tokenEndpoint="https://localhost:${bvt.prop.security_2_HTTP_default.secure}/PrivateKeyJwtTokenEndpoint/token"
		userInfoEndpoint="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/oidc/endpoint/OidcConfigSample_RS256/userinfo"
		userInfoEndpointEnabled="true"
		authFilterRef="filter_proofKeyTrue_RS256_S256_RS512"
		tokenEndpointAuthMethod="private_key_jwt"
		tokenEndpointAuthSigningAlgorithm="RS512"
		keyAliasName="rs512"
		pkceCodeChallengeMethod="S256"
		userNameAttribute="sub"
	>
	</oidcLogin>


	<authFilter id="filter_proofKeyTrue_RS256_Plain_ES256">
		<requestUrl
			id="myRequestUrl"
			urlPattern="/proofKeyTrue_RS256_Plain_ES256"
			matchType="contains" />
	</authFilter>

	<oidcLogin
		id="proofKeyTrue_RS256_Plain_ES256"
		scope="openid profile"
		clientId="proofKeyTrue_RS256"
		signatureAlgorithm="RS256"
		sslRef="ssl_allSigAlg"
		trustAliasName="RS256"
		mapToUserRegistry="false"
		redirectToRPHostAndPort="https://localhost:${bvt.prop.security_2_HTTP_default.secure}"
		authorizationEndpoint="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/oidc/endpoint/OidcConfigSample_RS256/authorize"
		tokenEndpoint="https://localhost:${bvt.prop.security_2_HTTP_default.secure}/PrivateKeyJwtTokenEndpoint/token"
		userInfoEndpoint="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/oidc/endpoint/OidcConfigSample_RS256/userinfo"
		userInfoEndpointEnabled="true"
		authFilterRef="filter_proofKeyTrue_RS256_Plain_ES256"
		tokenEndpointAuthMethod="private_key_jwt"
		tokenEndpointAuthSigningAlgorithm="ES256"
		keyAliasName="es256"
		pkceCodeChallengeMethod="plain"
		userNameAttribute="sub"
	>
	</oidcLogin>

</server>
