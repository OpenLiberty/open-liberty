<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-init-method="initialize"
       default-destroy-method="destroy">

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
        p:placeholderPrefix="%{" p:placeholderSuffix="}" />

    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />
    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />

    <!-- Declares audit field extractor functions injected into beans that populate the audit context. -->
    <import resource="../../../conf/audit-system.xml" />

    <import resource="../../saml/saml-abstract-beans.xml" />

    <util:constant id="shibboleth.EndpointType"
        static-field="org.opensaml.saml.saml2.metadata.SingleLogoutService.DEFAULT_ELEMENT_NAME" />

    <util:constant id="shibboleth.MetadataLookup.Protocol"
        static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML20P_NS" />

    <util:constant id="shibboleth.MetadataLookup.Role"
        static-field="org.opensaml.saml.saml2.metadata.SPSSODescriptor.DEFAULT_ELEMENT_NAME" />

    <alias name="shibboleth.OutgoingSAML2SLOBindings" alias="shibboleth.OutgoingBindings"/>
    
    <bean id="PrepareInboundMessageContext"
        class="net.shibboleth.idp.saml.session.impl.PrepareInboundMessageContext" scope="prototype" />

    <bean id="InitializeMessageChannelSecurityContext"
        class="org.opensaml.profile.action.impl.StaticMessageChannelSecurity" scope="prototype"
        p:confidentialityActive="false" p:integrityActive="false" />

    <bean id="AddLogoutRequest"
        class="net.shibboleth.idp.saml.session.impl.AddLogoutRequest" scope="prototype"
            p:overwriteExisting="true"
            p:issuerLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple">
        <property name="identifierGeneratorLookupStrategy">
            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction"
                p:defaultIdentifierGenerationStrategy-ref="shibboleth.DefaultIdentifierGenerationStrategy" />
        </property>
    </bean>

    <!-- This is a little iffy, but the post-assertion extractors include the fields we want here. -->
    <bean id="LogoutPopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
        p:fieldExtractors="#{getObject('shibboleth.PostAssertionAuditExtractors') ?: getObject('shibboleth.DefaultPostAssertionAuditExtractors')}" />

    <bean id="EncryptNameIDs"
            class="org.opensaml.saml.saml2.profile.impl.EncryptNameIDs" scope="prototype"
            p:recipientLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple">
        <property name="encryptionContextLookupStrategy">
            <bean class="com.google.common.base.Functions" factory-method="compose"
                c:g-ref="shibboleth.ChildLookup.EncryptionParameters"
                c:f-ref="shibboleth.ChildLookup.RelyingParty" />
        </property>
    </bean>

    <bean id="PostResponsePopulateAuditContext" parent="shibboleth.AbstractPopulateAuditContext"
        p:fieldExtractors="#{getObject('shibboleth.PostResponseAuditExtractors') ?: getObject('shibboleth.DefaultPostResponseAuditExtractors')}" />
    
    <bean id="shibboleth.PreEncodeMessageHandler"
            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
        <property name="handlers">
            <list>
                <bean class="org.opensaml.saml.common.binding.impl.SAMLOutboundDestinationHandler" scope="prototype"/>
                <bean class="org.opensaml.saml.common.binding.security.impl.EndpointURLSchemeSecurityHandler" scope="prototype"/>
                <bean class="org.opensaml.saml.common.binding.security.impl.SAMLOutboundProtocolMessageSigningHandler" scope="prototype"
                        p:signErrorResponses="%{idp.errors.signed:true}">
                    <property name="activationCondition">
                        <bean parent="shibboleth.Conditions.NOT">
                            <constructor-arg>
                                <bean class="org.opensaml.saml.common.messaging.logic.SignatureCapableBindingPredicate" />
                            </constructor-arg>
                        </bean>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

</beans>