#CMVCPATHNAME N/A
#COMPONENTPREFIX CWMOT
#COMPONENTNAMEFOR CWMOT MicroProfile Telemetry Tracing
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#ISMESSAGEFILE true
# -------------------------------------------------------------------------------------------------
#*******************************************************************************
# Copyright (c) 2023 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License 2.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-2.0/
# 
# SPDX-License-Identifier: EPL-2.0
# 
# Contributors:
#     IBM Corporation - initial API and implementation
#*******************************************************************************
# This file follows the WebSphere Message Guidelines.
# For more information, visit:
# http://washome.austin.ibm.com/xwiki/bin/view/MessagesTeam/
# 
#-----------------------------------------------------------------------------------------------------------------------------
# Message prefix block: CWMOT5000 - CWMOT5999
#-----------------------------------------------------------------------------------------------------------------------------
# Message prefix block for io.openliberty.microprofile.telemetry.common: CWMOT5000 - CWMOT5199
# This was previously two files, so the message IDs used are not contiguous but should not be changed.

CWMOT5100.tracing.is.disabled=CWMOT5100I: La funzione di traccia della telemetria MicroProfile \u00e8 abilitata, ma non configurata per generare tracce per l'applicazione {0}.
CWMOT5100.tracing.is.disabled.explanation=La funzione di traccia della telemetria MicroProfile deve essere configurata per creare tracce ed esportarle in un sistema di traccia.
CWMOT5100.tracing.is.disabled.useraction=Per abilitare la traccia, specificare otel.sdk.disabled=false in una qualsiasi delle origini di configurazione a cui si accede tramite MicroProfile Config. Potrebbe essere necessaria un'ulteriore configurazione per consentire alla funzione di traccia della telemetria MicroProfile di esportare le tracce nel proprio sistema di traccia.

CWMOT5000.cannot.get.globalopentelemetry=CWMOT5000W: \u00c8 stato richiamato il metodo GlobalOpenTelemetry.get. Questo metodo restituisce un oggetto OpenTelemetry non funzionale. Invece, utilizzare CDI per inserire un oggetto OpenTelemetry.
CWMOT5000.cannot.get.globalopentelemetry.explanation=La classe GlobalOpenTelemetry non \u00e8 supportata, poich\u00e9 non esiste alcun oggetto OpenTelemetry globale. Invece, ogni applicazione deve utilizzare CDI per inserire l'oggetto OpenTelemetry relativo a quell'applicazione.
CWMOT5000.cannot.get.globalopentelemetry.useraction=Utilizzare CDI per inserire l'oggetto OpenTelemetry.

CWMOT5001.cannot.set.globalopentelemetry=CWMOT5001E: L'impostazione dell'oggetto GlobalOpenTelemetry non \u00e8 supportata.
CWMOT5001.cannot.set.globalopentelemetry.explanation=La classe GlobalOpenTelemetry non \u00e8 supportata, poich\u00e9 non esiste alcun oggetto OpenTelemetry globale. Invece, ogni applicazione deve utilizzare CDI per inserire l'oggetto OpenTelemetry relativo a quell'applicazione.
CWMOT5001.cannot.set.globalopentelemetry.useraction=Non richiamare il metodo GlobalOpenTelemetry.get. Laddove il codice dell'applicazione debba ottenere un oggetto OpenTelemetry, utilizzare CDI per l'inserimento.

CWMOT5002.telemetry.error=CWMOT5002E: Si \u00e8 verificato un errore interno nella telemetria MicroProfile. L'errore \u00e8: {0}.
CWMOT5002.telemetry.error.explanation=Si \u00e8 verificato un errore che ha impedito il normale funzionamento della telemetria MicroProfile.
CWMOT5002.telemetry.error.useraction=Esaminare il file message.log del server e i log FFDC per identificare il problema.

CWMOT5003.factory.used.after.shutdown=CWMOT5003W: L'applicazione {0} ha tentato di acquisire la telemetria MicroProfile dopo la chiusura dell'applicazione.
CWMOT5003.factory.used.after.shutdown.explanation=CWMOT5003.factory.used.after.shutdown.explanation=Dopo la chiusura di un'applicazione, la telemetria MicroProfile restituisce oggetti che eseguono in modalit\u00e0 non presidiata azioni no-op, quando vengono richiamati. Questo processo potrebbe portare all'assenza di dati di telemetria previsti.
CWMOT5003.factory.used.after.shutdown.useraction=Esaminare l'applicazione per capire perch\u00e9 ha tentato di utilizzare la telemetria MicroProfile dopo la chiusura. Le azioni che possono attivare l'utilizzo della telemetria MicroProfile includono il richiamo di un metodo con annotazione @WithSpan o l'esecuzione di una richiesta con un client JAX-RS o un client Rest MP.

CWMOT5004.factory.used.without.metadata=CWMOT5004W: \u00c8 stata fatta richiesta per un OpenTelemetry oggetto ma senza metadati dell'applicazione e senza globale OpenTelemetry l'oggetto era disponibile. 
CWMOT5004.factory.used.without.metadata.explanation=CWMOT5004.factory.used.without.metadata.explanation=If non c'\u00e8 globale OpenTelemetry oggetto Liberty'S MicroProfile Il codice di integrazione della telemetria tenter\u00e0 di trovare il file corretto OpenTelemetry oggetto per l'applicazione corrente utilizzando i metadati dell'applicazione nel thread corrente. Tuttavia, poich\u00e9 non erano presenti metadati nel thread, non \u00e8 stato possibile farlo. 
CWMOT5004.factory.used.without.metadata.useraction=Controlla il tuo codice per vedere perch\u00e9 ha tentato di utilizzarlo MicroProfile Telemetria in assenza di metadati dell'applicazione e ambito server OpenTelemetry oggetto. Il caso pi\u00f9 probabile \u00e8 che stai creando nuovi thread senza utilizzare Liberty'S ManagedExecutorService e cercando di acquisire un OpenTelemetry oggetto dall'interno. Se stai tentando di acquisire un file OpenTemetry oggetto al di fuori di un'applicazione, garantire OpenTelemetry \u00e8 abilitato tramite una variabile di ambiente o una propriet\u00e0 di sistema.   
