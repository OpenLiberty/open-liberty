#CMVCPATHNAME N/A
#COMPONENTPREFIX CWMOT
#COMPONENTNAMEFOR CWMOT MicroProfile Telemetry Tracing
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#ISMESSAGEFILE true
# -------------------------------------------------------------------------------------------------
#*******************************************************************************
# Copyright (c) 2023, 2024 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License 2.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-2.0/
# 
# SPDX-License-Identifier: EPL-2.0
# 
# Contributors:
#     IBM Corporation - initial API and implementation
#*******************************************************************************
# This file follows the WebSphere Message Guidelines.
# For more information, visit:
# http://washome.austin.ibm.com/xwiki/bin/view/MessagesTeam/
# 
#-----------------------------------------------------------------------------------------------------------------------------
# Message prefix block: CWMOT5000 - CWMOT5999
#-----------------------------------------------------------------------------------------------------------------------------
# Message prefix block for io.openliberty.microprofile.telemetry.common: CWMOT5000 - CWMOT5199
# This was previously two files, so the message IDs used are not contiguous but should not be changed.

CWMOT5100.tracing.is.disabled=CWMOT5100I: La funzione di traccia della telemetria MicroProfile \u00e8 abilitata, ma non configurata per generare tracce per l'applicazione {0}.
CWMOT5100.tracing.is.disabled.explanation=La funzione di traccia della telemetria MicroProfile deve essere configurata per creare tracce ed esportarle in un sistema di traccia.
CWMOT5100.tracing.is.disabled.useraction=Per abilitare la traccia, specificare otel.sdk.disabled=false in una qualsiasi delle origini di configurazione a cui si accede tramite MicroProfile Config. Potrebbe essere necessaria un'ulteriore configurazione per consentire alla funzione di traccia della telemetria MicroProfile di esportare le tracce nel proprio sistema di traccia.

CWMOT5000.cannot.get.globalopentelemetry=CWMOT5000W: \u00c8 stato richiamato il metodo GlobalOpenTelemetry.get. Questo metodo restituisce un oggetto OpenTelemetry non funzionale. Invece, utilizzare CDI per inserire un oggetto OpenTelemetry.
CWMOT5000.cannot.get.globalopentelemetry.explanation=La classe GlobalOpenTelemetry non \u00e8 supportata, poich\u00e9 non esiste alcun oggetto OpenTelemetry globale. Invece, ogni applicazione deve utilizzare CDI per inserire l'oggetto OpenTelemetry relativo a quell'applicazione.
CWMOT5000.cannot.get.globalopentelemetry.useraction=Utilizzare CDI per inserire l'oggetto OpenTelemetry.

CWMOT5001.cannot.set.globalopentelemetry=CWMOT5001E: L'impostazione dell'oggetto GlobalOpenTelemetry non \u00e8 supportata.
CWMOT5001.cannot.set.globalopentelemetry.explanation=La classe GlobalOpenTelemetry non \u00e8 supportata, poich\u00e9 non esiste alcun oggetto OpenTelemetry globale. Invece, ogni applicazione deve utilizzare CDI per inserire l'oggetto OpenTelemetry relativo a quell'applicazione.
CWMOT5001.cannot.set.globalopentelemetry.useraction=Non richiamare il metodo GlobalOpenTelemetry.get. Laddove il codice dell'applicazione debba ottenere un oggetto OpenTelemetry, utilizzare CDI per l'inserimento.

CWMOT5002.telemetry.error=CWMOT5002E: Si \u00e8 verificato un errore interno nella telemetria MicroProfile. L'errore \u00e8: {0}.
CWMOT5002.telemetry.error.explanation=Si \u00e8 verificato un errore che ha impedito il normale funzionamento della telemetria MicroProfile.
CWMOT5002.telemetry.error.useraction=Esaminare il file message.log del server e i log FFDC per identificare il problema.

CWMOT5003.factory.used.after.shutdown=CWMOT5003W: L'applicazione {0} ha tentato di acquisire la telemetria MicroProfile dopo la chiusura dell'applicazione.
CWMOT5003.factory.used.after.shutdown.explanation=CWMOT5003.factory.used.after.shutdown.explanation=Dopo la chiusura di un'applicazione, la telemetria MicroProfile restituisce oggetti che eseguono in modalit\u00e0 non presidiata azioni no-op, quando vengono richiamati. Questo processo potrebbe portare all'assenza di dati di telemetria previsti.
CWMOT5003.factory.used.after.shutdown.useraction=Esaminare l'applicazione per capire perch\u00e9 ha tentato di utilizzare la telemetria MicroProfile dopo la chiusura. Le azioni che possono attivare l'utilizzo della telemetria MicroProfile includono il richiamo di un metodo con annotazione @WithSpan o l'esecuzione di una richiesta con un client JAX-RS o un client Rest MP.

CWMOT5004.factory.used.without.metadata=CWMOT5004W: \u00c8 stata fatta richiesta per un OpenTelemetry oggetto ma senza metadati dell'applicazione e senza globale OpenTelemetry l'oggetto era disponibile. 
CWMOT5004.factory.used.without.metadata.explanation=CWMOT5004.factory.used.without.metadata.explanation=If non c'\u00e8 globale OpenTelemetry oggetto Liberty'S MicroProfile Il codice di integrazione della telemetria tenter\u00e0 di trovare il file corretto OpenTelemetry oggetto per l'applicazione corrente utilizzando i metadati dell'applicazione nel thread corrente. Tuttavia, poich\u00e9 non erano presenti metadati nel thread, non \u00e8 stato possibile farlo. 
CWMOT5004.factory.used.without.metadata.useraction=Rivedere il codice per capire perch\u00e9 il codice di integrazione ha tentato di usare la telemetria MicroProfile senza metadati e un oggetto OpenTelemetry con ambito server. Molto probabilmente il codice di integrazione cerca di creare nuovi thread senza utilizzare l'interfaccia ManagedExecutorService e di acquisire un oggetto OpenTelemetry dall'interno dell'applicazione. Per acquisire un oggetto OpenTemetry al di fuori di un'applicazione, abilitare OpenTelemetry tramite una variabile di ambiente o una propriet\u00e0 di sistema.

CWMOT5005.mptelemetry.unknown.log.source=CWMOT5005W: La funzione di registrazione telemetrica MicroProfile non riconosce la sorgente di registro [ {0} ].
CWMOT5005.mptelemetry.unknown.log.source.explanation=L'ambiente di runtime Liberty non fornisce la fonte di log specificata.
CWMOT5005.mptelemetry.unknown.log.source.useraction=Controllare le informazioni di configurazione e specificare una delle fonti supportate per MicroProfile Telemetria.

CWMOT5006.tel.enabled.conflict=CWMOT5006W: Configurazione conflittuale per la propriet\u00e0 di configurazione otel.sdk.disabled rilevata per l'applicazione {0}. Il valore finale \u00e8 otel.sdk.disabled=false. La telemetria non pu\u00f2 essere disabilitata per un'applicazione quando \u00e8 abilitata per il runtime.
CWMOT5006.tel.enabled.conflict.explanation: MicroProfile La telemetria pu\u00f2 essere attivata per l'intero server utilizzando le propriet\u00e0 di sistema o le variabili d'ambiente. Se non \u00e8 abilitato per l'intero server, pu\u00f2 essere abilitato per ogni applicazione impostando le propriet\u00e0 di configurazione MicroProfile; ad esempio, impostando le variabili nel file server.xml. Questo avviso viene dato se c'\u00e8 una configurazione esplicita che disabilita la telemetria per l'intero server, che viene sovrascritta da una propriet\u00e0 di MP Config che abilita la telemetria per un'applicazione.
CWMOT5006.tel.enabled.conflict.useraction: Specificare le impostazioni per abilitare o disabilitare le istanze di OpenTelemetry utilizzando le variabili d'ambiente e le propriet\u00e0 del sistema o altre fonti di MP Config, ma non entrambe.

CWMOT5007.tel.enabled.conflict=CWMOT5007W: Configurazione conflittuale per la propriet\u00e0 di configurazione otel.sdk.disabled rilevata per l'applicazione {0}. Il valore finale \u00e8 otel.sdk.disabled=false perch\u00e9 la propriet\u00e0 che abilita la telemetria per l'applicazione prevale sulla propriet\u00e0 che disabilita la telemetria per il runtime.
CWMOT5007.tel.enabled.conflict.explanation: MicroProfile La telemetria pu\u00f2 essere attivata per l'intero server utilizzando le propriet\u00e0 di sistema o le variabili d'ambiente. Se non \u00e8 abilitato per l'intero server, pu\u00f2 essere abilitato per un'applicazione impostando le propriet\u00e0 di configurazione MicroProfile; ad esempio, impostando le variabili nel file server.xml. Questo avviso viene dato se la telemetria \u00e8 abilitata per l'intero server, ma le propriet\u00e0 di configurazione MicroProfile disabilitano la telemetria per un'applicazione. Poich\u00e9 la telemetria \u00e8 abilitata per l'intero server, la configurazione di questa applicazione viene ignorata.
CWMOT5007.tel.enabled.conflict.useraction: Specificare le impostazioni per abilitare o disabilitare le istanze di OpenTelemetry utilizzando le variabili d'ambiente e le propriet\u00e0 del sistema o altre fonti di MP Config, ma non entrambe.


#-----------------------------------------------------------------------------------------------------------------------------
# Monitor Metrics messages
#-----------------------------------------------------------------------------------------------------------------------------

threadpool.activeThreads.description=Il numero di thread che stanno eseguendo attivamente le attivit\u00e0.
threadpool.size.description=La dimensione del pool di thread.

session.activeSessions.description=Il numero di sessioni attive contemporaneamente. Una sessione \u00e8 attiva quando il runtime sta elaborando una richiesta che utilizza quella sessione utente.
session.created.description=Il numero di sessioni registrate da quando questa metrica \u00e8 stata attivata.
session.invalidated.description=Il numero di sessioni interrotte da quando questa metrica \u00e8 stata attivata.
session.invalidatedbyTimeout.description=Il numero di sessioni interrotte a causa di un timeout da quando questa metrica \u00e8 stata attivata.
session.live.description=Il numero di utenti attualmente collegati.

connectionpool.handle.count.description=Il numero di connessioni in uso. Questo numero pu\u00f2 includere pi\u00f9 connessioni condivise da una singola connessione gestita.
connectionpool.connection.created.description=Il numero totale di connessioni gestite create dalla creazione del pool.
connectionpool.connection.destroyed.description=Il numero totale di connessioni gestite che sono state distrutte dalla creazione del pool.
connectionpool.connection.free.description=Il numero di connessioni gestite disponibili.
connectionpool.connection.waitTime.description=Il tempo totale di attesa delle richieste di connessione.
connectionpool.connection.useTime.description=Il tempo totale di utilizzo di tutte le connessioni all'origine dati.
connectionpool.connection.count.description=Il numero attuale di connessioni gestite nel pool. Questo valore include le connessioni gestite disponibili e quelle in uso. Una singola connessione gestita condivisa da pi\u00f9 connessioni viene conteggiata una sola volta.

requestTiming.processed.description=Il numero di richieste servlet dall'avvio del server.
requestTiming.active.description=Il numero di richieste di servlet attualmente in esecuzione.
requestTiming.slow.description=Il numero di richieste servlet che sono attualmente in esecuzione, ma l'esecuzione \u00e8 lenta.
requestTiming.hung.description=Il numero di richieste di servlet attualmente in sospeso.

#-----------------------------------------------------------------------------------------------------------------------------
# HTTP Metrics messages
#-----------------------------------------------------------------------------------------------------------------------------

http.server.request.duration.description=Durata delle richieste del server HTTP.
