#CMVCPATHNAME N/A
#COMPONENTPREFIX CWMOT
#COMPONENTNAMEFOR CWMOT MicroProfile Telemetry Tracing
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#ISMESSAGEFILE true
# -------------------------------------------------------------------------------------------------
#*******************************************************************************
# Copyright (c) 2023 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License 2.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-2.0/
# 
# SPDX-License-Identifier: EPL-2.0
# 
# Contributors:
#     IBM Corporation - initial API and implementation
#*******************************************************************************
# This file follows the WebSphere Message Guidelines.
# For more information, visit:
# http://washome.austin.ibm.com/xwiki/bin/view/MessagesTeam/
# 
#-----------------------------------------------------------------------------------------------------------------------------
# Message prefix block: CWMOT5000 - CWMOT5999
#-----------------------------------------------------------------------------------------------------------------------------
# Message prefix block for io.openliberty.microprofile.telemetry.common: CWMOT5000 - CWMOT5199
# This was previously two files, so the message IDs used are not contiguous but should not be changed.

CWMOT5100.tracing.is.disabled=CWMOT5100I: The MicroProfile Telemetry Tracing feature is enabled but not configured to generate traces for the {0} application.
CWMOT5100.tracing.is.disabled.explanation=The MicroProfile Telemetry Tracing feature needs to be configured to create traces and export them to a tracing system.
CWMOT5100.tracing.is.disabled.useraction=To enable tracing, specify otel.sdk.disabled=false in any of the configuration sources accessible through MicroProfile Config. Further configuration might be required to allow the MicroProfile Telemetry Tracing feature to export traces to your tracing system.

CWMOT5000.cannot.get.globalopentelemetry=CWMOT5000W: The GlobalOpenTelemetry.get method was called. This method returns a non-functional OpenTelemetry object. Use CDI to inject an OpenTelemetry object instead.
CWMOT5000.cannot.get.globalopentelemetry.explanation=The GlobalOpenTelemetry class is not supported because no global OpenTelemetry object exists. Instead, each application must use CDI to inject the OpenTelemetry object for that application.
CWMOT5000.cannot.get.globalopentelemetry.useraction=Use CDI to inject the OpenTelemetry object.

CWMOT5001.cannot.set.globalopentelemetry=CWMOT5001E: Setting the GlobalOpenTelemetry object is not supported.
CWMOT5001.cannot.set.globalopentelemetry.explanation=The GlobalOpenTelemetry class is not supported because no global OpenTelemetry object exists. Instead, each application must use CDI to inject the OpenTelemetry object for that application.
CWMOT5001.cannot.set.globalopentelemetry.useraction=Do not call the GlobalOpenTelemetry.get method. Where the application code needs to obtain an OpenTelemetry object, use CDI to inject it.

CWMOT5002.telemetry.error=CWMOT5002E: An internal error occurred in MicroProfile Telemetry. The error is: {0}.
CWMOT5002.telemetry.error.explanation=An error has occurred that prevents normal operation of MicroProfile Telemetry.
CWMOT5002.telemetry.error.useraction=Review the server message.log file and FFDC logs to identify the problem.

CWMOT5003.factory.used.after.shutdown=CWMOT5003W: Application {0} called OpenTelemetryInfoFactory after the application has shutdown. 
CWMOT5003.factory.used.after.shutdown.explanation=After an application shuts down OpenTelemetryInfoFactory returns objects that will silently perform no-op actions when invoked, this could lead to the absense of expected telemetry data.    
CWMOT5003.factory.used.after.shutdown.useraction=Review your application to see why it is attempting to use OpenTelemetry after it has shutdown. Enabling open telemetry tracing at the debug level or finer will generate stack traces. 
