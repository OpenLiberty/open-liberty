<server description="Server for testing health checks for application state changes">

    <include location="../fatTestPorts.xml"/>

    <featureManager>
        <feature>osgiconsole-1.0</feature>
        <feature>localConnector-1.0</feature>
        <feature>appSecurity-2.0</feature>
        <feature>mpHealth-2.0</feature>
        <feature>componenttest-1.0</feature>
        <feature>mpReactiveMessaging-1.0</feature>
        <feature>servlet-4.0</feature>
        <feature>mpConfig-1.4</feature>
        <feature>mpReactiveStreams-1.0</feature>
    </featureManager>

    <library id="kafkaLib">
        <fileset dir="kafkaLib"/>
    </library>

    <application type="war" name="FailsToStartHealthCheckApp" location="FailsToStartHealthCheckApp.war">
        <classloader commonLibraryRef="kafkaLib"/>
        <appProperties>
               <property name="mp.messaging.connector.liberty-kafka.bootstrap.servers" value="this.is.not.going-to-resolve:9092"/>
               <property name="mp.messaging.incoming.test-in.connector" value="liberty-kafka"/>
               <property name="mp.messaging.incoming.test-in.value.serializer" value="org.apache.kafka.common.serialization.StringSerializer"/>
               <property name="mp.messaging.incoming.test-in.key.serializer" value="org.apache.kafka.common.serialization.StringSerializer"/>
               <property name="mp.messaging.incoming.test-out.group.id" value="failstostart"/>
               <property name="mp.messaging.incoming.test-out.connector" value="liberty-kafka"/>
               <property name="mp.messaging.incoming.test-out.value.serializer" value="org.apache.kafka.common.serialization.StringSerializer"/>
               <property name="mp.messaging.incoming.test-out.key.serializer" value="org.apache.kafka.common.serialization.StringSerializer"/>
        </appProperties>
    </application>
    
    <logging traceSpecification="*=info:HEALTH=all:logservice=all=enabled:com.ibm.websphere.org.eclipse.microprofile.health.2.0.*=all=enabled"/>

    <!-- this sections mirrors permissions.xml to apply the permissions to the Kafka client jar in the shared library -->
    <variable name="kafkaCodebase" value="${server.config.dir}/kafkaLib/kafka-clients-2.3.0.jar"/>
    <javaPermission codebase="${kafkaCodebase}" className="javax.management.MBeanServerPermission" name="createMBeanServer"/>
    <javaPermission codebase="${kafkaCodebase}" className="javax.management.MBeanPermission" name="*" actions="*"/>
    <javaPermission codebase="${kafkaCodebase}" className="javax.management.MBeanTrustPermission" name="register"/>
    <javaPermission codebase="${kafkaCodebase}" className="java.util.PropertyPermission" name="*" actions="read"/>
    <javaPermission codebase="${kafkaCodebase}" className="java.net.SocketPermission" name="*" actions="connect"/>
    <javaPermission codebase="${kafkaCodebase}" className="java.lang.RuntimePermission" name="getClassLoader" actions="*"/>
    <javaPermission codebase="${kafkaCodebase}" className="java.io.FilePermission" name="*" actions="read"/>
</server>
