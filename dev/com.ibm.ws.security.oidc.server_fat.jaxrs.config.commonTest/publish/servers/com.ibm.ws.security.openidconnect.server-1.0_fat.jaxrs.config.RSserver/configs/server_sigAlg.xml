<!--
    Copyright (c) 2021 IBM Corporation and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License 2.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-2.0/
    
    SPDX-License-Identifier: EPL-2.0

    Contributors:
        IBM Corporation - initial API and implementation
 -->
<server>
	<include location="${server.config.dir}/imports/oidcClientFeatures.xml" />
	<include location="${server.config.dir}/imports/BasicRegistry.xml" />
	<include location="${server.config.dir}/imports/goodSSLSettings.xml" />
	<include location="${server.config.dir}/imports/misc.xml" />

    <keyStore
         id="trust_allSigAlg"
         password="Liberty"
         type="PKCS12"
         location="${server.config.dir}/allAlgTrustStore.p12" />

    <keyStore
         id="key_allSigAlg"
         password="Liberty"
         type="PKCS12"
         location="${server.config.dir}/allAlgKeyStore.p12" />

	<authFilter id="authFilterHS256">
		<requestUrl
			id="requestUrlHS256"
			urlPattern="/snoop/HS256"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="hs256"
		sharedKey="secret"
		signatureAlgorithm="HS256"
		authFilterRef="authFilterHS256"
		inboundPropagation="required"
		issuerIdentifier="client01"
		audiences="client01"
	>
	</openidConnectClient>

	<authFilter id="authFilterHS384">
		<requestUrl
			id="requestUrlHS384"
			urlPattern="/snoop/HS384"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="hs384"
		sharedKey="secret"
		signatureAlgorithm="HS384"
		authFilterRef="authFilterHS384"
		inboundPropagation="required"
		issuerIdentifier="client01"
		audiences="client01"
	>
	</openidConnectClient>

	<authFilter id="authFilterHS512">
		<requestUrl
			id="requestUrlHS512"
			urlPattern="/snoop/HS512"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="hs512"
		sharedKey="secret"
		signatureAlgorithm="HS512"
		authFilterRef="authFilterHS512"
		inboundPropagation="required"
		issuerIdentifier="client01"
		audiences="client01"
	>
	</openidConnectClient>
	
	
	<authFilter id="authFilterRS256">
		<requestUrl
			id="requestUrlRS256"
			urlPattern="/snoop/RS256"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="rs256"
		authFilterRef="authFilterRS256"
		signatureAlgorithm="RS256"
		trustStoreRef="trust_allSigAlg"
		trustAliasName="rs256"
		inboundPropagation="required"
		issuerIdentifier="client01"
		audiences="client01"
	>
	</openidConnectClient>	
	
	<authFilter id="authFilterRS384">
		<requestUrl
			id="requestUrlRS384"
			urlPattern="/snoop/RS384"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="rs384"
		authFilterRef="authFilterRS384"
		signatureAlgorithm="RS384"
		trustStoreRef="trust_allSigAlg"
		trustAliasName="rs384"
		inboundPropagation="required"
		issuerIdentifier="client01"
		audiences="client01"
	>
	</openidConnectClient>	
	
	<authFilter id="authFilterRS512">
		<requestUrl
			id="requestUrlRS512"
			urlPattern="/snoop/RS512"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="rs512"
		authFilterRef="authFilterRS512"
		signatureAlgorithm="RS512"
		trustStoreRef="trust_allSigAlg"
		trustAliasName="rs512"
		inboundPropagation="required"
		issuerIdentifier="client01"
		audiences="client01"
	>
	</openidConnectClient>	
	
	<authFilter id="authFilterES256">
		<requestUrl
			id="requestUrlES256"
			urlPattern="/snoop/ES256"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="es256"
		authFilterRef="authFilterES256"
		signatureAlgorithm="ES256"
		trustStoreRef="trust_allSigAlg"
		trustAliasName="es256"
		inboundPropagation="required"
		issuerIdentifier="client01"
		audiences="client01"
	>
	</openidConnectClient>	
	
	<authFilter id="authFilterES384">
		<requestUrl
			id="requestUrlES384"
			urlPattern="/snoop/ES384"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="es384"
		authFilterRef="authFilterES384"
		signatureAlgorithm="ES384"
		trustStoreRef="trust_allSigAlg"
		trustAliasName="es384"
		inboundPropagation="required"
		issuerIdentifier="client01"
		audiences="client01"
	>
	</openidConnectClient>	
	
	<authFilter id="authFilterES512">
		<requestUrl
			id="requestUrlES512"
			urlPattern="/snoop/ES512"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="es512"
		authFilterRef="authFilterES512"
		signatureAlgorithm="ES512"
		trustStoreRef="trust_allSigAlg"
		trustAliasName="es512"
		inboundPropagation="required"
		issuerIdentifier="client01"
		audiences="client01"
	>
	</openidConnectClient>	

</server>
