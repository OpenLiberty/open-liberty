<?xml version="1.0" encoding="utf-8"?>
<!-- AtestCatalog metadata in xml -->
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm_2_0.xsd" version="2.0">
  <package>com.ibm.ws.query.entities.xml</package>
  
  <!-- <named-queries> -->
  <named-query name="findAllDepartmentsLikeName">
    <query>SELECT d FROM DeptBean d WHERE d.name LIKE :deptName</query>
  </named-query>
  <named-query name="joinDeptWithEmps">
    <query>SELECT d FROM DeptBean d JOIN d.emps e WHERE d.no &gt; ?1 order by d.no asc</query>
  </named-query>
  <named-query name="deleteDepartmentsGreaterThan">
    <query>delete FROM DeptBean d WHERE d.no &gt; :deptNo</query>
  </named-query>
  <named-query name="updateDeptBudget">
    <query>update DeptBean d set d.budget = (d.budget + ?1)</query>
  </named-query>
  <named-query name="updateDeptBudgetForParent2">
    <query>update DeptBean d set d.budget = (d.budget * :factor) where d.reportsTo.no = :reports2</query>
  </named-query>
  <named-query name="updateDeptBudgetForParent">
    <query>update DeptBean d set d.budget = (d.budget * ?1) where d.reportsTo.no = ?2</query>
  </named-query>
  <named-query name="joinDeptWithEmps2">
    <query>SELECT d FROM DeptBean d JOIN d.emps e WHERE d.no &gt; ?1 order by e.empid desc</query>
  </named-query>
  <named-native-query name="nativeFindAllDepartmentNumbersLikeName">
    <query>SELECT d.deptno FROM JPADeptBean d WHERE d.name LIKE ?</query>
  </named-native-query>
  <named-native-query name="nativeFindAllDepartmentColumns">
    <query>SELECT d.* FROM JPADeptBean d WHERE d.deptno &gt; ?1 order by d.deptno asc</query>
  </named-native-query>
  <named-native-query name="nativeFindAllDepartments" result-class="com.ibm.ws.query.entities.xml.DeptBean">
    <query>SELECT d.* FROM JPADeptBean d WHERE d.deptno &gt; ?1 order by d.deptno asc</query>
  </named-native-query>
  <named-native-query name="nativeJoinDeptWithEmps" result-set-mapping="DeptBeanThenEmpBeanMapping">
    <query>SELECT d.*,e.* FROM JPAEmpBean e JOIN JPADeptBean d on e.dept_deptno = d.deptno WHERE d.deptno &gt; ?1 order by e.empid desc</query>
  </named-native-query>
  <named-native-query name="nativeJoinDeptWithEmps2" result-set-mapping="DeptBeanThenEmpBeanMapping">
    <query>SELECT d.*,e.* FROM JPAEmpBean e JOIN JPADeptBean d on e.dept_deptno = d.deptno WHERE d.deptno &gt; :deptNo order by e.empid desc</query>
  </named-native-query>
  <named-native-query name="nativeJoinEmpsWithDept" result-set-mapping="EmpBeanThenDeptBeanMapping">
    <query>SELECT e.*,d.* FROM JPAEmpBean e JOIN JPADeptBean d on e.dept_deptno = d.deptno WHERE d.deptno &gt; ?1 order by e.empid desc</query>
  </named-native-query>
  <named-native-query name="nativeFindAllDepartments2" result-set-mapping="DeptBeanMapping">
    <query>SELECT d.* FROM JPADeptBean d WHERE d.deptno &gt; ? order by d.deptno asc</query>
  </named-native-query>
  <named-native-query name="nativeDeleteDepartmentsGreaterThan">
    <query>delete FROM JPADeptBean WHERE deptno &gt; ?1</query>
  </named-native-query>
  <named-native-query name="nativeUpdateDeptBudget">
    <query>update JPADeptBean set budget = (budget + ?1)</query>
  </named-native-query>
  <named-native-query name="nativeUpdateDeptBudgetForParent2">
    <query>update JPADeptBean set budget = (budget * :factor) where REPORTSTO_DEPTNO = :reports2</query>
  </named-native-query>
  <named-native-query name="nativeUpdateDeptBudgetForParent">
    <query>update JPADeptBean set budget = (budget * ?1) where REPORTSTO_DEPTNO = ?2</query>
  </named-native-query>
  <sql-result-set-mapping name="StringMapping">
    <column-result name="name" />
  </sql-result-set-mapping>
  <sql-result-set-mapping name="DeptBeanMapping">
    <entity-result entity-class="com.ibm.ws.query.entities.xml.DeptBean" />
  </sql-result-set-mapping>
  <sql-result-set-mapping name="PersonSQLMapping">
    <entity-result entity-class="com.ibm.ws.query.entities.xml.PersonBean" />
  </sql-result-set-mapping>
  <sql-result-set-mapping name="PersonBeanSQLMapping">
    <entity-result entity-class="com.ibm.ws.query.entities.xml.PersonBean" />
  </sql-result-set-mapping>
  <sql-result-set-mapping name="DeptBeanThenEmpBeanMapping">
    <entity-result entity-class="com.ibm.ws.query.entities.xml.DeptBean" />
    <entity-result entity-class="com.ibm.ws.query.entities.xml.EmpBean" />
  </sql-result-set-mapping>
  <sql-result-set-mapping name="EmpBeanThenDeptBeanMapping">
    <entity-result entity-class="com.ibm.ws.query.entities.xml.EmpBean" />
    <entity-result entity-class="com.ibm.ws.query.entities.xml.DeptBean" />
  </sql-result-set-mapping>
  <sql-result-set-mapping name="IntegerThenStringMapping">
    <entity-result entity-class="java.lang.Integer" />
    <entity-result entity-class="java.lang.String" />
  </sql-result-set-mapping>
  <sql-result-set-mapping name="IntegerThenStringMapping2">
    <column-result name="DEPTNO2" />
    <column-result name="NAME2" />
  </sql-result-set-mapping>
  <sql-result-set-mapping name="EntityThenStringMapping">
    <entity-result entity-class="com.ibm.ws.query.entities.xml.DeptBean" />
    <column-result name="name2" />
  </sql-result-set-mapping>
  <sql-result-set-mapping name="EntityThenCountMapping">
    <entity-result entity-class="com.ibm.ws.query.entities.xml.DeptBean" />
    <column-result name="resCount" />
  </sql-result-set-mapping>
  
  <entity name="DeptBean" class="DeptBean" access="FIELD">
    <table name="JPADeptBean" />
    <attributes>
      <id name="no">
        <column name="deptno" />
      </id>
      <basic name="name" fetch="EAGER">
        <column length="40" />
      </basic>
      <basic name="budget"></basic>
      <many-to-one name="reportsTo" fetch="EAGER"></many-to-one>
      <many-to-one name="mgr" fetch="EAGER"></many-to-one>
      <one-to-many name="emps" fetch="LAZY" mapped-by="dept">
        <cascade>
          <cascade-remove />
        </cascade>
      </one-to-many>
      <one-to-many name="projects" fetch="LAZY" mapped-by="dept"></one-to-many>
      <embedded name="charityFund">
        <attribute-override name="charityName">
          <column name="charityName" length="40" />
        </attribute-override>
        <attribute-override name="charityAmount">
          <column name="charityAmount" />
        </attribute-override>
      </embedded>
    </attributes>
  </entity>
  
  <entity name="EmpBean" class="EmpBean" access="FIELD">
    <table name="JPAEmpBean" />
    <attributes>
      <id name="empid">
        <column name="empid" nullable="false" column-definition="integer" />
      </id>
      <basic name="name" fetch="EAGER">
        <column length="40" />
      </basic>
      <basic name="salary" fetch="EAGER"></basic>
      <basic name="bonus" fetch="EAGER"></basic>
      <basic name="isManager" fetch="EAGER"></basic>
      <basic name="execLevel" fetch="EAGER"></basic>
      <basic name="hireDate" fetch="EAGER"></basic>
      <basic name="hireTime" fetch="EAGER"></basic>
      <basic name="hireTimestamp" fetch="EAGER"></basic>
      <many-to-one name="dept" target-entity="DeptBean" fetch="EAGER"></many-to-one>
      <one-to-many name="manages" target-entity="DeptBean" fetch="LAZY" mapped-by="mgr">
        <cascade>
          <cascade-remove />
        </cascade>
      </one-to-many>
      <one-to-one name="home" target-entity="AddressBean" fetch="EAGER">
        <join-column name="HOME_STREET" referenced-column-name="street" />
      </one-to-one>
      <one-to-one name="work" target-entity="AddressBean" fetch="EAGER">
        <join-column name="WORK_STREET" referenced-column-name="street" />
      </one-to-one>
      <many-to-many name="tasks" target-entity="TaskBean" fetch="LAZY" mapped-by="emps"></many-to-many>
    </attributes>
  </entity>
  
  <entity name="ProjectBean" class="ProjectBean" access="FIELD">
    <table name="JPAProjectBean" />
    <attributes>
      <id name="projid">
        <column name="projid" nullable="false" column-definition="integer" />
      </id>
      <basic name="name" fetch="EAGER">
        <column length="40" />
      </basic>
      <basic name="description">
        <column length="40" />
      </basic>
      <basic name="personMonths" />
      <basic name="durationDays" />
      <basic name="startTime" />
      <basic name="cost" />
      <basic name="budget" />
      <many-to-one name="dept" target-entity="DeptBean" fetch="EAGER"></many-to-one>
      <one-to-many name="tasks" target-entity="TaskBean" fetch="LAZY" mapped-by="project"></one-to-many>
    </attributes>
  </entity>
  
  <entity name="TaskBean" class="TaskBean" access="FIELD">
    <table name="JPATaskBean" />
    <attributes>
      <id name="taskid"></id>
      <basic name="name" fetch="EAGER">
        <column length="40" />
      </basic>
      <basic name="description">
        <column length="40" />
      </basic>
      <basic name="cost" />
      <many-to-one name="project" target-entity="ProjectBean" fetch="EAGER"></many-to-one>
      <many-to-many name="emps" target-entity="EmpBean" fetch="LAZY"></many-to-many>
    </attributes>
  </entity>
  
  <entity name="AddressBean" class="AddressBean" access="FIELD">
    <table name="JPAAddressBean" />
    <attributes>
      <embedded-id name="street"></embedded-id>
      <basic name="city">
        <column length="30" />
      </basic>
      <basic name="state">
        <column length="20" />
      </basic>
      <basic name="zip">
        <column length="10" />
      </basic>
    </attributes>
  </entity>
  
  <entity name="TypeTestBean" class="TypeTestBean" access="FIELD">
    <table name="JPATypeTestBean" />
    <attributes>
      <id name="id"></id>
      <basic name="i4" />
      <basic name="o4" />
      <basic name="i1" />
      <basic name="o1" />
      <basic name="i2" />
      <basic name="o2" />
      <basic name="i8" />
      <basic name="o8" />
      <basic name="name" />
      <basic name="ic" />
      <basic name="oc" />
      <basic name="ichars" />
      <basic name="ochars" />
      <basic name="ibytes" />
      <basic name="obytes" />
      <basic name="bigbytes" />
      <basic name="idouble" />
      <basic name="odouble" />
      <basic name="ifloat" />
      <basic name="ofloat" />
      <basic name="deficitUSA" />
      <basic name="ageofUniverse" />
      <basic name="iboolean" />
      <basic name="oboolean" />
      <basic name="sdate"></basic>
      <basic name="stime"></basic>
      <basic name="stimestamp"></basic>
      <basic name="udate">
        <temporal>TIMESTAMP</temporal>
      </basic>
      <basic name="ucalendar">
        <temporal>TIMESTAMP</temporal>
      </basic>
      <basic name="status">
        <enumerated>ORDINAL</enumerated>
      </basic>
      <basic name="payScale">
        <enumerated>STRING</enumerated>
      </basic>
      <basic name="busPass"></basic>
    </attributes>
  </entity>
  
  <entity name="CustomerBean" class="CustomerBean" access="FIELD">
    <table name="JPACustomerparttab" />
    <attributes>
      <id name="id"></id>
      <basic name="name">
        <column length="40" />
      </basic>
      <basic name="rating" />
      <one-to-many name="orders" fetch="LAZY" mapped-by="customer" />
      <one-to-many name="supplies" fetch="LAZY" mapped-by="supplier" />
    </attributes>
  </entity>
  
  <entity name="LineItem" class="LineItem" access="FIELD">
    <table name="JPALineItemparttab" />
    <attributes>
      <id name="lid"></id>
      <basic name="quantity" />
      <basic name="cost" />
      <many-to-one name="product" fetch="EAGER" />
      <many-to-one name="order" fetch="EAGER" />
    </attributes>
  </entity>
  
  <entity name="OrderBean" class="OrderBean" access="FIELD">
    <table name="JPAOrderparttab" />
    <attributes>
      <id name="oid"></id>
      <basic name="amount" />
      <basic name="delivered" />
      <many-to-one name="customer" />
      <one-to-many name="lineitems" fetch="EAGER" mapped-by="order" />
    </attributes>
  </entity>
  
  <entity name="Part" class="Part" access="FIELD">
    <table name="JPAparttab" />
    <inheritance strategy="SINGLE_TABLE" />
    <discriminator-column name="PARTTYPE" />
    <attributes>
      <id name="partno"></id>
      <basic name="name">
        <column length="40" />
      </basic>
    </attributes>
  </entity>
  
  <entity name="PartBase" class="PartBase" access="FIELD">
    <inheritance strategy="SINGLE_TABLE" />
    <discriminator-value>PartBase</discriminator-value>
    <discriminator-column name="PARTTYPE" discriminator-type="STRING" />
    <attributes>
      <basic name="cost" />
      <basic name="mass" />
      <many-to-many name="suppliers" fetch="LAZY" mapped-by="supplies" />
    </attributes>
  </entity>
  
  <entity name="PartComposite" class="PartComposite" access="FIELD">
    <inheritance strategy="SINGLE_TABLE" />
    <discriminator-value>PartComposite</discriminator-value>
    <attributes>
      <basic name="assemblyCost" />
      <basic name="massIncrement" />
      <one-to-many name="partsUsed" fetch="LAZY" mapped-by="parent" />
    </attributes>
  </entity>
  
  <entity name="Product" class="Product" access="FIELD">
    <table name="JPAProductparttab" />
    <attributes>
      <id name="pid" />
      <basic name="description">
        <column length="40" />
      </basic>
      <basic name="inventory" />
      <basic name="backorder" />
      <many-to-one name="supplier" fetch="EAGER" />
      <one-to-many name="lineitems" fetch="EAGER" mapped-by="product" />
    </attributes>
  </entity>
  
  <entity name="Supplier" class="Supplier" access="FIELD">
    <table name="JPASupplierparttab" />
    <attributes>
      <id name="sid" />
      <basic name="name">
        <column length="40" />
      </basic>
      <many-to-many name="supplies" fetch="LAZY" />
    </attributes>
  </entity>
  
  <entity name="Usage" class="Usage" access="FIELD">
    <table name="JPAUsageparttab" />
    <attributes>
      <id name="id" />
      <basic name="quantity" />
      <many-to-one name="child" fetch="EAGER" />
      <many-to-one name="parent" fetch="EAGER" />
    </attributes>
  </entity>
  
  <entity name="PersonBean" class="PersonBean" access="FIELD">
    <table name="JPAXYZ" />
    <attributes>
      <id name="id" />
      <basic name="age" />
      <basic name="first">
        <column name="firstName" length="20" />
      </basic>
      <basic name="last">
        <column name="lastName" length="20" />
      </basic>
    </attributes>
  </entity>
  
  <embeddable class="AddressPK" access="FIELD">
    <attributes>
      <basic name="name">
        <column name="street" length="40" />
      </basic>
    </attributes>
  </embeddable>
  
  <embeddable class="CharityFund" access="FIELD">
    <attributes>
      <basic name="charityName">
        <column length="40" />
      </basic>
      <basic name="charityAmount" />
    </attributes>
  </embeddable>
</entity-mappings>
