###############################################################################
# Copyright (c) 2013, 2018 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#CMVCPATHNAME com.ibm.ws.security/resources/com/ibm/ws/security/openidconnect/common/internal/resources/OidcCommonMessages.nlsprops
#COMPONENTPREFIX CWWKS
#COMPONENTNAMEFOR WebSphere Application Server OpenID Connect Security
#ISMESSAGEFILE TRUE
#NLS_MESSAGEFORMAT_VAR
#NLS_ENCODING=UNICODE
# -------------------------------------------------------------------------------------------------
# Message prefix block: CWWKS1751 - CWWKS1799

#do not translate issuerIdentifier, iss
#
OIDC_IDTOKEN_VERIFY_ISSUER_ERR=CWWKS1751E: La convalida ha avuto esito negativo per il token ID richiesto da [{0}] poich\u00e9 l''emittente (iss) [{1}] specificato nel token non corrisponde all''attributo [issuerIdentifier] [{2}] per il provider specificato nella configurazione del client OpenID Connect. Controllare l''attributo issuerIdentifier nella configurazione client.
OIDC_IDTOKEN_VERIFY_ISSUER_ERR.explanation=La convalida del token ID ha avuto esito negativo poich\u00e9 l'emittente specificato nella configurazione del client OpenID Connect (RP-relying party) e l'emittente nel token non corrispondono.
OIDC_IDTOKEN_VERIFY_ISSUER_ERR.useraction=Assicurarsi che l'attributo [issuerIdentifier] specificato nella configurazione del client OpenID Connect (RP) corrisponda all'emittente per il provider di OpenID Connect (OP) utilizzato.

#
OIDC_IDTOKEN_SIGNATURE_ERR=CWWKS1752E: Si \u00e8 verificato un errore durante il tentativo di firmare un token ID utilizzando l''algoritmo [{0}]: [{1}].
OIDC_IDTOKEN_SIGNATURE_ERR.explanation=Non \u00e8 stato possibile creare un token ID poich\u00e9 non \u00e8 stato possibile firmarlo. Il motivo dell'errore \u00e8 indicato dopo il messaggio.
OIDC_IDTOKEN_SIGNATURE_ERR.useraction=Vedere l'azione utente per il messaggio visualizzato dopo questo errore.

#
OIDC_IDTOKEN_INVALID_KEY_ERR=CWWKS1753E: Si \u00e8 verificato un errore durante il tentativo di firmare un token ID utilizzando l''algoritmo [{0}]: [{1}].
OIDC_IDTOKEN_INVALID_KEY_ERR.explanation=Non \u00e8 stato possibile creare un token ID poich\u00e9 non \u00e8 stato possibile firmarlo.  Il motivo dell'errore \u00e8 indicato dopo il messaggio.
OIDC_IDTOKEN_INVALID_KEY_ERR.useraction=Se si utilizza la firma asimmetrica, assicurarsi di utilizzare una chiave privata valida per firmare il token. Ad esempio, controllare se una chiave \u00e8 scaduta. Controllare l'elemento keyStore cui fa riferimento l'SSL predefinito in server.xml per trovare informazioni sul file keystore che contiene la chiave privata.  Inoltre, vedere l'azione utente per il messaggio visualizzato dopo questo errore.

#do not translate clientId, aud
OIDC_IDTOKEN_VERIFY_AUD_ERR=CWWKS1754E: La convalida ha avuto esito negativo per il token ID richiesto da [{1}] poich\u00e9 l''audience (aud) [{0}] specificato nel token non corrisponde al clientId [{1}] specificato nella configurazione del client OpenID Connect.
OIDC_IDTOKEN_VERIFY_AUD_ERR.explanation=L'audience nel token ID deve corrispondere all'ID client.  In questo caso, l'audience (aud) nel token ID non corrisponde all'ID client, quindi la convalida del token ID ha avuto esito negativo.
OIDC_IDTOKEN_VERIFY_AUD_ERR.useraction=Assicurarsi che l'attributo [clientId] specificato nella configurazione del client OpenID Connect (RP-relying party) sia corretto. Il valore \u00e8 sensibile al maiuscolo/minuscolo.

#do not translate clientId, azp
OIDC_IDTOKEN_VERIFY_AUD_AZP_ERR=CWWKS1755E: La convalida ha avuto esito negativo per il token ID richiesto da [{1}] poich\u00e9 la parte autorizzata (azp) [{0}] specificata nel token non corrisponde al clientId [{1}] specificato nella configurazione del client OpenID Connect.
OIDC_IDTOKEN_VERIFY_AUD_AZP_ERR.explanation=La parte autorizzata nel token ID deve corrispondere all'ID client. In questo caso, la parte autorizzata (azp) nel token ID non corrisponde all'ID client, quindi la convalida del token ID ha avuto esito negativo.
OIDC_IDTOKEN_VERIFY_AUD_AZP_ERR.useraction=Assicurarsi che l'attributo [clientId] specificato nella configurazione del client OpenID Connect (RP-relying party) sia corretto. Il valore \u00e8 sensibile al maiuscolo/minuscolo.

#
OIDC_IDTOKEN_SIGNATURE_VERIFY_ERR=CWWKS1756E: La convalida ha avuto esito negativo per il token ID richiesto da [{0}] utilizzando l''algoritmo [{2}] a causa di un errore nella verifica della firma: [{1}].
OIDC_IDTOKEN_SIGNATURE_VERIFY_ERR.explanation=Non \u00e8 stato possibile convalidare un token ID poich\u00e9 non \u00e8 stato possibile verificare la firma. Ci\u00f2 pu\u00f2 essere stato causato da una mancata corrispondenza nell'algoritmo di firma o nella chiave condivisa tra il client e il provider OpenID Connect.
OIDC_IDTOKEN_SIGNATURE_VERIFY_ERR.useraction=Controllare la configurazione del server per assicurarsi che l'algoritmo di firma e la chiave condivisa configurati siano compatibili con quelli del provider OpenID Connect.

#
OIDC_IDTOKEN_SIGNATURE_VERIFY_INVALIDKEY_ERR=CWWKS1757E: La convalida ha avuto esito negativo per il token ID richiesto da [{0}] utilizzando l''algoritmo [{2}] a causa di un errore nella verifica della firma: [{1}].
OIDC_IDTOKEN_SIGNATURE_VERIFY_INVALIDKEY_ERR.explanation=Non \u00e8 stato possibile convalidare un token ID poich\u00e9 non \u00e8 stato possibile verificare la firma.  Il motivo dell'errore \u00e8 indicato dopo il messaggio.
OIDC_IDTOKEN_SIGNATURE_VERIFY_INVALIDKEY_ERR.useraction=Se si utilizza la firma asimmetrica, assicurarsi che la chiave pubblica nel certificato possa essere utilizzata come firma digitale.  Controllare l'elemento keyStore cui fa riferimento la configurazione SSL predefinita in server.xml per trovare informazioni sul keystore che contiene la chiave. Inoltre, vedere l'azione utente per il messaggio visualizzato dopo questo errore.
 
#
OIDC_IDTOKEN_VERIFY_STATE_ERR=CWWKS1758E: La convalida ha avuto esito negativo per il token ID richiesto da [{0}] a causa di [{1}]. Una possibile causa \u00e8 che l''ora corrente [{2}] sia successiva all''ora di scadenza del token [{3}] o che l''ora di emissione [{4}] \u00e8 troppo lontana dall''ora corrente [{2}].
OIDC_IDTOKEN_VERIFY_STATE_ERR.explanation=Non \u00e8 stato possibile convalidare un token ID poich\u00e9 l'ora corrente indicata non rientra tra l'ora di emissione del token e quella di scadenza.
OIDC_IDTOKEN_VERIFY_STATE_ERR.useraction=Assicurarsi che gli orologi di sistema del client OpenID Connect (RP-relying party) e del provider OpenID Connect (OP) siano sincronizzati (se si trovano su due sistemi).

#do not translate at_hash
#
OIDC_IDTOKEN_VERIFY_ATHASH_ERR=CWWKS1759E: La convalida ha avuto esito negativo per il token ID richiesto da [{0}] a causa della mancata corrispondenza hash tra il token di accesso [{1}] e l''asserzione at_hash [{2}] nel token ID. 
OIDC_IDTOKEN_VERIFY_ATHASH_ERR.explanation=L'elemento at_hash nel token ID consente ai client OpenID Connect di evitare attacchi che mirano alla sostituzione del token. Il valore at_hash deve corrispondere con quello dell'hash del token di accesso ricevuto dal client OpenID Connect.
OIDC_IDTOKEN_VERIFY_ATHASH_ERR.useraction=Assicurarsi che la comunicazione tra il client OpenID Connect (RP-relying party) e il provider OpenID Connect (OP) sia sicura, per evitare minacce al token di accesso ricevuto dall'RP.

#
OIDC_IDTOKEN_SIGNATURE_VERIFY_MISSING_SIGNATURE_ERR=CWWKS1760E: La convalida ha avuto esito negativo per il token ID richiesto da [{0}] a causa della firma mancante dal token ID. La configurazione del client OpenID Connect (RP-relying party) specifica l''algoritmo [{1}] e prevede un token ID firmato.
OIDC_IDTOKEN_SIGNATURE_VERIFY_MISSING_SIGNATURE_ERR.explanation=Non \u00e8 stato possibile convalidare un token ID poich\u00e9 non era firmato. \u00c8 previsto che il client OpenID Connect (RP-relying party) riceva un token firmato.
OIDC_IDTOKEN_SIGNATURE_VERIFY_MISSING_SIGNATURE_ERR.useraction=Assicurarsi che il provider OpenID Connect consenta al token di essere firmato.

#do not translate signatureAlgorithm
#
OIDC_IDTOKEN_SIGNATURE_VERIFY_ERR_ALG_MISMATCH=CWWKS1761E: La convalida ha avuto esito negativo per il token ID richiesto da [{0}] a causa di una mancata corrispondenza di algoritmi di firma tra il client OpenID Connect [{1}] e il provider OpenID Connect [{2}].
OIDC_IDTOKEN_SIGNATURE_VERIFY_ERR_ALG_MISMATCH.explanation=Non \u00e8 possibile convalidare un token ID poich\u00e9 il client OpenID Connect (RP-relying party) e il provider OpenID Connect (OP) utilizzano algoritmi di firma differenti per firmare/verificare il token.
OIDC_IDTOKEN_SIGNATURE_VERIFY_ERR_ALG_MISMATCH.useraction=Verificare che l'algoritmo di firma specificato dall'RP corrisponda a quello dell'OP.

# now in openidconnect.common project, no longer used here.
#JWT_JWTTOKEN_SIGNATURE_VERIFY_SEGMENT_ERR=CWWKS1762E: The token endpoint request failed. Cannot validate the JWT Token requested by the [{0}] due to a signature missing from the JWT token. The OpenID Connect provider specified [{1}] algorithm and expects the JWT Token to be signed.
#JWT_JWTTOKEN_SIGNATURE_VERIFY_SEGMENT_ERR.explanation=Cannot verify the JWT Token because the token is not signed. The OpenID Connect provider is expecting the token to be signed.
#JWT_JWTTOKEN_SIGNATURE_VERIFY_SEGMENT_ERR.useraction=Check the OpenID Connect client configuration to make sure that it signs the JWT Token.

# now in openidconnect.common project, no longer used here.
#JWT_JWTTOKEN_SIGNATURE_VERIFY_ERR_ALG_MISMATCH=CWWKS1763E: The token endpoint request failed. Cannot validate the JWT Token requested by the [{0}] due to a mismatch of signing algorithms between the OpenID Connect provider [{1}] and the OpenID Connect client [{2}].
#JWT_JWTTOKEN_SIGNATURE_VERIFY_ERR_ALG_MISMATCH.explanation=Cannot verify the JWT Token because the OpenID Connect provider and client are using different signature algorithms to sign/verify the token.
#JWT_JWTTOKEN_SIGNATURE_VERIFY_ERR_ALG_MISMATCH.useraction=Check the OpenID Connect client configuration to specify a signature algorithm that matches with the OpenID Connect provider.

#
JWT_JWTTOKEN_INVALID_KEY_ERR=CWWKS1764E: La richiesta dell''endpoint di token ha avuto esito negativo. Si \u00e8 verificato un errore durante il tentativo di firmare un token JWT utilizzando l''algoritmo [{0}]: [{1}].
JWT_JWTTOKEN_INVALID_KEY_ERR.explanation=Non \u00e8 stato possibile creare un token JWT poich\u00e9 non \u00e8 stato possibile firmarlo.  Il motivo dell'errore \u00e8 visualizzato nel messaggio.
JWT_JWTTOKEN_INVALID_KEY_ERR.useraction=Se si utilizza la firma asimmetrica, assicurarsi di utilizzare una chiave privata valida per firmare il token. Ad esempio, controllare se una chiave \u00e8 scaduta. Controllare l'elemento keyStore cui fa riferimento la configurazione SSL predefinita nel file server.xml per trovare informazioni sul file keystore che contiene la chiave privata.  Inoltre, vedere l'azione utente per il messaggio visualizzato dopo questo errore.

#
JWT_JWTTOKEN_SIGNATURE_VERIFY_ERR=CWWKS1765E: La richiesta dell''endpoint di token ha avuto esito negativo. La convalida ha avuto esito negativo per il token JWT richiesto da [{0}] a causa di un''eccezione rilevata durante la verifica della firma: [{1}].
JWT_JWTTOKEN_SIGNATURE_VERIFY_ERR.explanation=Un token JWT non \u00e8 valido in quanto la verifica della firma ha avuto esito negativo.
JWT_JWTTOKEN_SIGNATURE_VERIFY_ERR.useraction=Assicurarsi che il token JWT sia firmato in modo appropriato.

#
JWT_JWTTOKEN_SIGNATURE_VERIFY_INVALIDKEY_ERR=CWWKS1766E: La richiesta dell''endpoint di token ha avuto esito negativo. La convalida ha avuto esito negativo per il token JWT richiesto da [{0}] utilizzando l''algoritmo [{2}] a causa di un errore nella verifica della firma: [{1}].
JWT_JWTTOKEN_SIGNATURE_VERIFY_INVALIDKEY_ERR.explanation=Non \u00e8 stato possibile convalidare un token JWT poich\u00e9 non \u00e8 stato possibile verificare la firma.  Il motivo dell'errore \u00e8 indicato dopo il messaggio.
JWT_JWTTOKEN_SIGNATURE_VERIFY_INVALIDKEY_ERR.useraction=Se si utilizza la firma asimmetrica, assicurarsi che la chiave pubblica nel certificato possa essere utilizzata come firma digitale.  Controllare l'elemento keyStore cui fa riferimento la configurazione SSL predefinita nel file server.xml per trovare informazioni sul keystore che contiene la chiave. Inoltre, vedere l'azione utente per il messaggio visualizzato dopo questo errore.
 
#
# now in openidconnect.common project, no longer used here.
#JWT_JWTTOKEN_BAD_SEGMENTS_ERR=CWWKS1768E: The token endpoint request failed. A signed JWT token needs to have 3 segments separated by ''.'', but this JWT Token has [{0}] segments.
#JWT_JWTTOKEN_BAD_SEGMENTS_ERR.explanation=A signed JWT token needs to have exactly 3 segments separated by '.'. This JWT Token has a bad segment number.
#JWT_JWTTOKEN_BAD_SEGMENTS_ERR.useraction=Make sure the JWT Token is valid and has 3 segments.

#
# now in openidconnect.common project, no longer used here.
#JWT_JWTTOKEN_ILLEGAL_STATE_ERR=CWWKS1769E: The token endpoint request failed. Validation of the JWT token requested by the [{0}] failed. It got an InvalidJwtException with message:[{1}].
#JWT_JWTTOKEN_ILLEGAL_STATE_ERR.explanation=A JWT token cannot be validated because of an InvalidJwtException which is indicated in the message.
#JWT_JWTTOKEN_ILLEGAL_STATE_ERR.useraction=Correct the error which is indicated in the message.

#
# now in openidconnect.common project, no longer used here.
#JWT_JWTTOKEN_NO_TOKEN_ERR=CWWKS1770E: The token endpoint request failed. A required JWT Token is not found in the request.
#JWT_JWTTOKEN_NO_TOKEN_ERR.explanation=The request needs to provide a JWT Token but can not find the JWT Token in the token endpoint request.
#JWT_JWTTOKEN_NO_TOKEN_ERR.useraction=Provide a valid JWT Token in the token endpoint request.

#
JWK_ENDPOINT_MISSING_ERR=CWWKS1771E: La configurazione del client OpenID Connect necessita di un attributo jwkEndpointUrl.
JWK_ENDPOINT_MISSING_ERR.explanation=L'attributo jwkEndpointUrl non \u00e8 stato fornito nella configurazione client OpenID Connect.
JWK_ENDPOINT_MISSING_ERR.useraction=Impostare l'attributo jwkEndpointUrl sull'URL della chiave web JSON del provider OpenID Connect.

# now in openidconnect.common project, no longer used here.
#OIDC_FAILED_RUN_AS_SUBJCET=CWWKS1772W: An exception occurred while attempting to get the RunAsSubject. The exception was: [{0}].
#OIDC_FAILED_RUN_AS_SUBJCET.explanation=An exception occurred while getting the RunAsSubject.
#OIDC_FAILED_RUN_AS_SUBJCET.useraction=Make sure the server is configured and started properly.

#0=OIDC client ID, 1=Current clock time, 2=Token expiration time, 3=Token issued at time
OIDC_JWT_VERIFY_STATE_ERR=CWWKS1773E: La convalida ha avuto esito negativo per il token richiesto da [{0}] perch\u00e9 il token \u00e8 esterno al relativo intervallo valido. Una possibile causa \u00e8 che l''ora corrente [{1}] sia successiva all''ora di scadenza del token [{2}] o che l''ora di emissione [{3}] \u00e8 troppo lontana dall''ora corrente [{1}].
OIDC_JWT_VERIFY_STATE_ERR.explanation=Non \u00e8 stato possibile convalidare un token poich\u00e9 l'ora corrente indicata non rientra tra l'ora di emissione del token e quella di scadenza.
OIDC_JWT_VERIFY_STATE_ERR.useraction=Assicurarsi che gli orologi di sistema del client OpenID Connect (RP-relying party) e del provider OpenID Connect (OP) siano sincronizzati (se si trovano su due sistemi).

# Do not translate clientId, aud
#0=aud claim, 1=OIDC client ID, 2=audiences of the oidc client
OIDC_JWT_VERIFY_AUD_ERR=CWWKS1774E: La convalida ha avuto esito negativo per il token richiesto da [{1}] poich\u00e9 la richiesta aud [{0}] nel token non \u00e8 contenuta nell''attributo audience [{2}] della configurazione del client OpenID Connect.
OIDC_JWT_VERIFY_AUD_ERR.explanation=La richiesta aud nel token deve essere specificata nell'attributo audience della configurazione del client OpenID Connect o tutti gli audience devono essere consentiti specificando il valore ALL_AUDIENCES nell'attributo audience della configurazione del client.
OIDC_JWT_VERIFY_AUD_ERR.useraction=Assicurarsi che l'attributo audience specificato nella configurazione del client OpenID Connect sia corretto. Se si desidera consentire tutte le richiate aud, \u00e8 necessario specificare il valore ALL_AUDIENCES per l'attributo audience nella configurazione del client OpenID Connect. Altrimenti la richiesta aud fornita nel token deve essere contenuta nel valore dell'attributo audience nella configurazione del client OpenID Connect. Il valore \u00e8 sensibile al maiuscolo/minuscolo.

# do not translate iat
# 0= oidc client id.
OIDC_ID_VERIFY_IAT_ERR=CWWKS1775E: La convalida ha avuto esito negativo per il token richiesto da [{0}] perch\u00e9 la richiesta iat non \u00e8 presente nel token.
OIDC_ID_VERIFY_IAT_ERR.explanation=Il token deve contenere una richiesta iat (issued at).
OIDC_ID_VERIFY_IAT_ERR.useraction=Ottenere un token valido dal provider OpenId Connect.


#0=OIDC client ID, 1=exception, 2=signature algorithm
OIDC_JWT_SIGNATURE_VERIFY_ERR=CWWKS1776E: La convalida ha avuto esito negativo per il token richiesto da [{0}] utilizzando l''algoritmo [{2}] a causa di un errore nella verifica della firma: [{1}]
OIDC_JWT_SIGNATURE_VERIFY_ERR.explanation=Non \u00e8 stato possibile convalidare il token poich\u00e9 non \u00e8 stato possibile verificare la firma. Il motivo dell'errore \u00e8 visualizzato nel messaggio. Le possibili cause sono una mancata corrispondenza nell'algoritmo di firma o nella chiave condivisa tra il client e il provider OpenID Connect.
OIDC_JWT_SIGNATURE_VERIFY_ERR.useraction=Vedere l'azione utente per la causa visualizzata nel messaggio. Se la causa sembra essere una mancata corrispondenza di chiavi, controllare la configurazione del server per assicurarsi che l'algoritmo di firma e la chiave condivisa configurati siano compatibili con quelli del provider OpenID Connect.

# Do not translate signatureAlgorithm
#0= OIDC client ID, 1=client's signature algorithm (such as RS256, HS256), 2=provider's signature algorithm (RS256, HS256, etc.)
OIDC_JWT_SIGNATURE_VERIFY_ERR_ALG_MISMATCH=CWWKS1777E: La convalida ha avuto esito negativo per il token richiesto da [{0}] a causa di una mancata corrispondenza di algoritmi di firma tra il client OpenID Connect e il provider OpenID Connect. L''algoritmo di firma per il client \u00e8 [{1}] e quello per il provider \u00e8 [{2}].
OIDC_JWT_SIGNATURE_VERIFY_ERR_ALG_MISMATCH.explanation=Non \u00e8 possibile convalidare il token poich\u00e9 il client OpenID Connect (RP-relying party) e il provider OpenID Connect (OP) utilizzano algoritmi di firma differenti.
OIDC_JWT_SIGNATURE_VERIFY_ERR_ALG_MISMATCH.useraction=Verificare che l'attributo signatureAlgorithm specificato nella configurazione RP corrisponda all'algoritmo di firma per OP.

# Do not translate signatureAlgorithm
#0=OIDC client ID, 1=signature algorithm (none, RS256, HS256)
OIDC_JWT_SIGNATURE_VERIFY_MISSING_SIGNATURE_ERR=CWWKS1778E: Il token richiesto da [{0}] non ha superato la convalida perch\u00e9 manca la firma dal token. L''attributo signatureAlgorithm per il client OpenID Connect \u00e8 impostato su [{1}]. Questa impostazione di algoritmo di firma richiede una firma.
OIDC_JWT_SIGNATURE_VERIFY_MISSING_SIGNATURE_ERR.explanation=Non \u00e8 stato possibile convalidare il token poich\u00e9 non era firmato. L'impostazione dell'algoritmo di firma per il client OpenID Connect richiede che i token siano firmati.
OIDC_JWT_SIGNATURE_VERIFY_MISSING_SIGNATURE_ERR.useraction=Eseguire una delle seguenti operazioni: 1) impostare l'attributo signatureAlgorithm nella configurazione del client OpenID Connect su "none". 2) inviare un token firmato.

# Do not translate aud, audiences (only when followed by "attribute", i.e. "audiences attribute" or "audiences configuration attribute")
#0=OIDC client ID, 1=audiences of the oidc client
OIDC_JWT_MISSING_AUD=CWWKS1779E: La convalida ha avuto esito negativo per il token richiesto da [{0}] perch\u00e9 il token non conteneva una richiesta aud. Il client OpenID Connect [{0}] \u00e8 configurato per considerare affidabili solo i seguenti audience: [{1}]
OIDC_JWT_MISSING_AUD.explanation=Il client OpenID Connect che convalida il token ha configurato l'attributo audience per considerare affidabili alcuni audience, quindi tutti i token convalidati da tale client devono contenere una richiesta aud. La richiesta aud nel token deve anche corrispondere a uno degli audience configurati per essere considerati affidabili dal client nell'attributo di configurazione degli audience.
OIDC_JWT_MISSING_AUD.useraction=Assicurarsi che il token fornito al client OpenID Connect contenga una richiesta aud. Se non si desidera convalidare gli audience di token, rimuovere l'attributo audience dalla configurazione del client OpenID Connect.

PROPAGATION_TOKEN_NBF_ERR=CWWKS1780E: Il server di risorse ha fallito la richiesta di autenticazione perch\u00e9 il token nella richiesta non pu\u00f2 essere utilizzato. L''ora not before ("nbf") [{0}] \u00e8 oltre l''ora corrente [{1}] e questa condizione non \u00e8 consentita.
PROPAGATION_TOKEN_NBF_ERR.explanation=La richiesta dell'ora not before nel token \u00e8 oltre l'ora corrente e il runtime non pu\u00f2 utilizzare il token al momento.
PROPAGATION_TOKEN_NBF_ERR.useraction=Assicurarsi che il token non abbia una richiesta "nbf" impostata su un'ora nel futuro e/o sincronizzare l'ora tra i sistemi o reinoltrare la richiesta in un secondo momento.

# 0=OIDC client ID, 1="issuer" value (typically a URL), 2=Trusted issuer list, 3=OIDC client configuration attribute that specifies trusted issuers
TOKEN_ISSUER_NOT_TRUSTED=CWWKS1781E: La convalida ha avuto esito negativo per il token richiesto dal client [{0}] poich\u00e9 l''emittente (iss) [{1}] specificato nel token non corrisponde a nessun emittente affidabile [{2}] specificato dall''attributo [{3}] della configurazione del client OpenID Connect.
TOKEN_ISSUER_NOT_TRUSTED.explanation=Il token contiene un valore emittente non specificato come un emittente affidabile nella configurazione del client OpenID Connect. I token convalidati da questo client OpenID Connect devono essere emessi da un emittente affidabile.
TOKEN_ISSUER_NOT_TRUSTED.useraction=Verificare che il valore asserzione emittente che \u00e8 nel token sia incluso nell'attributo specificato nella configurazione del client OpenID Connect.

# 0=Claim name that should not be in the token, 1=OIDC client configuration attribute
PROPAGATION_TOKEN_ISS_CLAIM_NOT_REQUIRED_ERR=CWWKS1782E: La richiesta di autenticazione del server di risorse ha avuto esito negativo perch\u00e9 il token contiene un''asserzione [{0}], ma il valore dell''attributo di configurazione del client [{1}] indica che il token non deve contenere l''asserzione.
PROPAGATION_TOKEN_ISS_CLAIM_NOT_REQUIRED_ERR.explanation=Il token non pu\u00f2 contenere l'asserzione specificata a causa del valore dell'attributo di configurazione specificato.
PROPAGATION_TOKEN_ISS_CLAIM_NOT_REQUIRED_ERR.useraction=Ottenere un nuovo token che non contienga l'asserzione specificata o modificare il valore attributo di configurazione specificato per consentire l'inclusione dell'asserzione nel token.
