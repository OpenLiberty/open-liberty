###############################################################################
# Copyright (c) 2011 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#CMVCPATHNAME com.ibm.ws.threading/resources/OSGI-INF/l10n/metatype.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#
executor.service.name=Zarz\u0105dzanie wykonawcami
executor.service.desc=Definiuje ustawienia domy\u015blnego wykonawcy j\u0105dra Liberty. Nale\u017cy zauwa\u017cy\u0107, \u017ce zawsze istnieje dok\u0142adnie jeden wykonawca domy\u015blny. Jest on przeznaczony wy\u0142\u0105cznie dla \u015brodowiska wykonawczego Liberty i nie jest dost\u0119pny bezpo\u015brednio dla aplikacji. Aplikacje, kt\u00f3re potrzebuj\u0105 konfigurowa\u0107 i u\u017cywa\u0107 wykonawc\u00f3w, powinny zamiast tego korzysta\u0107 z wykonawc\u00f3w zarz\u0105dzanych.

name=Nazwa
name.desc=Nazwa domy\u015blnego wykonawcy j\u0105dra Liberty.

core.threads=W\u0105tki podstawowe
core.threads.desc=Liczba w\u0105tk\u00f3w w stanie stabilnym lub w\u0105tk\u00f3w podstawowych, kt\u00f3re zostan\u0105 powi\u0105zane z tym wykonawc\u0105. Liczba w\u0105tk\u00f3w powi\u0105zanych z wykonawc\u0105 szybko osi\u0105gnie t\u0119 warto\u015b\u0107. Je\u015bli warto\u015b\u0107 jest mniejsza ni\u017c 0, zostanie u\u017cyta warto\u015b\u0107 domy\u015blna. Warto\u015b\u0107 domy\u015blna jest obliczana na podstawie liczby w\u0105tk\u00f3w sprz\u0119towych w systemie.

max.threads=Maksymalna liczba w\u0105tk\u00f3w
max.threads.desc=Maksymalna liczba w\u0105tk\u00f3w, kt\u00f3re mo\u017cna powi\u0105za\u0107 z wykonawc\u0105. Je\u015bli ta liczba ma by\u0107 wi\u0119ksza ni\u017c 0, jej warto\u015b\u0107 nie mo\u017ce by\u0107 mniejsza ni\u017c warto\u015b\u0107 parametru coreThreads. Je\u015bli warto\u015b\u0107 parametru maxThreads nie jest wi\u0119ksza ni\u017c 0, maksymalna liczba w\u0105tk\u00f3w b\u0119dzie nieograniczona.   Nale\u017cy zauwa\u017cy\u0107, \u017ce rzeczywista liczba w\u0105tk\u00f3w powi\u0105zanych z wykonawc\u0105 jest okre\u015blana dynamicznie przez j\u0105dro Liberty, dlatego pozostawienie nieograniczonej maksymalnej liczby w\u0105tk\u00f3w nie oznacza, \u017ce \u015brodowisko wykonawcze b\u0119dzie aktywnie tworzy\u0107 bardzo wiele w\u0105tk\u00f3w. Pozwala to jedynie j\u0105dru Liberty decydowa\u0107 o liczbie w\u0105tk\u00f3w, kt\u00f3re maj\u0105 by\u0107 powi\u0105zane z wykonawc\u0105, bez definiowania g\u00f3rnego ograniczenia.

keep.alive=Czas \u017cycia
keep.alive.desc=Czas utrzymywania bezczynnego w\u0105tku w puli, zanim otrzyma pozwolenie na przerwanie dzia\u0142ania.
steal.policy=Strategia kradzie\u017cy pracy
steal.policy.desc=Strategia kradzie\u017cy pracy, kt\u00f3ra ma zosta\u0107 zastosowana. Opcje tej strategii okre\u015blaj\u0105 spos\u00f3b umieszczania pracy w kolejce oraz spos\u00f3b uzyskiwania pracy znajduj\u0105cej si\u0119 w kolejce.
steal.policy.strict=Wszystkie w\u0105tki, kt\u00f3re generuj\u0105 prac\u0119, s\u0105 w\u0142a\u015bcicielami lokalnej sterty pracy. Po wyczerpaniu lokalnej sterty pracy w\u0105tki, kt\u00f3re s\u0105 powi\u0105zane z wykonawc\u0105, pobieraj\u0105 prac\u0119 z innych w\u0105tk\u00f3w.
steal.policy.local=Globalna kolejka pracy jest u\u017cywana do obs\u0142ugi pracy generowanej przez w\u0105tki, kt\u00f3re nie s\u0105 powi\u0105zane z wykonawc\u0105. Praca generowana przez w\u0105tki powi\u0105zane z wykonawc\u0105 jest umieszczana w lokalnej stercie pracy. W\u0142a\u015bcicielem tej sterty pracy jest w\u0105tek, kt\u00f3ry j\u0105 utworzy\u0142, chyba \u017ce zostanie ona skradziona przez inny w\u0105tek. Je\u015bli lokalna sterta pracy jest pusta i nie ma pracy w globalnej kolejce pracy, w\u0105tki powi\u0105zane z wykonawc\u0105 pobieraj\u0105 prac\u0119 powi\u0105zan\u0105 z innymi w\u0105tkami.
steal.policy.never=Zadaniem globalnej kolejki pracy jest zapewnienie pracy dla w\u0105tk\u00f3w powi\u0105zanych z wykonawc\u0105. Kradzie\u017c nie wyst\u0105pi.

reject.policy=Strategia odrzucenia wykonywania
reject.policy.desc=Strategia u\u017cywana w sytuacjach, kiedy wykonawca nie mo\u017ce po\u015bredniczy\u0107 w wykonywaniu pracy.
reject.policy.abort=Zg\u0142o\u015b wyj\u0105tek.
reject.policy.caller=Wykonaj prac\u0119 natychmiast w w\u0105tku programu wywo\u0142uj\u0105cego.
