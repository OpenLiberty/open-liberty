###############################################################################
# Copyright (c) 2011 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#CMVCPATHNAME com.ibm.ws.threading/resources/OSGI-INF/l10n/metatype.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#
executor.service.name=Spr\u00e1va prov\u00e1d\u011bc\u00edho modulu
executor.service.desc=Definuje nastaven\u00ed pro v\u00fdchoz\u00ed prov\u00e1d\u011bc\u00ed modul kernelu Liberty. V\u0161imn\u011bte si, \u017ee v\u017edy existuje jeden, a pr\u00e1v\u011b jeden v\u00fdchoz\u00ed prov\u00e1d\u011bc\u00ed modul, kter\u00fd pou\u017e\u00edv\u00e1 pouze b\u011bhov\u00fd modul Liberty a kter\u00fd nen\u00ed p\u0159\u00edmo p\u0159\u00edstupn\u00fd pro aplikace. Aplikace, kter\u00e9 pot\u0159ebuj\u00ed konfigurovat a vyu\u017e\u00edvat prov\u00e1d\u011bc\u00ed moduly, by m\u011bly pou\u017e\u00edvat spravovan\u00e9 prov\u00e1d\u011bc\u00ed moduly.

name=N\u00e1zev
name.desc=N\u00e1zev v\u00fdchoz\u00edho prov\u00e1d\u011bc\u00edho modulu kernelu Liberty.

core.threads=Hlavn\u00ed podprocesy
core.threads.desc=Po\u010det hlavn\u00edch podproces\u016f \u010di podproces\u016f, kter\u00e9 se maj\u00ed p\u0159idru\u017eit k tomuto prov\u00e1d\u011bc\u00edmu modulu ve stabiln\u00edm stavu. Po\u010det podproces\u016f p\u0159idru\u017een\u00fdch k prov\u00e1d\u011bc\u00edmu modulu rychle dos\u00e1hne tohoto po\u010dtu. Pokud je tato hodnota men\u0161\u00ed ne\u017e 0, pou\u017eije se v\u00fdchoz\u00ed hodnota. Tato v\u00fdchoz\u00ed hodnota se vypo\u010d\u00edt\u00e1v\u00e1 na z\u00e1klad\u011b po\u010dtu hardwarov\u00fdch podproces\u016f v syst\u00e9mu.

max.threads=Maxim\u00e1ln\u00ed po\u010det podproces\u016f
max.threads.desc=Maxim\u00e1ln\u00ed po\u010det podproces\u016f, kter\u00e9 lze p\u0159idru\u017eit k prov\u00e1d\u011bc\u00edmu modulu. Pokud je tato hodnota v\u011bt\u0161\u00ed ne\u017e 0, mus\u00ed b\u00fdt v\u011bt\u0161\u00ed nebo rovna po\u010dtu hlavn\u00edch podproces\u016f. Pokud je hodnota maxim\u00e1ln\u00edho po\u010dtu podproces\u016f men\u0161\u00ed nebo rovna 0, maxim\u00e1ln\u00ed po\u010det podproces\u016f je neomezen\u00fd. V\u0161imn\u011bte si, \u017ee skute\u010dn\u00fd po\u010det podproces\u016f p\u0159idru\u017een\u00fdch k prov\u00e1d\u011bc\u00edmu modulu ur\u010duje dynamicky kernel Liberty, tak\u017ee ponech\u00e1n\u00edm maxim\u00e1ln\u00edho po\u010dtu podproces\u016f nesv\u00e1zan\u00fdch neznamen\u00e1, \u017ee b\u011bhov\u00fd modul aktivn\u011b vytvo\u0159\u00ed velk\u00e9 mno\u017estv\u00ed podproces\u016f. Kernel Liberty jednodu\u0161e rozhodne, kolik podproces\u016f p\u0159idru\u017e\u00ed k prov\u00e1d\u011bc\u00edmu modulu, ani\u017e by musel m\u00edt definovanou horn\u00ed mez.

keep.alive=Doba \u017eivotnosti
keep.alive.desc=Doba, po kterou m\u00e1 b\u00fdt ne\u010dinn\u00fd podproces udr\u017eov\u00e1n ve fondu p\u0159ed t\u00edm, ne\u017e bude povoleno jeho ukon\u010den\u00ed.
steal.policy=Z\u00e1sady p\u0159eb\u00edr\u00e1n\u00ed pr\u00e1ce
steal.policy.desc=Z\u00e1sady p\u0159eb\u00edr\u00e1n\u00ed pr\u00e1ce, kter\u00e9 se maj\u00ed pou\u017e\u00edt. Volby pro tyto z\u00e1sady ur\u010duj\u00ed zp\u016fsob, jak\u00fdm je pr\u00e1ce \u0159azena ve front\u011b a zp\u016fsob, jak\u00fdm podprocesy z\u00edsk\u00e1vaj\u00ed pr\u00e1ci za\u0159azenou do fronty.
steal.policy.strict=V\u0161echny podprocesy, kter\u00e9 generuj\u00ed pr\u00e1ci, maj\u00ed vlastn\u00ed lok\u00e1ln\u00ed haldu pr\u00e1ce. Po vy\u010derp\u00e1n\u00ed lok\u00e1ln\u00ed haldy pr\u00e1ce p\u0159eb\u00edraj\u00ed podprocesy p\u0159idru\u017een\u00e9 k prov\u00e1d\u011bc\u00edmu modulu pr\u00e1ci z dal\u0161\u00edch proces\u016f.
steal.policy.local=Pro pr\u00e1ci generovanou podprocesy, kter\u00e9 nejsou p\u0159idru\u017eeny k prov\u00e1d\u011bc\u00edmu modulu, se pou\u017e\u00edv\u00e1 glob\u00e1ln\u00ed pracovn\u00ed fronta. Pr\u00e1ce generovan\u00e1 podprocesy p\u0159idru\u017een\u00fdmi k prov\u00e1d\u011bc\u00edmu modulu je um\u00edst\u011bna v lok\u00e1ln\u00ed hald\u011b pr\u00e1ce. Tato halda pr\u00e1ce je vlastn\u011bna generuj\u00edc\u00edm podprocesem, pokud ji nep\u0159evezme jin\u00fd podproces. Pokud je lok\u00e1ln\u00ed halda pr\u00e1ce pr\u00e1zdn\u00e1 a v glob\u00e1ln\u00ed pracovn\u00ed front\u011b nen\u00ed \u017e\u00e1dn\u00e1 pr\u00e1ce, p\u0159eb\u00edraj\u00ed podprocesy p\u0159idru\u017een\u00e9 k prov\u00e1d\u011bc\u00edmu modulu pr\u00e1ci p\u0159idru\u017eenou k dal\u0161\u00edm podproces\u016fm.
steal.policy.never=Glob\u00e1ln\u00ed pracovn\u00ed fronta se pou\u017e\u00edv\u00e1 k dod\u00e1v\u00e1n\u00ed pr\u00e1ce do podproces\u016f p\u0159idru\u017een\u00fdch k prov\u00e1d\u011bc\u00edmu modulu. K p\u0159eb\u00edr\u00e1n\u00ed pr\u00e1ce zde nedoch\u00e1z\u00ed.

reject.policy=Z\u00e1sady p\u0159i odm\u00edtnut\u00ed proveden\u00ed
reject.policy.desc=Z\u00e1sady, kter\u00e9 se maj\u00ed pou\u017e\u00edt, kdy\u017e nen\u00ed prov\u00e1d\u011bc\u00ed modul schopen f\u00e1zovat proveden\u00ed pr\u00e1ce.
reject.policy.abort=Vyvolat v\u00fdjimku.
reject.policy.caller=Pr\u00e1ci okam\u017eit\u011b prov\u00e9st v podprocesu volaj\u00edc\u00edho modulu.
