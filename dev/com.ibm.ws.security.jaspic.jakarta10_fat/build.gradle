/*******************************************************************************
 * Copyright (c) 2020, 2023 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-2.0/
 * 
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/

apply plugin: 'war'

war { enabled false } // We aren't making a war for the entire project

dependencies {
  requiredLibs 'org.apache.httpcomponents:httpclient:4.1.2',
               'org.apache.httpcomponents:httpcore:4.1.2',
               project(':io.openliberty.org.apache.commons.codec'), 
               project(':io.openliberty.org.apache.commons.logging'),
               project(':com.ibm.websphere.javaee.servlet.3.0'),
               project(':com.ibm.ws.security.audit_fat.common.tooling'),
               project(':com.ibm.websphere.security')
               }

addRequiredLibraries.dependsOn addJakartaTransformer

/* 
 * This is where all application ZIP and WARs will be built.
 */
def appBuildDir = "${buildDir}/test-application"


/******************************************************************
 ******************************************************************
 **
 ** JASPIBase.jar
 **
 ******************************************************************
 ******************************************************************/
task JASPIBase_JAR(type: Jar, dependsOn: classes) { 
  destinationDirectory = file("${appBuildDir}")
  archiveFileName = "JASPIBase.jar"

  from ('build/classes/java/main') { 
    include 'web/FlexibleBaseServlet*.class'
  }
  
}

/******************************************************************
 ******************************************************************
 **
 ** JASPIServerAuthRegistrationTestServlet.war
 **
 ******************************************************************
 ******************************************************************/
task JASPIServerAuthRegistrationTestServlet_WAR(type: War, dependsOn: JASPIBase_JAR) {
  destinationDirectory = file("${appBuildDir}")
  archiveFileName = "JASPIServerAuthRegistrationTestServlet.war"
  classpath = classpath.filter{ false }

  from ('test-applications/JASPIServerAuthRegistrationTestServlet.war/resources') { 
  	include 'META-INF/**'
  	include 'WEB-INF/**'
  }
  from ('build/classes/java/main') { 
    include 'web/JASPIServerAuthRegistrationTestServlet.class'
    into 'WEB-INF/classes'
  }
  from ('build/classes/java/main') { 
    include 'web/FlexibleBaseServlet*.class'
  }
  from ("${appBuildDir}") { 
    include "JASPIBase.jar"
    into 'WEB-INF/lib'
  }
  from (project(':com.ibm.ws.security.jaspic.test').buildDir) { 
     include "com.ibm.ws.security.jaspic.test.jakarta.jar"  
     into 'WEB-INF/lib' 
  }
}



/******************************************************************
 ******************************************************************
 **
 ** Assemble all of the custom build artifacts.
 **
 ******************************************************************
 ******************************************************************/
assemble.dependsOn JASPIServerAuthRegistrationTestServlet_WAR


/******************************************************************
 ******************************************************************
 **
 ** Copy feature bundles and applications to specific servers.
 **
 ******************************************************************
 ******************************************************************/
autoFVT.dependsOn ':com.ibm.ws.security.authorization.jacc.testprovider:assemble'
autoFVT.dependsOn ':com.ibm.ws.security.jaspic.test:assemble'
autoFVT.doLast {

  /*
   * Copy the JASPI user test feature.
   */
  copy {
     from new File(project(':com.ibm.ws.security.jaspic.test').projectDir, '/build/libs/com.ibm.ws.security.jaspic.test.jar')
     into new File(autoFvtDir, 'publish/bundles')
     rename 'com.ibm.ws.security.jaspic.test.jar', 'com.ibm.ws.security.jaspic.test_1.0.jar'
  }
  copy {
     from new File(project(':com.ibm.ws.security.jaspic.test').projectDir, '/build/libs/com.ibm.ws.security.jaspic.test.jakarta.jar')
     into new File(autoFvtDir, 'publish/bundles')
     rename 'com.ibm.ws.security.jaspic.test.jakarta.jar', 'com.ibm.ws.security.jaspic.test_2.0.jar'
  }
  copy {
     from new File(project(':com.ibm.ws.security.jaspic.test').projectDir, '/build/libs/com.ibm.ws.security.jaspic.test.jakarta.jar')
     into new File(autoFvtDir, 'publish/bundles')
     rename 'com.ibm.ws.security.jaspic.test.jakarta.jar', 'com.ibm.ws.security.jaspic.test_2.1.jar'
  }
  copy {
     from new File(project(':com.ibm.ws.security.jaspic.test').projectDir , "/publish/features/jaspicUserTestFeature-1.0.mf")  
     from new File(project(':com.ibm.ws.security.jaspic.test').projectDir , "/publish/features/jaspicUserTestFeature-2.0.mf")  
     from new File(project(':com.ibm.ws.security.jaspic.test').projectDir , "/publish/features/jaspicUserTestFeature-3.0.mf")  
     into new File(autoFvtDir, 'publish/features')
  }
    
  /*
   * Copy the JACC test provider feature.
   */
  copy {
     from new File(project(':com.ibm.ws.security.authorization.jacc.testprovider').projectDir, "/build/libs/com.ibm.ws.security.authorization.jacc.testprovider.jar") 
     into new File(autoFvtDir, 'publish/bundles')
     rename 'com.ibm.ws.security.authorization.jacc.testprovider.jar', 'com.ibm.ws.security.authorization.jacc.testprovider_1.0.jar'
  }
  copy {
     from new File(project(':com.ibm.ws.security.authorization.jacc.testprovider').projectDir, "/build/libs/com.ibm.ws.security.authorization.jacc.testprovider.jakarta.jar") 
     into new File(autoFvtDir, 'publish/bundles')
     rename 'com.ibm.ws.security.authorization.jacc.testprovider.jakarta.jar', 'com.ibm.ws.security.authorization.jacc.testprovider_2.0.jar'
  }
  
  copy {
     from new File(project(':com.ibm.ws.security.authorization.jacc.testprovider').projectDir, "/build/libs/com.ibm.ws.security.authorization.jacc.testprovider.jakarta.jar") 
     into new File(autoFvtDir, 'publish/bundles')
     rename 'com.ibm.ws.security.authorization.jacc.testprovider.jakarta.jar', 'com.ibm.ws.security.authorization.jacc.testprovider_2.1.jar'
  }
  copy {
     from new File(project(':com.ibm.ws.security.authorization.jacc.testprovider').projectDir ,"/publish/usr/extension/lib/features/jaccTestProvider-1.0.mf")  
     from new File(project(':com.ibm.ws.security.authorization.jacc.testprovider').projectDir ,"/publish/usr/extension/lib/features/jaccTestProvider-2.0.mf")  
     from new File(project(':com.ibm.ws.security.authorization.jacc.testprovider').projectDir ,"/publish/usr/extension/lib/features/jaccTestProvider-2.1.mf")  
     into new File(autoFvtDir, 'publish/features')
  }
  

  /*
   * Copy the JASPIServerAuthRegistrationTestServlet WAR into test servers.
   */
  def servers = [
    'com.ibm.ws.security.jaspic11.fat.serverauthregistration'
  ]
  servers.each { server ->
    copy { 
      from new File(project.buildDir, 'test-application')
      into new File(autoFvtDir, 'publish/servers/' + server + '/apps')
      include 'JASPIServerAuthRegistrationTestServlet.war'
    }
  }
}

