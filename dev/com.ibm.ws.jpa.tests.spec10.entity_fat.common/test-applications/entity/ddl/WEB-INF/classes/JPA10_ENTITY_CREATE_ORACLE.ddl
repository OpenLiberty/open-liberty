alter session set "_ORACLE_SCRIPT"=true;
create user jpaschema identified by rubbish;
alter user system quota unlimited on users;
grant connect, create session to jpaschema;
grant unlimited tablespace to jpaschema;
           
CREATE TABLE ${schemaname}.AnnEmbedMultiTableEnt (id NUMBER NOT NULL, name VARCHAR2(255), PRIMARY KEY (id));
CREATE TABLE ${schemaname}.AnnMSCMultiTableEnt (id NUMBER NOT NULL, name VARCHAR2(255), PRIMARY KEY (id));
CREATE TABLE ${schemaname}.AnnMultiTableEnt (id NUMBER NOT NULL, name VARCHAR2(255), PRIMARY KEY (id));
CREATE TABLE ${schemaname}.DatatypeSupPropTestEntity (id NUMBER NOT NULL, bigDecimalAttrDefault NUMBER, bigIntegerAttrDefault NUMBER, booleanAttrDefault NUMBER, booleanWrapperAttrDefault NUMBER, byteArrayAttrDefault BLOB, byteAttrDefault NUMBER, byteWrapperArrayAttrDefault BLOB, byteWrapperAttrDefault NUMBER, charArrayAttrDefault CLOB, charAttrDefault CHAR(1 CHAR), charWrapperArrayAttrDefault CLOB, characterWrapperAttrDefault CHAR(1 CHAR), doubleAttrDefault NUMBER, doubleWrapperAttrDefault NUMBER, enumeration NUMBER, floatAttrDefault REAL, floatWrapperAttrDefault REAL, intAttrDefault NUMBER, integerWrapperAttrDefault NUMBER, longAttrDefault NUMBER, longWrapperAttrDefault NUMBER, serializableClass BLOB, shortAttrDefault NUMBER, shortWrapperAttrDefault NUMBER, sqlDateAttrDefault DATE, sqlTimeAttrDefault DATE, sqlTimestampAttrDefault TIMESTAMP, stringAttrDefault VARCHAR2(255), utilCalendarAttrDefault DATE, utilDateAttrDefault DATE, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.DatatypeSupTestEntity (id NUMBER NOT NULL, bigDecimalAttrDefault NUMBER, bigIntegerAttrDefault NUMBER, booleanAttrDefault NUMBER, booleanWrapperAttrDefault NUMBER, byteArrayAttrDefault BLOB, byteAttrDefault NUMBER, byteWrapperArrayAttrDefault BLOB, byteWrapperAttrDefault NUMBER, charArrayAttrDefault CLOB, charAttrDefault CHAR(1 CHAR), charWrapperArrayAttrDefault CLOB, characterWrapperAttrDefault CHAR(1 CHAR), doubleAttrDefault NUMBER, doubleWrapperAttrDefault NUMBER, enumeration NUMBER, floatAttrDefault REAL, floatWrapperAttrDefault REAL, intAttrDefault NUMBER, integerWrapperAttrDefault NUMBER, longAttrDefault NUMBER, longWrapperAttrDefault NUMBER, serializableClass BLOB, shortAttrDefault NUMBER, shortWrapperAttrDefault NUMBER, sqlDateAttrDefault DATE, sqlTimeAttrDefault DATE, sqlTimestampAttrDefault TIMESTAMP, stringAttrDefault VARCHAR2(255), utilCalendarAttrDefault DATE, utilDateAttrDefault DATE, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.EmbeddableIdEntity (country VARCHAR2(255) NOT NULL, id NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (country, id));
CREATE TABLE ${schemaname}.EmbeddedObjectAOEntity (id NUMBER NOT NULL, localIntVal NUMBER, localStrVal VARCHAR2(255), booleanVal NUMBER, byteVal NUMBER, charVal CHAR(1 CHAR), doubleVal NUMBER, floatVal REAL, intValCol NUMBER, longValCol NUMBER, shortVal NUMBER, stringVal VARCHAR2(255), PRIMARY KEY (id));
CREATE TABLE ${schemaname}.EmbeddedObjectEntity (id NUMBER NOT NULL, localIntVal NUMBER, localStrVal VARCHAR2(255), booleanVal NUMBER, byteVal NUMBER, charVal CHAR(1 CHAR), doubleVal NUMBER, floatVal REAL, intVal NUMBER, longVal NUMBER, shortVal NUMBER, stringVal VARCHAR2(255), PRIMARY KEY (id));
CREATE TABLE ${schemaname}.IdClassEntity (country VARCHAR2(255) NOT NULL, id NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (country, id));
CREATE TABLE ${schemaname}.OPENJPA_SEQUENCES_TABLE (ID VARCHAR2(255) NOT NULL, SEQUENCE_VALUE NUMBER, PRIMARY KEY (ID));
CREATE TABLE ${schemaname}.OPENJPA_SEQUENCE_TABLE (ID NUMBER NOT NULL, SEQUENCE_VALUE NUMBER, PRIMARY KEY (ID));
CREATE TABLE ${schemaname}.PKEntityByte (pkey NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.PKEntityByteWrapper (pkey NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.PKEntityChar (pkey CHAR(1 CHAR) NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.PKEntityCharacterWrapper (pkey CHAR(1 CHAR) NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.PKEntityInt (pkey NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.PKEntityIntWrapper (pkey NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.PKEntityJavaSqlDate (pkey DATE NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.PKEntityJavaUtilDate (pkey DATE NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.PKEntityLong (pkey NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.PKEntityLongWrapper (pkey NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.PKEntityShort (pkey NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.PKEntityShortWrapper (pkey NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.PKEntityString (pkey VARCHAR2(255) NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.PKGenAutoEntity (id NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.PKGenIdentityEntity (id NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.PKGenTableType1Entity (id NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.PKGenTableType2Entity (id NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.PKGenTableType3Entity (id NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.PKGenTableType4Entity (id NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.ReadOnlyEntity (id NUMBER NOT NULL, intVal NUMBER, noInsertIntVal NUMBER, noUpdatableIntVal NUMBER, readOnlyIntVal NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.SEC_TABLE1 (id NUMBER, city VARCHAR2(255), state VARCHAR2(255), street VARCHAR2(255), zip VARCHAR2(255));
CREATE TABLE ${schemaname}.SEC_TABLE2AMSC (id NUMBER, city VARCHAR2(255), state VARCHAR2(255), street VARCHAR2(255), zip VARCHAR2(255));
CREATE TABLE ${schemaname}.SEC_TABLEEMB (id NUMBER, city VARCHAR2(255), state VARCHAR2(255), street VARCHAR2(255), zip VARCHAR2(255));
CREATE TABLE ${schemaname}.SEQUENCE (SEQ_NAME VARCHAR2(50) NOT NULL, SEQ_COUNT NUMBER(38) NULL, PRIMARY KEY (SEQ_NAME));
CREATE TABLE ${schemaname}.SerialDatatypeSupPropTE (id NUMBER NOT NULL, bigDecimalAttrDefault NUMBER, bigIntegerAttrDefault NUMBER, booleanAttrDefault NUMBER, booleanWrapperAttrDefault NUMBER, byteArrayAttrDefault BLOB, byteAttrDefault NUMBER, byteWrapperArrayAttrDefault BLOB, byteWrapperAttrDefault NUMBER, charArrayAttrDefault CLOB, charAttrDefault CHAR(1 CHAR), charWrapperArrayAttrDefault CLOB, characterWrapperAttrDefault CHAR(1 CHAR), doubleAttrDefault NUMBER, doubleWrapperAttrDefault NUMBER, enumeration NUMBER, floatAttrDefault REAL, floatWrapperAttrDefault REAL, intAttrDefault NUMBER, integerWrapperAttrDefault NUMBER, longAttrDefault NUMBER, longWrapperAttrDefault NUMBER, serializableClass BLOB, shortAttrDefault NUMBER, shortWrapperAttrDefault NUMBER, sqlDateAttrDefault DATE, sqlTimeAttrDefault DATE, sqlTimestampAttrDefault TIMESTAMP, stringAttrDefault VARCHAR2(255), utilCalendarAttrDefault DATE, utilDateAttrDefault DATE, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.SerialDatatypeSupTE (id NUMBER NOT NULL, bigDecimalAttrDefault NUMBER, bigIntegerAttrDefault NUMBER, booleanAttrDefault NUMBER, booleanWrapperAttrDefault NUMBER, byteArrayAttrDefault BLOB, byteAttrDefault NUMBER, byteWrapperArrayAttrDefault BLOB, byteWrapperAttrDefault NUMBER, charArrayAttrDefault CLOB, charAttrDefault CHAR(1 CHAR), charWrapperArrayAttrDefault CLOB, characterWrapperAttrDefault CHAR(1 CHAR), doubleAttrDefault NUMBER, doubleWrapperAttrDefault NUMBER, enumeration NUMBER, floatAttrDefault REAL, floatWrapperAttrDefault REAL, intAttrDefault NUMBER, integerWrapperAttrDefault NUMBER, longAttrDefault NUMBER, longWrapperAttrDefault NUMBER, serializableClass BLOB, shortAttrDefault NUMBER, shortWrapperAttrDefault NUMBER, sqlDateAttrDefault DATE, sqlTimeAttrDefault DATE, sqlTimestampAttrDefault TIMESTAMP, stringAttrDefault VARCHAR2(255), utilCalendarAttrDefault DATE, utilDateAttrDefault DATE, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.TableIDGen4Table (GEN_NAME VARCHAR2(255) NOT NULL, GEN_VAL NUMBER, PRIMARY KEY (GEN_NAME));
CREATE TABLE ${schemaname}.TableIDGenTable (GEN_NAME VARCHAR2(255) NOT NULL, GEN_VAL NUMBER, PRIMARY KEY (GEN_NAME));
CREATE TABLE ${schemaname}.VersionedIntEntity (id NUMBER NOT NULL, intVal NUMBER, stringVal VARCHAR2(255), version NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.VersionedIntWrapperEntity (id NUMBER NOT NULL, intVal NUMBER, stringVal VARCHAR2(255), version NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.VersionedLongEntity (id NUMBER NOT NULL, intVal NUMBER, stringVal VARCHAR2(255), version NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.VersionedLongWrapperEntity (id NUMBER NOT NULL, intVal NUMBER, stringVal VARCHAR2(255), version NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.VersionedShortEntity (id NUMBER NOT NULL, intVal NUMBER, stringVal VARCHAR2(255), version NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.VersionedShortWrapperEntity (id NUMBER NOT NULL, intVal NUMBER, stringVal VARCHAR2(255), version NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.VersionedSqlTimestampEntity (id NUMBER NOT NULL, intVal NUMBER, stringVal VARCHAR2(255), version TIMESTAMP, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLDatatypeSupPropTestEntity (id NUMBER NOT NULL, bigDecimalAttrDefault NUMBER, bigIntegerAttrDefault NUMBER, booleanAttrDefault NUMBER, booleanWrapperAttrDefault NUMBER, byteArrayAttrDefault BLOB, byteAttrDefault NUMBER, byteWrapperArrayAttrDefault BLOB, byteWrapperAttrDefault NUMBER, charArrayAttrDefault VARCHAR2(255), charAttrDefault CHAR(1 CHAR), charWrapperArrayAttrDefault VARCHAR2(255), characterWrapperAttrDefault CHAR(1 CHAR), doubleAttrDefault NUMBER, doubleWrapperAttrDefault NUMBER, enumeration NUMBER, floatAttrDefault REAL, floatWrapperAttrDefault REAL, intAttrDefault NUMBER, integerWrapperAttrDefault NUMBER, longAttrDefault NUMBER, longWrapperAttrDefault NUMBER, serializableClass BLOB, shortAttrDefault NUMBER, shortWrapperAttrDefault NUMBER, sqlDateAttrDefault DATE, sqlTimeAttrDefault DATE, sqlTimestampAttrDefault TIMESTAMP, stringAttrDefault VARCHAR2(255), utilCalendarAttrDefault DATE, utilDateAttrDefault DATE, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLDatatypeSupTestEntity (id NUMBER NOT NULL, bigDecimalAttrDefault NUMBER, bigIntegerAttrDefault NUMBER, booleanAttrDefault NUMBER, booleanWrapperAttrDefault NUMBER, byteArrayAttrDefault BLOB, byteAttrDefault NUMBER, byteWrapperArrayAttrDefault BLOB, byteWrapperAttrDefault NUMBER, charArrayAttrDefault VARCHAR2(255), charAttrDefault CHAR(1 CHAR), charWrapperArrayAttrDefault VARCHAR2(255), characterWrapperAttrDefault CHAR(1 CHAR), doubleAttrDefault NUMBER, doubleWrapperAttrDefault NUMBER, enumeration NUMBER, floatAttrDefault REAL, floatWrapperAttrDefault REAL, intAttrDefault NUMBER, integerWrapperAttrDefault NUMBER, longAttrDefault NUMBER, longWrapperAttrDefault NUMBER, serializableClass BLOB, shortAttrDefault NUMBER, shortWrapperAttrDefault NUMBER, sqlDateAttrDefault DATE, sqlTimeAttrDefault DATE, sqlTimestampAttrDefault TIMESTAMP, stringAttrDefault VARCHAR2(255), utilCalendarAttrDefault DATE, utilDateAttrDefault DATE, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLEmbeddableIdEntity (country VARCHAR2(255) NOT NULL, id NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (country, id));
CREATE TABLE ${schemaname}.XMLEmbeddedObjectAOEntity (id NUMBER NOT NULL, localIntVal NUMBER, localStrVal VARCHAR2(255), booleanVal NUMBER, byteVal NUMBER, charVal CHAR(1 CHAR), doubleVal NUMBER, floatVal REAL, intValCol NUMBER, longValCol NUMBER, shortVal NUMBER, stringVal VARCHAR2(255), PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLEmbeddedObjectEntity (id NUMBER NOT NULL, localIntVal NUMBER, localStrVal VARCHAR2(255), booleanVal NUMBER, byteVal NUMBER, charVal CHAR(1 CHAR), doubleVal NUMBER, floatVal REAL, intVal NUMBER, longVal NUMBER, shortVal NUMBER, stringVal VARCHAR2(255), PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLEmbedMultiTableEnt (id NUMBER NOT NULL, name VARCHAR2(255), PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLIdClassEntity (country VARCHAR2(255) NOT NULL, id NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (country, id));
CREATE TABLE ${schemaname}.XMLMSCMultiTableEnt (id NUMBER NOT NULL, name VARCHAR2(255), PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLMultiTableEnt (id NUMBER NOT NULL, name VARCHAR2(255), PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLPKEntityByte (pkey NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.XMLPKEntityByteWrapper (pkey NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.XMLPKEntityChar (pkey CHAR(1 CHAR) NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.XMLPKEntityCharacterWrapper (pkey CHAR(1 CHAR) NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.XMLPKEntityInt (pkey NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.XMLPKEntityIntWrapper (pkey NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.XMLPKEntityJavaSqlDate (pkey DATE NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.XMLPKEntityJavaUtilDate (pkey DATE NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.XMLPKEntityLong (pkey NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.XMLPKEntityLongWrapper (pkey NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.XMLPKEntityShort (pkey NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.XMLPKEntityShortWrapper (pkey NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.XMLPKEntityString (pkey VARCHAR2(255) NOT NULL, intVal NUMBER, PRIMARY KEY (pkey));
CREATE TABLE ${schemaname}.XMLPKGenAutoEntity (id NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLPKGenIdentityEntity (id NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLPKGenTableType1Entity (id NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLPKGenTableType2Entity (id NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLPKGenTableType3Entity (id NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLPKGenTableType4Entity (id NUMBER NOT NULL, intVal NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLReadOnlyEntity (id NUMBER NOT NULL, intVal NUMBER, noInsertIntVal NUMBER, noUpdatableIntVal NUMBER, readOnlyIntVal NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLSerialDatatypeSupPropTE (id NUMBER NOT NULL, bigDecimalAttrDefault NUMBER, bigIntegerAttrDefault NUMBER, booleanAttrDefault NUMBER, booleanWrapperAttrDefault NUMBER, byteArrayAttrDefault BLOB, byteAttrDefault NUMBER, byteWrapperArrayAttrDefault BLOB, byteWrapperAttrDefault NUMBER, charArrayAttrDefault VARCHAR2(255), charAttrDefault CHAR(1 CHAR), charWrapperArrayAttrDefault VARCHAR2(255), characterWrapperAttrDefault CHAR(1 CHAR), doubleAttrDefault NUMBER, doubleWrapperAttrDefault NUMBER, enumeration NUMBER, floatAttrDefault REAL, floatWrapperAttrDefault REAL, intAttrDefault NUMBER, integerWrapperAttrDefault NUMBER, longAttrDefault NUMBER, longWrapperAttrDefault NUMBER, serializableClass BLOB, shortAttrDefault NUMBER, shortWrapperAttrDefault NUMBER, sqlDateAttrDefault DATE, sqlTimeAttrDefault DATE, sqlTimestampAttrDefault TIMESTAMP, stringAttrDefault VARCHAR2(255), utilCalendarAttrDefault DATE, utilDateAttrDefault DATE, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLSerialDatatypeSupTE (id NUMBER NOT NULL, bigDecimalAttrDefault NUMBER, bigIntegerAttrDefault NUMBER, booleanAttrDefault NUMBER, booleanWrapperAttrDefault NUMBER, byteArrayAttrDefault BLOB, byteAttrDefault NUMBER, byteWrapperArrayAttrDefault BLOB, byteWrapperAttrDefault NUMBER, charArrayAttrDefault VARCHAR2(255), charAttrDefault CHAR(1 CHAR), charWrapperArrayAttrDefault VARCHAR2(255), characterWrapperAttrDefault CHAR(1 CHAR), doubleAttrDefault NUMBER, doubleWrapperAttrDefault NUMBER, enumeration NUMBER, floatAttrDefault REAL, floatWrapperAttrDefault REAL, intAttrDefault NUMBER, integerWrapperAttrDefault NUMBER, longAttrDefault NUMBER, longWrapperAttrDefault NUMBER, serializableClass BLOB, shortAttrDefault NUMBER, shortWrapperAttrDefault NUMBER, sqlDateAttrDefault DATE, sqlTimeAttrDefault DATE, sqlTimestampAttrDefault TIMESTAMP, stringAttrDefault VARCHAR2(255), utilCalendarAttrDefault DATE, utilDateAttrDefault DATE, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLTableIDGen4Table (GEN_NAME VARCHAR2(255) NOT NULL, GEN_VAL NUMBER, PRIMARY KEY (GEN_NAME));
CREATE TABLE ${schemaname}.XMLTableIDGenTable (GEN_NAME VARCHAR2(255) NOT NULL, GEN_VAL NUMBER, PRIMARY KEY (GEN_NAME));
CREATE TABLE ${schemaname}.XMLVersionedIntEntity (id NUMBER NOT NULL, intVal NUMBER, stringVal VARCHAR2(255), version NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLVersionedIntWrapperEntity (id NUMBER NOT NULL, intVal NUMBER, stringVal VARCHAR2(255), version NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLVersionedLongEntity (id NUMBER NOT NULL, intVal NUMBER, stringVal VARCHAR2(255), version NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLVersionedLongWrapperEnt (id NUMBER NOT NULL, intVal NUMBER, stringVal VARCHAR2(255), version NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLVersionedShortEntity (id NUMBER NOT NULL, intVal NUMBER, stringVal VARCHAR2(255), version NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLVersionedShortWrapperEnt (id NUMBER NOT NULL, intVal NUMBER, stringVal VARCHAR2(255), version NUMBER, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XMLVersionedSqlTimestampEnt (id NUMBER NOT NULL, intVal NUMBER, stringVal VARCHAR2(255), version TIMESTAMP, PRIMARY KEY (id));
CREATE TABLE ${schemaname}.XSEC_TABLE1 (id NUMBER, city VARCHAR2(255), state VARCHAR2(255), street VARCHAR2(255), zip VARCHAR2(255));
CREATE TABLE ${schemaname}.XSEC_TABLE2AMSC (id NUMBER, city VARCHAR2(255), state VARCHAR2(255), street VARCHAR2(255), zip VARCHAR2(255));
CREATE TABLE ${schemaname}.XSEC_TABLEEMB (id NUMBER, city VARCHAR2(255), state VARCHAR2(255), street VARCHAR2(255), zip VARCHAR2(255));

CREATE TABLE jpaschema.ACfgFldEn (id NUMBER NOT NULL, floatValColumnPrecision NUMBER(2), floatValColumnScale NUMBER, intValColName NUMBER, notNullable BLOB NOT NULL, stringValColumnLength VARCHAR2(12), stringValEager VARCHAR2(255), stringValLazy VARCHAR2(255), stringValOptional VARCHAR2(255), uniqueConstraintString VARCHAR2(255) NOT NULL, uniqueString VARCHAR2(255) NOT NULL, PRIMARY KEY (id), CONSTRAINT U_CFGFLDN_UNIQUESTRING UNIQUE (uniqueString) DEFERRABLE, CONSTRAINT U_CFGFLDN_UNIQUECONSTRAINTSTRI UNIQUE (uniqueConstraintString) DEFERRABLE);
CREATE TABLE jpaschema.AltColumnTable (ATTRCONFIGFIELDENTITY_ID NUMBER, ID NUMBER(10), intValCol NUMBER);
CREATE TABLE jpaschema.XAltColumnTable (XMLATTRCONFIGFIELDENTITY_ID NUMBER, ID NUMBER(10), XMLIntValCol NUMBER);
CREATE TABLE jpaschema.OPENJPA_SEQUENCES_TABLE (ID VARCHAR2(255) NOT NULL, SEQUENCE_VALUE NUMBER, PRIMARY KEY (ID));
CREATE TABLE jpaschema.OPENJPA_SEQUENCE_TABLE (ID NUMBER NOT NULL, SEQUENCE_VALUE NUMBER, PRIMARY KEY (ID));
CREATE TABLE jpaschema.TableIDGen4Table (GEN_NAME VARCHAR2(255) NOT NULL, GEN_VAL NUMBER, PRIMARY KEY (GEN_NAME));
CREATE TABLE jpaschema.TableIDGenTable (GEN_NAME VARCHAR2(255) NOT NULL, GEN_VAL NUMBER, PRIMARY KEY (GEN_NAME));
CREATE TABLE jpaschema.XACfgFldE (id NUMBER NOT NULL, floatValColumnPrecision NUMBER(2), floatValColumnScale NUMBER, intValColName NUMBER, notNullable BLOB NOT NULL, stringValColumnLength VARCHAR2(12), stringValEager VARCHAR2(255), stringValLazy VARCHAR2(255), stringValOptional VARCHAR2(255), uniqueConstraintString VARCHAR2(255) NOT NULL, uniqueString VARCHAR2(255) NOT NULL, PRIMARY KEY (id), CONSTRAINT U_XCFGFLD_UNIQUESTRING UNIQUE (uniqueString) DEFERRABLE, CONSTRAINT U_XCFGFLD_UNIQUECONSTRAINTSTRI UNIQUE (uniqueConstraintString) DEFERRABLE);
CREATE TABLE jpaschema.XMLTableIDGen4Table (GEN_NAME VARCHAR2(255) NOT NULL, SEQUENCE_VALUE NUMBER, PRIMARY KEY (GEN_NAME));
CREATE TABLE jpaschema.XMLTableIDGenTable (GEN_NAME VARCHAR2(255) NOT NULL, SEQUENCE_VALUE NUMBER, PRIMARY KEY (GEN_NAME));

CREATE INDEX ${schemaname}.I_SC_TBL1_ID ON ${schemaname}.SEC_TABLE1 (id);
CREATE INDEX ${schemaname}.I_SC_TMSC_ID ON ${schemaname}.SEC_TABLE2AMSC (id);
CREATE INDEX ${schemaname}.I_SC_TLMB_ID ON ${schemaname}.SEC_TABLEEMB (id);
CREATE INDEX ${schemaname}.I_XSC_BL1_ID ON ${schemaname}.XSEC_TABLE1 (id);
CREATE INDEX ${schemaname}.I_XSC_MSC_ID ON ${schemaname}.XSEC_TABLE2AMSC (id);
CREATE INDEX ${schemaname}.I_XSC_LMB_ID ON ${schemaname}.XSEC_TABLEEMB (id);

CREATE SEQUENCE AnnSeqGen1_Seq START WITH 1 CACHE 50;
CREATE SEQUENCE XMLSeqGen1_Seq START WITH 1 CACHE 50;
CREATE SEQUENCE PKGenIdentityEntity_id_SEQ START WITH 1;
CREATE SEQUENCE XMLPKGenIdentityEntity_id_SEQ START WITH 1;
CREATE SEQUENCE SEQ_GEN_IDENTITY START WITH 1;

INSERT INTO ${schemaname}.SEQUENCE(SEQ_NAME, SEQ_COUNT) values ('SEQ_GEN', 0);
INSERT INTO ${schemaname}.SEQUENCE(SEQ_NAME, SEQ_COUNT) values ('SEQ_GEN_TABLE', 0);
INSERT INTO ${schemaname}.SEQUENCE(SEQ_NAME, SEQ_COUNT) values ('TableType2Generator', 0);
INSERT INTO ${schemaname}.SEQUENCE(SEQ_NAME, SEQ_COUNT) values ('XMLTableType2Generator', 0);
INSERT INTO ${schemaname}.TableIDGenTable(GEN_NAME, GEN_VAL) values ('TableType3Generator', 0);
INSERT INTO ${schemaname}.XMLTableIDGenTable(GEN_NAME, GEN_VAL) values ('XMLTableType3Generator', 0);
INSERT INTO ${schemaname}.TableIDGen4Table(GEN_NAME, GEN_VAL) values ('TableType4Generator', 0);
INSERT INTO ${schemaname}.XMLTableIDGen4Table(GEN_NAME, GEN_VAL) values ('XMLTableType4Generator', 0);
            
CREATE OR REPLACE TRIGGER PKGenIdentityEntity_id_TRG BEFORE INSERT ON ${schemaname}.PKGenIdentityEntity FOR EACH ROW BEGIN SELECT PKGenIdentityEntity_id_SEQ.nextval INTO :new.id FROM DUAL; END PKGenIdentityEntity_id_TRG;;
CREATE OR REPLACE TRIGGER XMLPKGenIdentityEntity_id_TRG BEFORE INSERT ON ${schemaname}.XMLPKGenIdentityEntity FOR EACH ROW BEGIN SELECT XMLPKGenIdentityEntity_id_SEQ.nextval INTO :new.id FROM DUAL; END XMLPKGenIdentityEntity_id_TRG;;

grant insert any table to system;
grant select any table to system;

SELECT * FROM jpaschema.ACfgFldEn;


