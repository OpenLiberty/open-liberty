<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2021, 2022 IBM Corporation and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License 2.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-2.0/
    
    SPDX-License-Identifier: EPL-2.0
   
    Contributors:
        IBM Corporation - initial API and implementation
 -->
<hazelcast
	xsi:schemaLocation="http://www.hazelcast.com/schema/config hazelcast-config-5.1.xsd"
	xmlns="http://www.hazelcast.com/schema/config"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	
    <!-- 
         Use the randomly generated cluster names so that each test is not likely to join a cluster
         that might already exist. Especially, if we had used the default.
     -->
    <cluster-name>${hazelcast.cluster.name}</cluster-name>

	<network>
		<join>
			<multicast enabled="false" />
			<tcp-ip enabled="true">
				<interface>127.0.0.1</interface>
			</tcp-ip>
		</join>
	</network>

	<executor-service name="default">
		<pool-size>12</pool-size>
	</executor-service>

	<!-- 
	    Predefine the authentication cache.
	 -->
	<cache name="AuthCache">
		<key-type class-name="java.lang.Object" />
		<value-type class-name="java.lang.Object" />
		
		<!-- 
		     Set the maximum cache size that corresponds to authCache->maxSize.
		     
		     Note that Hazelcast divides the size among all partitions. How
		     entries are placed on the partitions at runtime will influence
		     the effective size.
		 -->
		<eviction size="${hazelcast.authcache.max.size}"
			max-size-policy="ENTRY_COUNT" eviction-policy="LRU" />
	   
		<!-- 
		    Set expiry policy that corresponds to authCache->timeout.
		 -->
		<expiry-policy-factory>
			<timed-expiry-policy-factory
				expiry-policy-type="CREATED"
				duration-amount="${hazelcast.authcache.entry.ttl}"
				time-unit="SECONDS" />
		</expiry-policy-factory>

	</cache>
	
	<!-- 
	    Predefine the logged out cookie cache.
	 -->
	<cache name="LoggedOutCookieCache">
		<key-type class-name="java.lang.Object" />
		<value-type class-name="java.lang.Object" />
		
		<!-- 
		     Set the maximum cache size.
		     
		     Note that Hazelcast divides the size among all partitions. How
		     entries are placed on the partitions at runtime will influence
		     the effective size.
		 -->
		<eviction size="10000" max-size-policy="ENTRY_COUNT"
			eviction-policy="LRU" />
	   
		<!-- 
		    Set expiry policy so that they never time out.
		 -->
		<expiry-policy-factory>
			<timed-expiry-policy-factory
				expiry-policy-type="ETERNAL" />
		</expiry-policy-factory>

	</cache>

</hazelcast>
