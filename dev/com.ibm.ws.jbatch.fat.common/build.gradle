/*******************************************************************************
 * Copyright (c) 2020 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
apply from: '../wlp-gradle/subprojects/fat.gradle'

dependencies {
  requiredLibs project(':io.openliberty.org.apache.commons.logging')
}

// This is where all application ZIP and WARs will be built
def appBuildDir = "${buildDir}/test-application"

//Formerly com.ibm.ws.jbatch.test.dbservlet.client.jar
task buildCommonClientJar(type: Jar, , dependsOn: classes) {
  def appName = "CommonClient"
  destinationDir file("${appBuildDir}")
  archiveName "${appName}.jar"

  from ("build/classes/java/main") {
    include "com/ibm/ws/jbatch/test/**/*.class"
    include "com/ibm/ws/jbatch/test/dbservlet/**/*.class"
    into ""
  }
}

task buildDbServletAppWar(type: War, dependsOn: classes) {
  def appName = "DbServletApp"
  destinationDir file("${appBuildDir}")
  archiveName "${appName}.war"

  //from("test-applications/${appName}/resources") {
  //  include "**/*"
  //}
  from ("build/classes/java/main") {
    include "batch/fat/web/**/*.class"
    into "WEB-INF/classes"
  }
}

task buildCommonUtilJar(type: Jar, dependsOn: classes) {
  def appName = "CommonUtil"
  destinationDir file("${appBuildDir}")
  archiveName "${appName}.jar"

  from ("build/classes/java/main") {
    include "batch/fat/common/util/**/*.class"
    include "com/ibm/ws/jbatch/test/**/*.class"
    include "com/ibm/ws/jbatch/test/dbservlet/**/*.class"
    into ""
  }
}

task buildBonusPayoutWar(type: War, dependsOn: buildCommonUtilJar) {
  def appName = "BonusPayout"
  destinationDir file("${appBuildDir}")
  archiveName "${appName}.war"

  from("test-applications/${archiveName}/resources") {
    include "**/*"
  }
  from ("build/classes/java/main") {
    include "com/ibm/websphere/samples/batch/artifacts/**/*.class"
    include "com/ibm/websphere/samples/batch/beans/**/*.class"
    include "com/ibm/websphere/samples/batch/fat/**/*.class"
    include "com/ibm/websphere/samples/batch/util/**/*.class"
    exclude "batch/fat/web/**/*.class"
    into "WEB-INF/classes"
  }
  from ("build/libs/test-application") {
    include "**/CommonUtil.jar"
    into "WEB-INF/lib"
  }
  from("test-applications/${archiveName}") {
    include "README.txt"
    into ""
  }
}

task buildBonusPayoutEAREar(type: Ear, dependsOn: buildBonusPayoutWar) {
  def appName = "BonusPayoutEAR"
  destinationDir file("${appBuildDir}")
  archiveName "${appName}.ear"

  from("test-applications/${archiveName}/resources") {
    include "**/*"
  }
  from ("build/libs/test-application") {
    include "**/BonusPayout.war"
    into ""
  }
}

assemble {
  dependsOn \
    buildCommonClientJar,
    buildDbServletAppWar,
    buildCommonUtilJar,
    buildBonusPayoutWar,
    buildBonusPayoutEAREar
}
