<server>

    <featureManager>
        <feature>servlet-4.0</feature>
        <feature>componenttest-1.0</feature>
        <feature>jdbc-4.2</feature>
        <feature>jndi-1.0</feature>
    </featureManager>

    <application location="postgresqlApp.war">
        <classloader commonLibraryRef="PostgresLib"/>
    </application>

	<executor maxThreads="4"></executor>

	<dataSource id="ds2tls" jndiName="jdbc/${id}" fat.modify="true" validationTimeout="30" >
        <jdbcDriver libraryRef="PostgresLib" />
        <connectionManager enableSharingForDirectLookups="false" purgePolicy="FailingConnectionOnly"/>
        <properties serverName="${env.POSTGRES_HOST}" portNumber="${env.POSTGRES_PORT}" databaseName="${env.POSTGRES_DB}" user="${env.POSTGRES_USER}" password="${env.POSTGRES_PASS}"/>
    </dataSource>

	<dataSource id="ds3tls" jndiName="jdbc/${id}" type="javax.sql.XADataSource" fat.modify="true" validationTimeout="30" >
        <jdbcDriver libraryRef="PostgresLib" />
        <properties serverName="${env.POSTGRES_HOST}" portNumber="${env.POSTGRES_PORT}" databaseName="${env.POSTGRES_DB}" user="${env.POSTGRES_USER}" password="${env.POSTGRES_PASS}"/>
        <connectionManager enableSharingForDirectLookups="true" agedTimeout="-1" connectionTimeout="60" maxIdleTime="-1" minPoolSize="0" maxPoolSize="2" purgePolicy="EntirePool" numConnectionsPerThreadLocal="1"  reapTime="-1"/>
    </dataSource>

	<library id="PostgresLib">
        <file name="${shared.resource.dir}/postgres/postgresql.jar"/>
    </library>
    
    <include location="../fatTestPorts.xml"/>
    
    <!-- Needed because this sysprop is read by static init of the org.postgresql.jdbc.PgStatement class, which could be triggered by many different 
         code paths in the Liberty code and it's not feasible to doPriv all of those paths or worth eagerly loading the PgStatement class -->
    <javaPermission codeBase="${server.config.dir}/apps/postgresqlApp.war" className="java.util.PropertyPermission" name="org.postgresql.forceBinary" actions="read"/>
    
    <!-- Needed because test app uses reflection on WSJdbcConnection to verify underlying connection properties -->
    <javaPermission codeBase="${server.config.dir}/apps/postgresqlApp.war" className="java.lang.RuntimePermission" name="accessDeclaredMembers"/>
    <javaPermission codeBase="${server.config.dir}/apps/postgresqlApp.war" className="java.lang.reflect.ReflectPermission" name="suppressAccessChecks"/>
    <javaPermission codeBase="${server.config.dir}/apps/postgresqlApp.war" className="java.sql.SQLPermission" name="setNetworkTimeout"/>
    
    <javaPermission codeBase="${server.config.dir}/jdbc/driver.jar" className="java.security.AllPermission"/>
    <javaPermission codeBase="${shared.resource.dir}/postgres/postgresql.jar" className="java.security.AllPermission"/>
    
    <javaPermission codebase="${server.config.dir}/apps/postgresqlApp.war" className="java.lang.RuntimePermission" name="getClassLoader"/>
    <javaPermission codebase="${server.config.dir}/apps/postgresqlApp.war" className="java.lang.RuntimePermission" name="setContextClassLoader"/>   
    <javaPermission codebase="${server.config.dir}/apps/postgresqlApp.war" className="javax.management.MBeanServerPermission" name="newMBeanServer"/>
    <javaPermission codebase="${server.config.dir}/apps/postgresqlApp.war" className="javax.management.MBeanServerPermission" name="createMBeanServer"/>

</server>