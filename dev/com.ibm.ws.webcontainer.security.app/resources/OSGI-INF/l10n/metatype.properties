###############################################################################
# Copyright (c) 2011, 2018 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#CMVCPATHNAME com.ibm.ws.webcontainer.security/resources/OSGI-INF/l10n/metatype.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE

#
webAppSecurityService.config=Web Container Application Security
webAppSecurityService.config.desc=Configures web container application security.

requiredRole=Required role
requiredRole.desc=Required role used for authorization checks.

logoutOnHttpSessionExpire=Logout users after the HTTP session timer expires
logoutOnHttpSessionExpire.desc=Specifies whether users will be logged out after the HTTP session timer expires. If set to false, the user credential will stay active until the Single Sign-On token timeout occurs. The equivalent custom property in the full application server profile is com.ibm.ws.security.web.logoutOnHTTPSessionExpire.

singleSignonEnabled=Enable single sign-on
singleSignonEnabled.desc=Specifies whether single sign-on is enabled.

ssoDomainNames=Domain names for SSO cookies
ssoDomainNames.desc=A pipe (|) separated list of domain names that SSO Cookies should be presented. The equivalent custom property in the full application server profile is com.ibm.ws.security.config.SingleSignonConfig

ssoUseDomainFromURL=Use domain name from the request URL
ssoUseDomainFromURL.desc=Specifies whether to use the domain name from the request URL for the cookie domain.

useLtpaSSOForJaspic=Enable LTPA single sign-on for JASPIC
useLtpaSSOForJaspic.desc=Enables the single sign-on behavior using the LTPA token for a JASPIC authentication. After the initial authentication is performed by the JASPIC provider, the LTPA cookie is created and used for subsequent logins to achieve the single-sign on behavior. The JASPIC provider is not called until the token expires. The JASPIC authentication applies when an external provider is used and also when the application uses the Java EE Security API annotations. The single sign-on behavior can also be achieved by enabling the JASPIC session cookie or the application provided RememberMeIdentityStore bean for a JASPIC authentication. In this case, set the useLtpaSSOForJaspic attribute to false.

ssoRequiresSSL=Single sign-on requires SSL
ssoRequiresSSL.desc=Specifies whether a SSO cookie is sent over SSL. The equivalent property in the full application server profile is requiresSSL.

preserveFullyQualifiedReferrerUrl=Preserve the fully qualified referrer URL
preserveFullyQualifiedReferrerUrl.desc=Warning, security risk: Setting this to true may open your systems to potential URL redirect attacks. This property specifies whether the fully qualified referrer URL for form login redirects is preserved. If false, the host for the referrer URL is removed and the redirect is to localhost. The equivalent custom property in the full application server profile is com.ibm.websphere.security.util.fullyQualifiedURL

postParamSaveMethod=POST parameter store behavior for redirects
postParamSaveMethod.desc=Specifies where POST parameters are stored upon redirect. Valid values are cookie (POST parameters are stored in a cookie), session (POST parameters are stored in the HTTP Session) and none (POST parameters are not preserved). The equivalent custom property in the full application server profile is com.ibm.websphere.security.util.postParamSaveMethod.

postParamCookieSize=POST parameter cookie size
postParamCookieSize.desc=Size of the POST parameter cookie. If the size of the cookie is larger than the browser limit, unexpected behavior may occur. The value of this property must be a positive integer and represents the maximum size of the cookie in bytes. The equivalent custom property in the full application server profile is com.ibm.websphere.security.util.postParamMaxCookieSize.

allowLogoutPageRedirectToAnyHost=Allow logout page to redirect to any host
allowLogoutPageRedirectToAnyHost.desc=Warning, security risk: Setting this property to true may open your systems to potential URL redirect attacks. If set to true, any host can be specified for the logout page redirect. If set to false, and the logout page points to a different host, or one not listed in the logout page redirect domain list, then a generic logout page is displayed. The equivalent custom property in the full application server profile is com.ibm.websphere.security.allowAnyLogoutExitPageHost.

wasReqURLRedirectDomainNames=Domain names allowed for WASReqURL page redirect
wasReqURLRedirectDomainNames.desc=A pipe (|) separated list of domain names that are allowed for the WASReqURL page redirect. The hostname found on the form login request is implied. 

logoutPageRedirectDomainNames=Domain names for logout page redirect
logoutPageRedirectDomainNames.desc=A pipe (|) separated list of domain names that are allowed for the logout page redirect (localhost is implied). The equivalent custom property in the full application server profile is com.ibm.websphere.security.logoutExitPageDomainList.

ssoCookieName=Single sign-on cookie name
ssoCookieName.desc=Customizes the SSO cookie name. A custom cookie name allows you to logically separate authentication between SSO domains and to enable customized authentication to a particular environment. Before setting this value, consider that setting a custom cookie name can cause an authentication failure. For example, a connection to a server that has a custom cookie property set sends this custom cookie to the browser. A subsequent connection to a server that uses either the default cookie name or a different cookie name, is not able to authenticate the request via a validation of the in-bound cookie. The equivalent custom property in the full application server profile is com.ibm.websphere.security.customSSOCookieName.

useOnlyCustomCookieName=Use only the custom cookie name
useOnlyCustomCookieName.desc=Specifies whether to use only the custom cookie name.

allowFailOverToBasicAuth=Allow failover to HTTP basic auth
allowFailOverToBasicAuth.desc=Specifies whether to fail over to basic authentication when certificate authentication fails. The equivalent custom property in the full application server profile is com.ibm.wsspi.security.web.failOverToBasicAuth.

displayAuthenticationRealm=Display the realm for HTTP basic auth
displayAuthenticationRealm.desc=Warning, security risk: if this property is set to true, and the user registry's realm name contains sensitive information, it is displayed to the user. For example, if an LDAP configuration is used, the LDAP server hostname and port are displayed. This configuration controls what the HTTP basic authentication login window displays when the realm name is not defined in the application web.xml. If the realm name is defined in the application web.xml file, this property is ignored. If set to true, the realm name displayed will be the user registry realm name for the LTPA authentication mechanism. If set to false, the realm name displayed will be "Default Realm". The equivalent custom property in the full application server profile is com.ibm.websphere.security.displayRealm.

httpOnlyCookies=Enable HTTP only cookies
httpOnlyCookies.desc=Specifies whether the HTTP only (HttpOnly) cookies option is enabled.

webAlwaysLogin=Allow login with authenticated identity
webAlwaysLogin.desc=Specifies whether the login() method will throw an exception when an identity has already been authenticated.

useAuthenticationDataForUnprotectedResource=Use authenticated identity for an unprotected URI
useAuthenticationDataForUnprotectedResource.desc=Specifies whether authentication data can be used when accessing an unprotected resource. The unprotected resource can access validated authenticated data that it previously could not access. This option enables the unprotected resource to call the getRemoteUser, isUserInRole, and getUserPrincipal methods to retrieve an authenticated identity. The equivalent custom property in the full application server profile is com.ibm.wsspi.security.web.webAuthReq=persisting.

loginFormURL=Login form URL 
loginFormURL.desc=Specifies the global URL of a form login page including the root context. The form login page must be part of the WAR file. If a form login application does not specify the form login page in the web.xml file, it uses the global form login URL. This is required when overrideHttpAuthMethod attribute is set to FORM.

loginErrorURL=Login error URL 
loginErrorURL.desc=Specifies the global URL of a form login error page that includes the root context. The form login error page must be part of a WAR file. An application uses the global login error URL if the application uses form login authentication and does not specify either the form login page or the login error page in the auth-method element of the web.xml file. This is required when overrideHttpAuthMethod attribute is set to FORM.

allowAuthenticationFailOverToAuthMethod=Failover method when certificate login fails
allowAuthenticationFailOverToAuthMethod.desc=Specifies the authentication fail over method that will be used when the certificate authentication fails or if the certificate is missing. Valid values are BASIC, FORM and APP_DEFINED. APP_DEFINED is only valid when overrideHttpAuthMethod attribute is set to CLIENT_CERT. When APP_DEFINED is set, the authentication method which is  configured in the application is used.

includePathInWASReqURL=Set the path parameter for the WASReqURL cookie
includePathInWASReqURL.desc=Setting the Path parameter can allow the client/browser to manage multiple WASReqURL cookies during multiple concurrent logins on the same user agent. The equivalent custom property in the full application server profile is com.ibm.websphere.security.setContextRootForFormLogin.

trackLoggedOutSSOCookies=Track logged out LTPA single signon tokens
trackLoggedOutSSOCookies.desc=Specifies whether to track LTPA single signon tokens that are logged out on a server so that it can not be reused on the same server.

overrideHttpAuthMethod=Name of authentication method to override
overrideHttpAuthMethod.desc=Specifies the authentication method to be used for all applications. This specified value overrides any application defined authentication method. The acceptable value is BASIC, FORM or CLIENT_CERT. When FORM is used, loginFormURL and loginErrorURL attributes are required to be set.

contextRootForFormAuthenticationMechanism=Context root for the Java EE 8 login form
contextRootForFormAuthenticationMechanism.desc=Specifies the context root of a form login page, which is specified by the loginFormURL property. If this value is not set, the first path element of the loginFormURL property is used as a context root. This value is applicable when overrideHttpAuthMethod is set to FORM, or if overrideHttpAuthMethodis is set to CLIENT_CERT and allowAuthenticationFailOverToAuthMethod is set to FORM.

basicAuthenticationMechanismRealmName=Realm name of the Java EE 8 basic authentication
basicAuthenticationMechanismRealmName.desc=Specifies a realm name for the Java EE 8 Security HTTP basic authentication. This value is applicable when overrideHttpAuthMethod is set to BASIC, or if overrideHttpAuthMethod is set to CLIENT_CERT and allowAuthenticationFailOverToAuthMethod is set to BASIC. The default value is defaultRealm.
