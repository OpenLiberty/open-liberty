###############################################################################
# Copyright (c) 2011, 2018 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#CMVCPATHNAME com.ibm.ws.webcontainer.security/resources/OSGI-INF/l10n/metatype.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE

#
webAppSecurityService.config=Sicherheit der Web-Container-Anwendungen
webAppSecurityService.config.desc=Konfiguriert die Sicherheit der Web-Container-Anwendungen.

requiredRole=Erforderliche Rolle
requiredRole.desc=Erforderliche Rolle f\u00fcr Berechtigungspr\u00fcfungen.

logoutOnHttpSessionExpire=Benutzer nach Ablauf des HTTP-Sitzungszeitgebers abmelden
logoutOnHttpSessionExpire.desc=Gibt an, ob Benutzer nach dem Ablauf des HTTP-Sitzungszeitgebers abgemeldet werden. Wenn diese Option nicht ausgew\u00e4hlt wird, bleibt der Benutzerberechtigungsnachweis aktiv, bis das SSO-Tokenzeitlimit (Single Sign-On Party Authentication) abl\u00e4uft. Die entsprechende angepasste Eigenschaft im vollst\u00e4ndigen Anwendungsserverprofil ist com.ibm.ws.security.web.logoutOnHTTPSessionExpire.

singleSignonEnabled=Single Sign-on aktivieren
singleSignonEnabled.desc=Gibt an, ob Single Sign-on (SSO) aktiviert wird.

ssoDomainNames=Dom\u00e4nennamen f\u00fcr SSO-Cookies
ssoDomainNames.desc=Eine durch Pipezeichen (|) getrennte Liste mit Dom\u00e4nennamen, die SSO-Cookies bereitgestellt werden m\u00fcssen. Die entsprechende angepasste Eigenschaft im vollst\u00e4ndigen Anwendungsserverprofil ist com.ibm.ws.security.config.SingleSignonConfig.

ssoUseDomainFromURL=Dom\u00e4nenname f\u00fcr den Anforderungs-URL verwenden
ssoUseDomainFromURL.desc=Gibt an, ob der Dom\u00e4nenname aus dem Anforderungs-URL f\u00fcr die Cookiedom\u00e4ne verwendet werden soll.

useLtpaSSOForJaspic=LTPA-Single-Sign-on f\u00fcr JASPIC aktivieren
useLtpaSSOForJaspic.desc=Aktiviert das Single Sign-on-Verhalten, wenn das LTPA-Token f\u00fcr eine JASPIC-Authentifizierung verwendet wird. Nachdem die urspr\u00fcngliche Authentifizierung vom JASPIC-Provider durchgef\u00fchrt wurde, wird das LTPA-Cookie erstellt und f\u00fcr nachfolgende Anmeldungen verwenden, um das Single-Sign-on-Verhalten zu erreichen. Der JASPIC-Provider wird erst aufgerufen, wenn das Token abgelaufen ist. Die JASPIC-Authentifizierung ist g\u00fcltig, wenn ein externer Provider verwendet wird, und wenn die Anwendung die Java EE-Sicherheits-API-Annotationen verwendet. Das Single-Sign-on-Verhalten kann auch erreicht werden, indem das JASPIC-Sitzungscookie aktiviert wird, oder die Anwendung eine RememberMeIdentityStore-Bean f\u00fcr eine JASPIC-Authentifizierung bereitstellt. In Fall setzen Sie das Attribut useLtpaSSOForJaspic auf false.

ssoRequiresSSL=SSO erfordert SSL
ssoRequiresSSL.desc=Gibt an, ob ein SSO-Cookie \u00fcber SSL gesendet wird. Die entsprechende Eigenschaft im vollst\u00e4ndigen Anwendungsserverprofil ist requiresSSL.

preserveFullyQualifiedReferrerUrl=Vollst\u00e4ndig qualifizierten Referrer-URL beibehalten
preserveFullyQualifiedReferrerUrl.desc=Warnung, Sicherheitsrisiko: Wenn Sie diese Einstellung ausw\u00e4hlen, setzen Sie Ihr System damit potenziellen Attacken mit URL-Umleitung aus. Diese Eigenschaft gibt an, ob der vollst\u00e4ndig qualifizierte Referrer-URL f\u00fcr Umleitungen formulargesteuerte Anmeldungen beibehalten wird. Wenn Sie diese Option nicht ausw\u00e4hlen, wird der Referrer-URL entfernt und die Anforderung an den lokalen Host umgeleitet. Die entsprechende angepasste Eigenschaft im vollst\u00e4ndigen Anwendungsserverprofil ist com.ibm.websphere.security.util.fullyQualifiedURL.

postParamSaveMethod=Speicherverhalten von POST-Parametern f\u00fcr Umleitungen
postParamSaveMethod.desc=Gibt an, ob POST-Parameter bei Umleitungen gespeichert werden. Die g\u00fcltigen Werte sind Cookie (POST-Parameter werden in einem Cookie gespeichert), Sitzung (POST-Parameter werden in der HTTP-Sitzung gespeichert) und Ohne (POST-Parameter werden nicht beibehalten). Die entsprechende angepasste Eigenschaft im vollst\u00e4ndigen Anwendungsserverprofil ist com.ibm.websphere.security.util.postParamSaveMethod.

postParamCookieSize=Cookiegr\u00f6\u00dfe f\u00fcr POST-Parameter
postParamCookieSize.desc=Gibt die Gr\u00f6\u00dfe des POST-Parametercookies an. Wenn die Cookiegr\u00f6\u00dfe den Browsergrenzwert \u00fcberschreitet, kann ein nicht erwartetes Verhalten auftreten. Der Wert dieser Eigenschaft muss eine positive ganze Zahl sein und stellt die maximale Gr\u00f6\u00dfe des Cookies in Bytes dar. Die entsprechende angepasste Eigenschaft im vollst\u00e4ndigen Anwendungsserverprofil ist com.ibm.websphere.security.util.postParamMaxCookieSize.

allowLogoutPageRedirectToAnyHost=Umleitung der Abmeldeseite an beliebigen Host zulassen
allowLogoutPageRedirectToAnyHost.desc=Warnung, Sicherheitsrisiko: Wenn Sie diese Eigenschaft ausw\u00e4hlen, setzen Sie Ihr System damit potenziellen Attacken mit URL-Umleitung aus. Wenn Sie diese Option ausw\u00e4hlen, kann jeder Host f\u00fcr die Umleitung der Anmeldeseite angegeben werden. Wenn Sie diese Option nicht ausw\u00e4hlen und die Abmeldeseite auf einen anderen Host oder auf einen Host verweist, der nicht in der Dom\u00e4nenliste f\u00fcr die Umleitung der Abmeldeseite aufgelistet ist, wird eine generische Abmeldeseite angezeigt. Die entsprechende angepasste Eigenschaft im vollst\u00e4ndigen Anwendungsserverprofil ist com.ibm.websphere.security.allowAnyLogoutExitPageHost.

wasReqURLRedirectDomainNames=F\u00fcr die Umleitung von WASReqURL-Seiten zul\u00e4ssige Dom\u00e4nennamen
wasReqURLRedirectDomainNames.desc=Eine durch Pipezeichen (|) getrennte Liste mit Dom\u00e4nennamen, die f\u00fcr die Umleitung von WASReqURL-Seiten zugelassen werden. Der in der Anforderung f\u00fcr formulargest\u00fctzte Anmeldung gefundene Hostname ist impliziert.

logoutPageRedirectDomainNames=Dom\u00e4nennamen f\u00fcr die Umleitung der Abmeldeseite
logoutPageRedirectDomainNames.desc=Eine durch Pipezeichen (|) getrennte Liste mit Dom\u00e4nennamen, die f\u00fcr die Umleitung der Abmeldeseite zugelassen werden (localhost ist impliziert). Die entsprechende angepasste Eigenschaft im vollst\u00e4ndigen Anwendungsserverprofil ist com.ibm.websphere.security.logoutExitPageDomainList.

ssoCookieName=Name des SSO-Cookies
ssoCookieName.desc=Passt den Namen des SSO-Cookies an. Ein angepasstes Cookie erm\u00f6glicht Ihnen, die Authentifizierung zwischen SSO-Dom\u00e4nen logisch zu trennen und eine angepasste Authentifizierung bei einer bestimmten Umgebung zuzulassen. Bevor Sie diesen Wert festlegen beachten Sie, dass die Festlegung eines angepassten Cookienamens zu einem Authentifizierungsfehler f\u00fchren kann. Eine Verbindung zu einem Server, in dem eine angepasste Cookieeigenschaft definiert ist, sendet dieses angepasste Cookie beispielsweise an den Browser. Eine nachfolgende Verbindung zu einem Server, der den Standardcookienamen oder einen anderen Cookienamen verwendet, kann die Anforderung nicht durch eine Validierung des eingehenden Cookies authentifizieren. Die entsprechende angepasste Eigenschaft im vollst\u00e4ndigen Anwendungsserverprofil ist com.ibm.websphere.security.customSSOCookieName.

useOnlyCustomCookieName=Nur den angepassten Cookienamen verwenden
useOnlyCustomCookieName.desc=Gibt an, ob nur der angepasste Cookiename verwendet werden soll.

allowFailOverToBasicAuth=Failover auf HTTP-Basisauthentifizierung zulassen
allowFailOverToBasicAuth.desc=Gibt an, ob auf die Basisauthentifizierung umgestellt werden soll, wenn die Zertifikatsauthentifizierung fehlschl\u00e4gt. Die entsprechende angepasste Eigenschaft im vollst\u00e4ndigen Anwendungsserverprofil ist com.ibm.wsspi.security.web.failOverToBasicAuth.

displayAuthenticationRealm=Realm f\u00fcr HTTP-Basisauthentifizierung anzeigen
displayAuthenticationRealm.desc=Warnung, Sicherheitsrisiko: Wenn diese Eigenschaft ausgew\u00e4hlt ist und der Realmname der Benutzerregistry sensible Daten enth\u00e4lt, werden die Informationen dem Benutzer angezeigt. Wird beispielsweise eine LDAP-Konfiguration verwendet, werden der Hostname und der Port des LDAP-Servers angezeigt. Diese Konfiguration steuert, was im Anmeldefenster f\u00fcr die HTTP-Basisauthentifizierung angezeigt wird, wenn der Realmname nicht in der Datei web.xml der Anwendung definiert ist. Wenn der Realmname in der Datei web.xml der Anwendung definiert ist, wird diese Eigenschaft ignoriert. Wenn Sie diese Option ausw\u00e4hlen, ist der angezeigte Realmname der Realmname der Benutzerregistry f\u00fcr den LTPA-Authentifizierungsmechanismus. Wenn Sie diese Option nicht ausw\u00e4hlen, wird "Standardrealm" angezeigt. Die entsprechende angepasste Eigenschaft im vollst\u00e4ndigen Anwendungsserverprofil ist com.ibm.websphere.security.displayRealm.

httpOnlyCookies=Nur HTTP-Cookies aktivieren
httpOnlyCookies.desc=Gibt an, ob die Option f\u00fcr die ausschlie\u00dfliche Verwendung von HTTP-Cookies (HttpOnly) aktiviert wird.

webAlwaysLogin=Anmeldung mit authentifizierter Identit\u00e4t zulassen
webAlwaysLogin.desc=Gibt an, ob die Methode login() eine Ausnahme ausl\u00f6st, wenn bereits eine ID authentifiziert wurde.

useAuthenticationDataForUnprotectedResource=Authentifizierte Identit\u00e4t f\u00fcr einen nicht gesch\u00fctzten URI verwenden
useAuthenticationDataForUnprotectedResource.desc=Gibt an, ob Authentifizierungsdaten beim Zugriff auf eine ungesch\u00fctzte Ressource verwendet werden k\u00f6nnen. Die ungesch\u00fctzte Ressource kann auf validierte authentifizierte Daten zugreifen, auf die sie zuvor nicht zugreifen konnte. Diese Option erm\u00f6glicht der ungesch\u00fctzten Ressource den Aufruf der Methoden getRemoteUser, isUserInRole und getUserPrincipal f\u00fcr den Abruf einer authentifizierten Identit\u00e4t. Die entsprechende angepasste Eigenschaft im vollst\u00e4ndigen Anwendungsserverprofil ist com.ibm.wsspi.security.web.webAuthReq=persisting.

loginFormURL=URL des Anmeldeformulars
loginFormURL.desc=Gibt die globale URL einer Anmeldeseite, einschlie\u00dflich des Stammkontextes, an. Die Anmeldeseite muss Teil der WAR-Datei sein. Wenn eine Anwendung mit formulargesteuerter Anmeldung keine Anmeldeseite in der Datei web.xml angibt, wird die globale URL f\u00fcr formulargesteuerte Anmeldung verwendet. Diese ist erforderlich, wenn das Attribut overrideHttpAuthMethod auf FORM gesetzt ist.

loginErrorURL=URL f\u00fcr Anmeldefehler
loginErrorURL.desc=Gibt die globale URL einer Anmeldefehlerseite an, die den Stammkontext enth\u00e4lt. Die Anmeldefehlerseite muss Teil einer WAR-Datei sein. Eine Anwendung verwendet die globale Anmeldefehler-URL, wenn die Anwendung die Anmeldeformularauthentifizierung verwendet und weder die Anmeldeformularseite noch die Anmeldefehlerseite im Element 'auth-method' der Datei web.xml angibt. Diese ist erforderlich, wenn das Attribut overrideHttpAuthMethod auf FORM gesetzt ist.

allowAuthenticationFailOverToAuthMethod=Failover-Methode beim Fehlschlagen der Anmeldung mit Zertifikat
allowAuthenticationFailOverToAuthMethod.desc=Gibt die Authentifizierungsmethode f\u00fcr das Failover an, die verwendet wird, wenn die Zertifikatsauthentifizierung fehlschl\u00e4gt oder das Zertifikat fehlt. Die g\u00fcltigen Werte sind BASIC, FORM und APP_DEFINED. APP_DEFINED ist nur g\u00fcltig, wenn das Attribut overrideHttpAuthMethod auf CLIENT_CERT gesetzt ist. Wenn APP_DEFINED definiert ist, wird die in der Anwendung konfigurierte Authentifizierungsmethode verwendet.

includePathInWASReqURL=Parameter Path f\u00fcr das WASReqURL-Cookie definieren
includePathInWASReqURL.desc=Wenn Sie den Parameter Path definieren, kann der Client/Browser bei mehreren gleichzeitigen Anmeldungen an demselben Benutzeragenten mehrere WASReqURL-Cookies verwalten. Die entsprechende angepasste Eigenschaft im vollst\u00e4ndigen Anwendungsserverprofil ist com.ibm.websphere.security.setContextRootForFormLogin.

trackLoggedOutSSOCookies=Abgemeldete LTPA-SSO-Token \u00fcberwachen
trackLoggedOutSSOCookies.desc=Gibt an, ob LTPA-SSO-Token, die auf einem Server abgemeldet werden, \u00fcberwacht werden sollen, sodass sie auf demselben Server nicht mehr wiederverwendet werden k\u00f6nnen.

overrideHttpAuthMethod=Name der Authentifizierungsmethode zum \u00dcberschreiben
overrideHttpAuthMethod.desc=Gibt die f\u00fcr alle Anwendungen zu verwendende Authentifizierungsmethode an. Der angegebene Wert \u00fcberschreibt alle anwendungsdefinierten Authentifizierungsmethoden. Die g\u00fcltigen Werte sind BASIC, FORM und CLIENT_CERT. Wenn FORM verwendet wird, m\u00fcssen die Attribute loginFormURL und loginErrorURL definiert werden.

contextRootForFormAuthenticationMechanism=Kontextstammverzeichnis f\u00fcr das Java EE 8-Anmeldeformular
contextRootForFormAuthenticationMechanism.desc=Gibt das Kontextstammverzeichnis einer Anmeldeformularseite an, die durch die Eigenschaft loginFormURL angegeben wird. Wenn dieser Wert nicht definiert ist, wird das erste Pfadelement der Eigenschaft loginFormURL als Kontextstammverzeichnis verwendet. Dieser Wert ist g\u00fcltig, wenn overrideHttpAuthMethod auf FORM gesetzt ist oder wenn overrideHttpAuthMethodis auf CLIENT_CERT und allowAuthenticationFailOverToAuthMethod auf FORM gesetzt ist.

basicAuthenticationMechanismRealmName=Realmname der Java EE 8-Basisauthentifizierung
basicAuthenticationMechanismRealmName.desc=Gibt einen Realmnamen f\u00fcr die Java EE 8-HTTP-Basisauthentifizierung an. Dieser Wert ist g\u00fcltig, wenn overrideHttpAuthMethod auf BASIC gesetzt ist oder wenn overrideHttpAuthMethod auf CLIENT_CERT und allowAuthenticationFailOverToAuthMethod auf BASIC gesetzt ist. Der Standardwert ist defaultRealm.
