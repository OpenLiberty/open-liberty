/*******************************************************************************
 * Copyright (c) 2021 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/

package test.libertyfat.caller.contract;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.6.2
 * 2015-09-28T08:30:59.102-05:00
 * Generated source version: 2.6.2
 * 
 */
@WebServiceClient(name = "SAMLCallerAsymSignService", 
                  wsdlLocation = "samlcallertoken.wsdl",
                  targetNamespace = "http://caller.libertyfat.test/contract") 
public class SAMLCallerAsymSignService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://caller.libertyfat.test/contract", "SAMLCallerAsymSignService");
    public final static QName SAMLCallerAsymSignPort = new QName("http://caller.libertyfat.test/contract", "SAMLCallerAsymSignPort");
    static {
        URL url = SAMLCallerAsymSignService.class.getResource("samlcallertoken.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(SAMLCallerAsymSignService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "samlcallertoken.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public SAMLCallerAsymSignService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SAMLCallerAsymSignService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SAMLCallerAsymSignService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    /**
     *
     * @return
     *     returns FVTVersionSamlC
     */
    @WebEndpoint(name = "SAMLCallerAsymSignPort")
    public FVTVersionSamlC getSAMLCallerAsymSignPort() {
        return super.getPort(SAMLCallerAsymSignPort, FVTVersionSamlC.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FVTVersionSamlC
     */
    @WebEndpoint(name = "SAMLCallerAsymSignPort")
    public FVTVersionSamlC getSAMLCallerAsymSignPort(WebServiceFeature... features) {
        return super.getPort(SAMLCallerAsymSignPort, FVTVersionSamlC.class, features);
    }

}
