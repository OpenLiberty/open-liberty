###############################################################################
# Copyright (c) 2019 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#CMVCPATHNAME com.ibm.ws.security/resources/com/ibm/ws/security/openidconnect/op/internal/resources/OidcServerMessages.nlsprops
#COMPONENTPREFIX CWWKS
#COMPONENTNAMEFOR WebSphere Application Server OpenID ConnectSecurity
#ISMESSAGEFILE TRUE
#NLS_MESSAGEFORMAT_VAR
#NLS_ENCODING=UNICODE
# -------------------------------------------------------------------------------------------------
# Message prefix block: CWWKS2200 - CWWKS2299

JWT_TOKEN_TOO_MANY_TOKENS_ERR=CWWKS2202E: The token endpoint request failed because more than one JWT Token was found.
JWT_TOKEN_TOO_MANY_TOKENS_ERR.explanation=The token endpoint request has more than one JWT Token. It is not allowed.
JWT_TOKEN_TOO_MANY_TOKENS_ERR.useraction=Make sure only one JWT Token is in the token endpoint request.

JWT_TOKEN_NO_TOKEN_EXTERNAL_ERR=CWWKS2203E: The token endpoint request failed because there was no JWT Token found.
JWT_TOKEN_NO_TOKEN_EXTERNAL_ERR.explanation=The token endpoint request does not have a JWT Token. It can not be processed.
JWT_TOKEN_NO_TOKEN_EXTERNAL_ERR.useraction=Make sure that the token endpoint request has a JWT Token.

JWT_UNEXPECTED_EXCEPTION_ERR=CWWKS2204E: During processing of the token endpoint request, the OpenID Connect Provider gets an unexpected Exception ({0}).
JWT_UNEXPECTED_EXCEPTION_ERR.explanation=The OpenID Connect Provider gets an unexpected Exception.
JWT_UNEXPECTED_EXCEPTION_ERR.useraction=Please contact IBM.

JWT_TOKEN_BAD_NUMBER_ERR=CWWKS2205E: The token endpoint request failed. The ''{0}'' claim [{1}] in the JWT Token is not in the right format. It should be in UTC time and must be an integer.
JWT_TOKEN_BAD_NUMBER_ERR.explanation=The JWT claim is not in the expected UTC time integer format.
JWT_TOKEN_BAD_NUMBER_ERR.useraction=Make sure the claim in the JWT token is in the correct format. The UTC time must be in numeric format.

JWT_TOKEN_BAD_SUB_EXTERNAL_ERR=CWWKS2206E: The token endpoint request failed because the JWT Token can not be verified. During verification of the ''sub'' claim: [{0}], an unexpected exception occurred.
JWT_TOKEN_BAD_SUB_EXTERNAL_ERR.explanation=The token endpoint request failed. Can not verify the 'sub' claim of the JWT Token. An unexpected exception happened during verification.
JWT_TOKEN_BAD_SUB_EXTERNAL_ERR.useraction=Make sure the 'sub' claim in the JWT Token is a valid user of the OpenID Connect Provider.

JWT_TOKEN_BAD_AUD_ERR=CWWKS2207E: The token endpoint request failed. The JWT Token is not valid because this OpenID Connect Provider is not included in its 'aud' claim (audience).
JWT_TOKEN_BAD_AUD_ERR.explanation=The OpenID Connect Provider has to be in the audience list of the JWT Token. The ID of the OpenID Connect Provider is issuerIdentifier in the configuration, or its Token Endpoint URL.  
JWT_TOKEN_BAD_AUD_ERR.useraction=Make sure the 'aud' claim in the JWT token includes the targeted OpenID Connect Provider. Please check the issuerIdentifier in the OpenID Connect Provider configuration, or its Token Endpoint URL. 

JWT_TOKEN_MISS_REQUIRED_CLAIM_ERR=CWWKS2208E: The token endpoint request failed because the JWT Token can not be verified. The JWT Token is missing the required ''{0}'' claim.
JWT_TOKEN_MISS_REQUIRED_CLAIM_ERR.explanation=Can not process the token endpoint request because the JWT Token is missing a required claim.
JWT_TOKEN_MISS_REQUIRED_CLAIM_ERR.useraction=Add the required claim into the JWT token.

JWT_TOKEN_ISS_MISMATCH_ERR=CWWKS2209E: The token endpoint request failed. The JWT Token is not valid because its ''iss'' claim [{0}] does not match the client redirect URI or clientId specified in the configuration of the OpenID Connect Provider. 
JWT_TOKEN_ISS_MISMATCH_ERR.explanation=The issuer claim in the JWT Token must match either the client redirect URI or the clientId which is registered in the OpenID Connect Provider.
JWT_TOKEN_ISS_MISMATCH_ERR.useraction=Make sure the issuer claim is the client redirect URI or the clientId.  Please check the clientId or redirect URI in the OpenID Connect Provider configuration. 

JWT_TOKEN_SUB_NOT_FOUND_ERR=CWWKS2210E: The token endpoint request failed. The JWT token is not valid because its ''sub'' claim [{0}] is not found in the OpenID Connect Provider user registry.
JWT_TOKEN_SUB_NOT_FOUND_ERR.explanation=The JWT Token is not valid because its subject claim is not found in the OpenID Connect Provider user registry.
JWT_TOKEN_SUB_NOT_FOUND_ERR.useraction=Make sure the subject claim in the JWT Token is a user in the OpenID Connect Provider user registry.

JWT_TOKEN_EXPIRED_ERR=CWWKS2211E: The token endpoint request failed because the JWT Token expired. The expiration time(''exp'') in the claim is [{0}].
JWT_TOKEN_EXPIRED_ERR.explanation=The JWT Token expired. Its expiration time is indicated in the error message.
JWT_TOKEN_EXPIRED_ERR.useraction=Make sure the JWT Token has not expired, synchronize the time between the systems, or increase the expiration time.

JWT_TOKEN_FUTURE_TOKEN_ERR=CWWKS2212E: The token endpoint request failed because the JWT Token is not valid. Its ''iat'' claim is [{0}]. The issued-at-time (''iat'') is in the future.
JWT_TOKEN_FUTURE_TOKEN_ERR.explanation=The issued-at-time in the JWT Token is after the current time. It is not valid at the time of processing.
JWT_TOKEN_FUTURE_TOKEN_ERR.useraction=Synchronize the time between the systems, and make sure the 'iat' time is valid or submit the JWT Token at a later time.

# do not translate tokenMaxLifetime
JWT_TOKEN_MAX_LIFETIME_ERR=CWWKS2214E: The token endpoint request failed. The JWT Token is not valid because its ''iss'' claim(issue-at-time):[{0}] exceeds the maximum JWT Token lifetime allowed, which is defined as tokenMaxLifetime in the configuration: [{1}] seconds.
JWT_TOKEN_MAX_LIFETIME_ERR.explanation=The JWT Token issued exceeds the maximum JWT Token Lifetime (tokenMaxLifetime value) which is defined in the OpenID Connect Provider configuration.
JWT_TOKEN_MAX_LIFETIME_ERR.useraction=Make sure the JWT Token is issued within the maximum JWT Token Lifetime or increase the tokenMaxLifetime value in the configuration of the server.

JWT_TOKEN_IAT_NEEDED_ERR=CWWKS2215E: The token endpoint request failed. The JWT Token needs to provide the 'iat' claim because 'iatRequired' is set to true in the configuration of the OpenID Connect Provider.
JWT_TOKEN_IAT_NEEDED_ERR.explanation=The OpenID Connect Provider has set the 'iatRequired' to true. In this case, the 'iat' claim in the JWT Token is required. The missing 'iat' claim results in a failure.
JWT_TOKEN_IAT_NEEDED_ERR.useraction=Either provide an 'iat' claim in the JWT token or set 'iatRequired' to false in the OpenID Connect Provider.

JWT_TOKEN_BEFORE_ERR=CWWKS2216E: The token endpoint request failed because the JWT Token was requested prior to its ''nbf'' claim:[{0}].
JWT_TOKEN_BEFORE_ERR.explanation=The JWT Token has a not-before claim, but the request time is before the nbf time(not-before-time). 
JWT_TOKEN_BEFORE_ERR.useraction=Make sure a JWT Token is submitted after its not-before-time ('nbf') claim.

JWT_TOKEN_DUP_JTI_ERR=CWWKS2217E: The token endpoint request failed. Another JWT Token with the same ''iss'':[{0}] and ''jti'':[{1}] has already been submitted.
JWT_TOKEN_DUP_JTI_ERR.explanation=A JWT Token, which is issued by the same issuer, can not be submitted twice. The jti value is the unique ID of a Token.
JWT_TOKEN_DUP_JTI_ERR.useraction=Make sure each JWT token that is issued by the same issuer, has a unique jti ID.

#
# Message prefix block: CWWKS2251 - CWWKS2299
JWT_TOKEN_MISSING_REQUIRED_CLAIM_ERR=CWWKS2251E: The token endpoint request failed. The JWT token in the request is missing a required claim ''{0}''.
JWT_TOKEN_MISSING_REQUIRED_CLAIM_ERR.explanation=The JWT token does not contain all of the required claims.
JWT_TOKEN_MISSING_REQUIRED_CLAIM_ERR.useraction=Supply the required claims in the JWT token. 

JWT_TOKEN_NO_TOKEN_ERR=CWWKS2257E: The token endpoint request failed. The request is not valid because it is missing the required JWT Token.
JWT_TOKEN_NO_TOKEN_ERR.explanation=The request is not valid because it is missing the required JWT Token.
JWT_TOKEN_NO_TOKEN_ERR.useraction=Make sure the request contains one JWT token.

JWT_TOKEN_UNEXPECTED_EXCEPTION=CWWKS2258E: The token endpoint request failed. The method [{0}] gets an unexpected exception [{1}].
JWT_TOKEN_UNEXPECTED_EXCEPTION.explanation=The server gets an exception which was not expected.
JWT_TOKEN_UNEXPECTED_EXCEPTION.useraction=Make sure the configuration in the server.xml file is correct. If this happens consistently, please contact IBM.

JWT_TOKEN_TOKEN_BEFORE_NBF_ERR=CWWKS2260E: The token endpoint request failed because the JWT Token was requested prior to its ''nbf'' claim. Current time plus clock skew in the OpenID Connect Provider is [{0}]. The ''nbf'' time is [{1}].
JWT_TOKEN_TOKEN_BEFORE_NBF_ERR.explanation=The JWT token is not valid. It is presented prior to its 'nbf' claim (not-before-time). 
JWT_TOKEN_TOKEN_BEFORE_NBF_ERR.useraction=Make sure the JWT Token in the request is after the not-before-time ('nbf') time. Synchronize the time between the OpenID Connect Client and Provider, or increase the clock skew in the OpenID Connect Provider configuration.

JWT_TOKEN_IAT_FUTURE_ERR=CWWKS2262E: The token endpoint request failed. The JWT token ''iat'' claim time is in the future: [{0}]. The current time plus the clock skew: [{1}]. 
JWT_TOKEN_IAT_FUTURE_ERR.explanation=The 'iat' claim in the JWT token indicates the token is issued in the future. It is not valid at the current time in the OpenID Connect Provider.
JWT_TOKEN_IAT_FUTURE_ERR.useraction=Make sure the time between the OpenID Connect Client and Provider are synchronized, and do not submit a JWT Token whose 'iat' is in the future. 

JWT_TOKEN_EXPIRE_ERR=CWWKS2263E: The token endpoint request failed. The JWT token time passed its ''exp'' claim: [{0}]. The current time plus the clock skew in the OpenID Connect Provider is [{1}].
JWT_TOKEN_EXPIRE_ERR.explanation=The JWT token 'exp' time has passed the current time plus the clock skew. It is not valid. 
JWT_TOKEN_EXPIRE_ERR.useraction=Make sure the JWT Token does not expire, or synchronize the time between the OpenID Connect Client and Provider. 

JWT_TOKEN_INVALID_ISS_ERR=CWWKS2265E: The token endpoint request failed. The JWT Token issuer [{0}] does not match clientId [{2}] or any redirect uri such as: [{1}]. 
JWT_TOKEN_INVALID_ISS_ERR.explanation=The 'iss' claim in the JWT token must be either the client ID or any client redirect uri.
JWT_TOKEN_INVALID_ISS_ERR.useraction=Make sure the 'iss' claim in the JWT Token is the client ID or any client redirect uri.

JWT_TOKEN_INVALID_AUD_ERR=CWWKS2266E: The token endpoint request failed. The audience claim [{0}] does not match the issuer identifier of the OpenID Connect Provider [{1}] or the token endpoint [{2}].
JWT_TOKEN_INVALID_AUD_ERR.explanation=The 'aud' claim in the JWT token has to be either the issuer identifier or the token endpoint of the OpenID Connect Provider.
JWT_TOKEN_INVALID_AUD_ERR.useraction=Make sure the 'aud' claim in the JWT Token is either the issuer identifier or the token endpoint of the OpenID Connect Provider.

JWT_TOKEN_INVALID_AUD_IDENTIFIER_ERR=CWWKS2267E: The token endpoint request failed. The audience claim is [{0}] which does not match the issuer identifier of the provider [{1}], which is defined as the issuerIdentifier of the openidConnectProvider in the configuration.
JWT_TOKEN_INVALID_AUD_IDENTIFIER_ERR.explanation=The 'aud' claim in the JWT token has to be the issuer identifier which is explicitly specified in the configuration.
JWT_TOKEN_INVALID_AUD_IDENTIFIER_ERR.useraction=Make sure the 'aud' claim in the JWT Token matches the issuer identifier defined in the configuration.

JWT_TOKEN_REGISTRY_EXCEPTION_ERR=CWWKS2268E: The token endpoint request failed. During verification of the sub claim  [{0}], it gets an unexpected Registry Exception [{1}]
JWT_TOKEN_REGISTRY_EXCEPTION_ERR.explanation=During verification of the 'sub' claim in the User Registry of the OpenID Connect Provider. An unexpected Exception occurs.
JWT_TOKEN_REGISTRY_EXCEPTION_ERR.useraction=Make sure the User Registry in the OpenID Connect Provider is functioning properly and the sub(user) is a valid user in the Registry.

JWT_TOKEN_NO_PUBLIC_KEY_DETAIL_ERR=CWWKS2269E: The token endpoint request failed. Can not get a trust store to verify the JWT Token due to an Exception [{0}]. The configuration values in jwtGrantType are signatureAlgorithm: [{1}] trustStoreRef: [{2}] and the Alias Name is: [{3}]
JWT_TOKEN_NO_PUBLIC_KEY_DETAIL_ERR.explanation=The indicated signature algorithm for the JWT Token needs a public key to verify the incoming JWT Token but failed to get one.  
JWT_TOKEN_NO_PUBLIC_KEY_DETAIL_ERR.useraction=Make sure the configuration of the jwtGrantType and keyStore are set up properly, and also make sure the trustStore location and password are correct. 

JWT_TOKEN_NO_PUBLIC_KEY_ERR=CWWKS2270E: The token endpoint request failed. Can not get a trust store to verify the JWT Token. The signature algorithm for verification in the OpenID Connect provider is [{0}]. 
JWT_TOKEN_NO_PUBLIC_KEY_ERR.explanation=The OpenID Connect Provider can not get a trust store to verify the JWT token.  The configuration of the openidConnectProvider needs to be set up properly. 
JWT_TOKEN_NO_PUBLIC_KEY_ERR.useraction=Make sure the configuration of the jwtGrantType and the trustStoreRef in the openidConnectProvider are set up properly, and also make sure the trustStore location and password are correct.

JWT_UNEXPECTED_ERR=CWWKS2271E: During processing of the token endpoint request, the OpenID Connect Provider failed to process because of [{0}].
JWT_UNEXPECTED_ERR.explanation=The OpenID Connect Provider gets an unexpected error.
JWT_UNEXPECTED_ERR.useraction=Make sure the configuration is set up properly. If the problem consists, please contact IBM.

JWT_TOKEN_OAUTH_RS256_NOT_SUPPORTED_ERR=CWWKS2272E: The OAuth token endpoint request failed. The JWT Token is signed with RS256. It is only supported with the OpenID Connect token endpoint.
JWT_TOKEN_OAUTH_RS256_NOT_SUPPORTED_ERR.explanation=The JWT Token signed with the RS256 signature algorithm is not supported in the OAuth token endpoint. 
JWT_TOKEN_OAUTH_RS256_NOT_SUPPORTED_ERR.useraction=To use the JWT Token with the RS256 signature algorithm, please set up a proper openidConnectProvider configuration and also send the request through the OpenID Connect token endpoint.
