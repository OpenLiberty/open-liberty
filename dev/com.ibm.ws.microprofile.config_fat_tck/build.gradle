/*******************************************************************************
 * Copyright (c) 2017 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
apply from: '../cnf/gradle/scripts/fat.gradle'
	
// Example of pulling down binary dependencies from Artifactory
addRequiredLibraries {
  doLast {
    // Define dependency groups
    configurations {
      derby
      configTck
    }
    
    // Define G:A:V coordinates of each dependency
    dependencies {
      derby 'org.apache.derby:derbynet:10.11.1.1'
      configTck 'org.hamcrest:hamcrest-all:1.3'
    }
    // Copy the dependencies wherever they may be needed
    copy {
      // Adding jars to "autoFVT/lib/" will include them in a FAT bucket classpath at runtime
      from configurations.derby
      into "${buildDir}/autoFVT/lib/"
    }
    // Copy jars needed by the tckRunner e.g. hamcrest
    copy {
      from configurations.configTck
      into "${buildDir}/autoFVT/publish/tckRunner/lib"
    }
    
    def projectVersion = (isRelease ? bnd.buildID : "1.0.${qualifier}-SNAPSHOT")
    if (releaseVersionOverride != null) {
      projectVersion = releaseVersionOverride
    }
    project.version = bnd('Bundle-Version', projectVersion)
    
    
    // Create a fat.bnd.properties file that contains metadata about the FAT
    def props = new Properties()
    File propsFile = new File("${buildDir}/autoFVT/publish/tckRunner/jarNaming.properties")
    props.setProperty("Freddy", "Mercury" )
    props.setProperty("qualifier", "${qualifier}")
    props.setProperty("ver", project.version )
    props.setProperty("ver2", projectVersion )
    props.setProperty("ver3", bnd.buildID )

   
    def writer = new FileWriter(propsFile)
    try {
      props.store(writer, null)
    } finally {
      writer.close()
    }
  }
}
