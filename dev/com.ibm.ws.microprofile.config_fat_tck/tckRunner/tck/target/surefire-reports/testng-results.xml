<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="53" failed="0" total="53" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="microprofile-config-TCK" duration-ms="43" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
    <groups>
    </groups>
    <test name="microprofile-config 1.0 TCK" duration-ms="43" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
      <class name="org.eclipse.microprofile.config.tck.CDIPlainInjectionTest">
        <test-method status="SKIP" signature="arquillianBeforeClass()[pri:0, instance:org.eclipse.microprofile.config.tck.CDIPlainInjectionTest@87f383f]" name="arquillianBeforeClass" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeClass -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.CDIPlainInjectionTest@87f383f]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.CDIPlainInjectionTest.can_inject_default_property_path()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="can_inject_simple_values_when_defined()[pri:0, instance:org.eclipse.microprofile.config.tck.CDIPlainInjectionTest@87f383f]" name="can_inject_simple_values_when_defined" duration-ms="1" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- can_inject_simple_values_when_defined -->
        <test-method status="SKIP" signature="can_inject_default_property_path()[pri:0, instance:org.eclipse.microprofile.config.tck.CDIPlainInjectionTest@87f383f]" name="can_inject_default_property_path" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- can_inject_default_property_path -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.CDIPlainInjectionTest@87f383f]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.CDIPlainInjectionTest@87f383f]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.CDIPlainInjectionTest.can_inject_dynamic_values_via_CDI_provider()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.CDIPlainInjectionTest@87f383f]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.CDIPlainInjectionTest@87f383f]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="can_inject_dynamic_values_via_CDI_provider()[pri:0, instance:org.eclipse.microprofile.config.tck.CDIPlainInjectionTest@87f383f]" name="can_inject_dynamic_values_via_CDI_provider" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- can_inject_dynamic_values_via_CDI_provider -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.CDIPlainInjectionTest@87f383f]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.CDIPlainInjectionTest.can_inject_simple_values_when_defined()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterClass()[pri:0, instance:org.eclipse.microprofile.config.tck.CDIPlainInjectionTest@87f383f]" name="arquillianAfterClass" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterClass -->
      </class> <!-- org.eclipse.microprofile.config.tck.CDIPlainInjectionTest -->
      <class name="org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest">
        <test-method status="SKIP" signature="testAutoDiscoveredConverterManuallyAdded()[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@eafc191]" name="testAutoDiscoveredConverterManuallyAdded" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAutoDiscoveredConverterManuallyAdded -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@eafc191]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest.testAutoDiscoveredConverterManuallyAdded()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@eafc191]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest.testAutoDiscoveredConfigureSources()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeClass()[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@eafc191]" name="arquillianBeforeClass" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeClass -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@eafc191]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@eafc191]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testAutoDiscoveredConfigureSources()[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@eafc191]" name="testAutoDiscoveredConfigureSources" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAutoDiscoveredConfigureSources -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@eafc191]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testAutoDiscoveredConverterNotAddedAutomatically()[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@eafc191]" name="testAutoDiscoveredConverterNotAddedAutomatically" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAutoDiscoveredConverterNotAddedAutomatically -->
        <test-method status="PASS" signature="arquillianAfterClass()[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@eafc191]" name="arquillianAfterClass" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterClass -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@eafc191]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest.testAutoDiscoveredConverterNotAddedAutomatically()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
      </class> <!-- org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest -->
      <class name="org.eclipse.microprofile.config.tck.CustomConfigSourceTest">
        <test-method status="SKIP" signature="arquillianBeforeClass()[pri:0, instance:org.eclipse.microprofile.config.tck.CustomConfigSourceTest@1060b431]" name="arquillianBeforeClass" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeClass -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.CustomConfigSourceTest@1060b431]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testConfigSourceProvider()[pri:0, instance:org.eclipse.microprofile.config.tck.CustomConfigSourceTest@1060b431]" name="testConfigSourceProvider" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfigSourceProvider -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.CustomConfigSourceTest@1060b431]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.CustomConfigSourceTest.testConfigSourceProvider()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterClass()[pri:0, instance:org.eclipse.microprofile.config.tck.CustomConfigSourceTest@1060b431]" name="arquillianAfterClass" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterClass -->
      </class> <!-- org.eclipse.microprofile.config.tck.CustomConfigSourceTest -->
      <class name="org.eclipse.microprofile.config.tck.ConfigProviderTest">
        <test-method status="SKIP" signature="testDynamicValueInPropertyConfigSource()[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="testDynamicValueInPropertyConfigSource" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDynamicValueInPropertyConfigSource -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConfigProviderTest.testEnvironmentConfigSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeClass()[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianBeforeClass" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeClass -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConfigProviderTest.testDynamicValueInPropertyConfigSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testEnvironmentConfigSource()[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="testEnvironmentConfigSource" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnvironmentConfigSource -->
        <test-method status="SKIP" signature="testGetConfigSources()[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="testGetConfigSources" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConfigSources -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConfigProviderTest.testGetConfigSources()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="testGetPropertyNames()[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="testGetPropertyNames" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPropertyNames -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConfigProviderTest.testGetPropertyNames()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="testInjectedConfigSerializable()[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="testInjectedConfigSerializable" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInjectedConfigSerializable -->
        <test-method status="SKIP" signature="testJavaConfigPropertyFilesConfigSource()[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="testJavaConfigPropertyFilesConfigSource" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJavaConfigPropertyFilesConfigSource -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConfigProviderTest.testJavaConfigPropertyFilesConfigSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConfigProviderTest.testInjectedConfigSerializable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testNonExistingConfigKey()[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="testNonExistingConfigKey" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonExistingConfigKey -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testNonExistingConfigKeyGet()[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="testNonExistingConfigKeyGet" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonExistingConfigKeyGet -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConfigProviderTest.testNonExistingConfigKeyGet()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConfigProviderTest.testNonExistingConfigKey()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConfigProviderTest.testPropertyConfigSource()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterClass()[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianAfterClass" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterClass -->
        <test-method status="SKIP" signature="testPropertyConfigSource()[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="testPropertyConfigSource" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPropertyConfigSource -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConfigProviderTest@4d3167f4]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
      </class> <!-- org.eclipse.microprofile.config.tck.ConfigProviderTest -->
      <class name="org.eclipse.microprofile.config.tck.broken.MissingValueOnInstanceInjectionTest">
        <test-method status="SKIP" signature="arquillianBeforeClass()[pri:0, instance:org.eclipse.microprofile.config.tck.broken.MissingValueOnInstanceInjectionTest@ed9d034]" name="arquillianBeforeClass" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeClass -->
        <test-method status="SKIP" signature="test()[pri:0, instance:org.eclipse.microprofile.config.tck.broken.MissingValueOnInstanceInjectionTest@ed9d034]" name="test" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.broken.MissingValueOnInstanceInjectionTest@ed9d034]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.broken.MissingValueOnInstanceInjectionTest@ed9d034]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.broken.MissingValueOnInstanceInjectionTest.test()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterClass()[pri:0, instance:org.eclipse.microprofile.config.tck.broken.MissingValueOnInstanceInjectionTest@ed9d034]" name="arquillianAfterClass" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterClass -->
      </class> <!-- org.eclipse.microprofile.config.tck.broken.MissingValueOnInstanceInjectionTest -->
      <class name="org.eclipse.microprofile.config.tck.broken.WrongConverterOnInstanceInjectionTest">
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.broken.WrongConverterOnInstanceInjectionTest@612fc6eb]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="test()[pri:0, instance:org.eclipse.microprofile.config.tck.broken.WrongConverterOnInstanceInjectionTest@612fc6eb]" name="test" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="arquillianAfterClass()[pri:0, instance:org.eclipse.microprofile.config.tck.broken.WrongConverterOnInstanceInjectionTest@612fc6eb]" name="arquillianAfterClass" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterClass -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.broken.WrongConverterOnInstanceInjectionTest@612fc6eb]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.broken.WrongConverterOnInstanceInjectionTest.test()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeClass()[pri:0, instance:org.eclipse.microprofile.config.tck.broken.WrongConverterOnInstanceInjectionTest@612fc6eb]" name="arquillianBeforeClass" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeClass -->
      </class> <!-- org.eclipse.microprofile.config.tck.broken.WrongConverterOnInstanceInjectionTest -->
      <class name="org.eclipse.microprofile.config.tck.broken.MissingConverterOnInstanceInjectionTest">
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.broken.MissingConverterOnInstanceInjectionTest@6121c9d6]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.broken.MissingConverterOnInstanceInjectionTest.test()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterClass()[pri:0, instance:org.eclipse.microprofile.config.tck.broken.MissingConverterOnInstanceInjectionTest@6121c9d6]" name="arquillianAfterClass" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterClass -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.broken.MissingConverterOnInstanceInjectionTest@6121c9d6]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="test()[pri:0, instance:org.eclipse.microprofile.config.tck.broken.MissingConverterOnInstanceInjectionTest@6121c9d6]" name="test" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="SKIP" signature="arquillianBeforeClass()[pri:0, instance:org.eclipse.microprofile.config.tck.broken.MissingConverterOnInstanceInjectionTest@6121c9d6]" name="arquillianBeforeClass" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeClass -->
      </class> <!-- org.eclipse.microprofile.config.tck.broken.MissingConverterOnInstanceInjectionTest -->
      <class name="org.eclipse.microprofile.config.tck.ConverterTest">
        <test-method status="SKIP" signature="testCustomConverter()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testCustomConverter" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCustomConverter -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testBoolean()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testBoolean" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoolean -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testBoolean()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeClass()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeClass" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeClass -->
        <test-method status="SKIP" signature="testDouble_Broken()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testDouble_Broken" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDouble_Broken -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testDouble()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testDouble" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDouble -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testCustomConverter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testDouble()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testDouble_Broken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testDuration_Broken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testDuration()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testDuration" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDuration -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testDuration()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testDuration_Broken()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testDuration_Broken" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDuration_Broken -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testFloat()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testFloat_Broken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="testFloat_Broken()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testFloat_Broken" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFloat_Broken -->
        <test-method status="SKIP" signature="testFloat()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testFloat" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFloat -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testInstant()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testInstant" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInstant -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="2" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testInstant_Broken()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testInstant_Broken" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInstant_Broken -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testInstant_Broken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testInstant()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="testInt()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testInt" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInt -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testInt()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="testInteger()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testInteger" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInteger -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testInteger_Broken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testInteger()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="testInteger_Broken()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testInteger_Broken" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInteger_Broken -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testLocalDateTime()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testLocalDateTime" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLocalDateTime -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testLocalDateTime()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testLocalDate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="testLocalDate()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testLocalDate" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLocalDate -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testLocalDate_Broken()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testLocalDate_Broken" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLocalDate_Broken -->
        <test-method status="SKIP" signature="testLocalDateTime_Broken()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testLocalDateTime_Broken" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLocalDateTime_Broken -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testLocalDateTime_Broken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testLocalTime_Broken()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testLocalTime_Broken" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLocalTime_Broken -->
        <test-method status="SKIP" signature="testLocalTime()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testLocalTime" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLocalTime -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testLocalTime()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testLocalDate_Broken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testLocalTime_Broken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testLong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testLong_Broken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="testOffsetDateTime()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testOffsetDateTime" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOffsetDateTime -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testLong_Broken()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testLong_Broken" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLong_Broken -->
        <test-method status="SKIP" signature="testLong()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testLong" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLong -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testOffsetDateTime()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testOffsetTime()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testOffsetTime" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOffsetTime -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testOffsetTime()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="testOffsetDateTime_Broken()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testOffsetDateTime_Broken" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOffsetDateTime_Broken -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testOffsetDateTime_Broken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testURLConverterBroken()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testURLConverterBroken" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testURLConverterBroken -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testURLConverter() throws java.net.MalformedURLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="testURLConverter()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testURLConverter" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testURLConverter -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testOffsetTime_Broken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="testOffsetTime_Broken()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testOffsetTime_Broken" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOffsetTime_Broken -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testfloat()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testURLConverterBroken() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="testdouble()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testdouble" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testdouble -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testfloat()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testfloat" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testfloat -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testdouble()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterClass()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterClass" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterClass -->
        <test-method status="SKIP" signature="testlong()[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="testlong" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testlong -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.ConverterTest@76a3e297]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.ConverterTest.testlong()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
      </class> <!-- org.eclipse.microprofile.config.tck.ConverterTest -->
      <class name="org.eclipse.microprofile.config.tck.EmptyValuesTest">
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.EmptyValuesTest@4eb7f003]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="arquillianBeforeClass()[pri:0, instance:org.eclipse.microprofile.config.tck.EmptyValuesTest@4eb7f003]" name="arquillianBeforeClass" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeClass -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.EmptyValuesTest@4eb7f003]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.EmptyValuesTest.testEmptyStringProgrammaticLookup()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.EmptyValuesTest@4eb7f003]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.EmptyValuesTest.testEmptyStringPropertyFromConfigFile()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.EmptyValuesTest@4eb7f003]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.EmptyValuesTest.testEmptyStringValues()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="testEmptyStringProgrammaticLookup()[pri:0, instance:org.eclipse.microprofile.config.tck.EmptyValuesTest@4eb7f003]" name="testEmptyStringProgrammaticLookup" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyStringProgrammaticLookup -->
        <test-method status="SKIP" signature="testEmptyStringPropertyFromConfigFile()[pri:0, instance:org.eclipse.microprofile.config.tck.EmptyValuesTest@4eb7f003]" name="testEmptyStringPropertyFromConfigFile" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyStringPropertyFromConfigFile -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.EmptyValuesTest@4eb7f003]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testEmptyStringValues()[pri:0, instance:org.eclipse.microprofile.config.tck.EmptyValuesTest@4eb7f003]" name="testEmptyStringValues" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyStringValues -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.EmptyValuesTest@4eb7f003]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterClass()[pri:0, instance:org.eclipse.microprofile.config.tck.EmptyValuesTest@4eb7f003]" name="arquillianAfterClass" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterClass -->
      </class> <!-- org.eclipse.microprofile.config.tck.EmptyValuesTest -->
      <class name="org.eclipse.microprofile.config.tck.CdiOptionalInjectionTest">
        <test-method status="FAIL" signature="arquillianBeforeSuite()[pri:0, instance:org.eclipse.microprofile.config.tck.CdiOptionalInjectionTest@3aeaafa6]" name="arquillianBeforeSuite" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <exception class="org.jboss.arquillian.container.spi.ConfigurationException">
            <message>
              <![CDATA[wlpHome is required for initialization]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.arquillian.container.spi.ConfigurationException: wlpHome is required for initialization
	at org.jboss.arquillian.container.was.wlp_managed_8_5.WLPManagedContainerConfiguration.validate(WLPManagedContainerConfiguration.java:65)
	at org.jboss.arquillian.container.impl.ContainerImpl.createDeployableConfiguration(ContainerImpl.java:115)
	at org.jboss.arquillian.container.impl.ContainerImpl.setup(ContainerImpl.java:181)
	at org.jboss.arquillian.container.impl.client.container.ContainerLifecycleController$7.perform(ContainerLifecycleController.java:149)
	at org.jboss.arquillian.container.impl.client.container.ContainerLifecycleController$7.perform(ContainerLifecycleController.java:145)
	at org.jboss.arquillian.container.impl.client.container.ContainerLifecycleController.forContainer(ContainerLifecycleController.java:255)
	at org.jboss.arquillian.container.impl.client.container.ContainerLifecycleController.setupContainer(ContainerLifecycleController.java:144)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:96)
	at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:99)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:81)
	at org.jboss.arquillian.container.impl.client.ContainerDeploymentContextHandler.createContainerContext(ContainerDeploymentContextHandler.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:96)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:145)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:116)
	at org.jboss.arquillian.core.impl.EventImpl.fire(EventImpl.java:67)
	at org.jboss.arquillian.container.impl.client.container.ContainerLifecycleController$1.perform(ContainerLifecycleController.java:62)
	at org.jboss.arquillian.container.impl.client.container.ContainerLifecycleController$1.perform(ContainerLifecycleController.java:55)
	at org.jboss.arquillian.container.impl.client.container.ContainerLifecycleController.forEachContainer(ContainerLifecycleController.java:209)
	at org.jboss.arquillian.container.impl.client.container.ContainerLifecycleController.setupContainers(ContainerLifecycleController.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:96)
	at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:99)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:81)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:145)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:116)
	at org.jboss.arquillian.core.impl.EventImpl.fire(EventImpl.java:67)
	at org.jboss.arquillian.container.test.impl.client.ContainerEventController.execute(ContainerEventController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:96)
	at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:99)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:81)
	at org.jboss.arquillian.test.impl.TestContextHandler.createSuiteContext(TestContextHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:96)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:145)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:116)
	at org.jboss.arquillian.test.impl.EventTestRunnerAdaptor.beforeSuite(EventTestRunnerAdaptor.java:75)
	at org.jboss.arquillian.testng.Arquillian.arquillianBeforeSuite(Arquillian.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:298)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.jboss.arquillian.container.spi.ConfigurationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeSuite -->
        <test-method status="SKIP" signature="arquillianBeforeClass()[pri:0, instance:org.eclipse.microprofile.config.tck.CdiOptionalInjectionTest@3aeaafa6]" name="arquillianBeforeClass" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeClass -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.CdiOptionalInjectionTest@3aeaafa6]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testOptionalInjection()[pri:0, instance:org.eclipse.microprofile.config.tck.CdiOptionalInjectionTest@3aeaafa6]" name="testOptionalInjection" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptionalInjection -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.CdiOptionalInjectionTest@3aeaafa6]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.CdiOptionalInjectionTest.testOptionalInjection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterClass()[pri:0, instance:org.eclipse.microprofile.config.tck.CdiOptionalInjectionTest@3aeaafa6]" name="arquillianAfterClass" is-config="true" duration-ms="1" started-at="2017-11-20T11:33:50Z" finished-at="2017-11-20T11:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterClass -->
        <test-method status="PASS" signature="arquillianAfterSuite()[pri:0, instance:org.eclipse.microprofile.config.tck.CdiOptionalInjectionTest@3aeaafa6]" name="arquillianAfterSuite" is-config="true" duration-ms="0" started-at="2017-11-20T11:33:55Z" finished-at="2017-11-20T11:33:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterSuite -->
      </class> <!-- org.eclipse.microprofile.config.tck.CdiOptionalInjectionTest -->
    </test> <!-- microprofile-config 1.0 TCK -->
  </suite> <!-- microprofile-config-TCK -->
</testng-results>
