// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Beer.proto

package com.ibm.ws.grpc.fat.beer.service;

/**
 * <pre>
 * Allowed types of beer
 * </pre>
 *
 * Protobuf enum {@code beer.BeerType}
 */
public enum BeerType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>NEWENGLANDIPA = 0;</code>
   */
  NEWENGLANDIPA(0),
  /**
   * <code>AMERICANWILDALE = 1;</code>
   */
  AMERICANWILDALE(1),
  /**
   * <code>AMERICANIMPERIALSTOUT = 2;</code>
   */
  AMERICANIMPERIALSTOUT(2),
  /**
   * <code>RUSSIANIMPERIALSTOUT = 3;</code>
   */
  RUSSIANIMPERIALSTOUT(3),
  /**
   * <code>PORTER = 4;</code>
   */
  PORTER(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>NEWENGLANDIPA = 0;</code>
   */
  public static final int NEWENGLANDIPA_VALUE = 0;
  /**
   * <code>AMERICANWILDALE = 1;</code>
   */
  public static final int AMERICANWILDALE_VALUE = 1;
  /**
   * <code>AMERICANIMPERIALSTOUT = 2;</code>
   */
  public static final int AMERICANIMPERIALSTOUT_VALUE = 2;
  /**
   * <code>RUSSIANIMPERIALSTOUT = 3;</code>
   */
  public static final int RUSSIANIMPERIALSTOUT_VALUE = 3;
  /**
   * <code>PORTER = 4;</code>
   */
  public static final int PORTER_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static BeerType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static BeerType forNumber(int value) {
    switch (value) {
      case 0: return NEWENGLANDIPA;
      case 1: return AMERICANWILDALE;
      case 2: return AMERICANIMPERIALSTOUT;
      case 3: return RUSSIANIMPERIALSTOUT;
      case 4: return PORTER;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<BeerType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      BeerType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<BeerType>() {
          public BeerType findValueByNumber(int number) {
            return BeerType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.ibm.ws.grpc.fat.beer.service.BeerProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final BeerType[] VALUES = values();

  public static BeerType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private BeerType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:beer.BeerType)
}

