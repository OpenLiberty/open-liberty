/*******************************************************************************
 * Copyright (c) 2020 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
syntax = "proto3";


option java_multiple_files = true;
option java_package = "com.ibm.ws.grpc.fat.beer.service";
option java_outer_classname = "BeerProto";


package beer;
import "google/protobuf/empty.proto";

// The beer service definition.
service BeerService {

	// Add a beer to the collection - unary
	rpc AddBeer (Beer) returns (BeerResponse) {}
	
	// Delete a beer from the collection - unary
	rpc DeleteBeer (Beer) returns (BeerResponse) {}

	// Get the best beer of this type
	rpc GetBestBeer (RequestedBeerType) returns (Beer) {}
	
	//Get a list of all the beers
    rpc GetBeers (google.protobuf.Empty) returns (stream Beer) {}
}
	

// The response to adding or deleting a beer
message BeerResponse {
  	bool done = 1;
}

// The Beer
message Beer {
  	string beerName = 1;
  	string beerMaker = 2;
  	BeerType beerType = 3;
  	float beerRating = 4;
}

// The type of beer
message RequestedBeerType {
	BeerType beerType = 1;
}
	
// Allowed types of beer
enum BeerType{
  	NEWENGLANDIPA = 0;
  	AMERICANWILDALE = 1;
  	AMERICANIMPERIALSTOUT = 2;
  	RUSSIANIMPERIALSTOUT = 3;
  	PORTER = 4;
}
