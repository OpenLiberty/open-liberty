<!--
    Copyright (c) 2020 IBM Corporation and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
   
    Contributors:
        IBM Corporation - initial API and implementation
 -->
<server description="Server for Store Grpc service">
	<featureManager>
		<feature>grpc-1.0</feature>
		<feature>grpcClient-1.0</feature>
		<feature>mpOpenAPI-1.1</feature>
		<feature>mpRestClient-1.3</feature>
		<feature>distributedMap-1.0</feature>
		<feature>appSecurity-2.0</feature>
		<feature>jwt-1.0</feature>
		<feature>openidConnectClient-1.0</feature>
		<feature>jsp-2.3</feature>
        <feature>mpMetrics-2.3</feature>
    </featureManager>
    
    <mpMetrics authentication = "false"/>
	
	<include location="../fatTestPorts.xml" />

	<distributedMap id="gRPCDistMap" />
	
<!-- 	<keyStore id="defaultKeyStore" password="passw0rd" /> -->

	<javaPermission className="java.security.AllPermission"
		name="*" actions="*" />

	<!-- Default SSL configuration enables trust for default certificates from 
		the Java runtime -->
	<!-- <ssl id="defaultSSLConfig" trustDefaultCerts="true" /> -->
	
	<sslDefault sslRef="DefaultSSLSettings" />
	
	<ssl
		id="DefaultSSLSettings"
		keyStoreRef="rsa_key"
		trustStoreRef="rsa_trust"
		clientAuthenticationSupported="true" />
	<keyStore
		id="rsa_key"
		password="Liberty"
		type="jks"
		location="${server.config.dir}/rsa_key.jks" />
	<keyStore
		id="rsa_trust"
		password="LibertyServer"
		type="jks"
		location="${server.config.dir}/rsa_trust.jks" />
	
	
	<!-- The security setup in this server will apply on grpc services -->
	
	<openidConnectClient
		id="defaultJWT"
		scope="openid profile"
		httpsRequired="false"
		inboundPropagation="required"
		issuerIdentifier="testIssuer"
		signatureAlgorithm="RS256"
		trustStoreRef="rsa_trust"
		trustAliasName="rsacert"
		clockSkew="2s"
		groupIdentifier="groups"
		authFilterRef="myAuthFilter">
	</openidConnectClient>
	
	<authFilter id="myAuthFilter">
		<requestUrl
			id="myRequestUrla"
			urlPattern="getAllAppNames"
			matchType="contains" />
	</authFilter>
	
	
	<openidConnectClient
		id="defaultBadJWT"
		scope="openid profile"
		httpsRequired="false"
		inboundPropagation="required"
		issuerIdentifier="testIssuerBad"
		signatureAlgorithm="RS256"
		trustStoreRef="rsa_trust"
		trustAliasName="rsacert"
		clockSkew="2s"
		groupIdentifier="groups"
		authFilterRef="myBadAuthFilter">
	</openidConnectClient>
	
	<authFilter id="myBadAuthFilter">
		<requestUrl
			id="myRequestUrlb"
			urlPattern="getAppNameSetBadRoles"
			matchType="contains" />
	</authFilter>
	
	<!-- the openidConnectClient does not use the registry by default, 
so the group information is what is in the token, 
and that access id must then exist in the role map -->

	<basicRegistry id="basic" realm="storeRealmBasicReg">
		<user name="dev" password="hello" /> <!--user name="${env.BASIC_REGISTRY_USERNAME}" -->
		<user name="test" password="bug" />
		<group name="students"> <!-- group name="${env.ROLE_NAME_ADMINISTRATOR}" -->
			<member name="dev" />
			<member name="test" />
		</group>
	</basicRegistry>

	<application id="StoreApp"
		location="StoreApp.war" name="StoreApp" type="war">
		<application-bnd>
			<security-role name="Administrator">				
				<group name="Administrator"
					access-id="group:testIssuer/Administrator" />
			</security-role>
			<security-role name="students">
			<!-- For Token auth case -->
				<group name="students-jwt"
					access-id="group:testIssuer/students" />
				<!-- For basic auth case -->
				<group name="students"
					access-id="group:storeRealmBasicReg/students" />
			</security-role>
		</application-bnd>
	</application>
		
	<logging
		traceSpecification="*=info=enabled
		:io.openliberty.grpc*=all
		:com.ibm.testapp.g3store*=all:io.grpc*=all"
		maxFileSize="200" maxFiles="4" traceFormat="BASIC" />
		
		
		<!-- :com.ibm.ws.webcontainer*=all
		:com.ibm.wsspi.webcontainer*=all
		:com.ibm.ws.security*=all" -->

</server>
