/*******************************************************************************
 * Copyright (c) 2017 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
import org.apache.tools.ant.filters.ReplaceTokens

task assembleBootstrap(type: Copy) {
    inputs.property("javaHome", System.properties.('java.home').replace('\\', '\\\\').replace(':', '\\:'))
    def javaHome = System.properties.('java.home').replace('\\', '\\\\').replace(':', '\\:')
    from project.file('autoFVT-templates/bootstrapping.properties')
    into new File(buildDir, 'autoFVT-defaults')
    filter(ReplaceTokens, tokens: [JAVA_HOME: javaHome])
}

task assembleBinaryDependencies() {
    File buildDirLib = new File(buildDir, 'lib')
    outputs.dir buildDirLib
    doLast {
        // Copy maven dependencies of this project into a directory that can be included by the junit
        // task of every FAT bucket, effectively making all of fattest.simplicty's dependencies transitive
        sourceSets.main.runtimeClasspath.each {
            def path = it.getAbsolutePath()
            if((path.contains('.m2') || path.contains('.ibmartifactory')) && !(new File(buildDirLib, it.getName()).exists())) {
                copy {
                    from path
                    into buildDirLib
                }
            }
        }
    }
}

jar {
    dependsOn assembleBootstrap
    dependsOn assembleBinaryDependencies
}

configurations {
    arquillianFeature
}

dependencies {
    arquillianFeature 'io.openliberty.arquillian:arquillian-liberty-support:1.0.4:feature@zip'
}

task extractArquillianSupportFeature(type:Sync) {
    configurations.arquillianFeature.each {
        from(zipTree(it))
    }
    into('build/arquillian-feature-extract')
    
    doLast {
        // Update the feature manifest to mark it as a test feature
        file('build/arquillian-feature-extract/extension/lib/features/arquillian-liberty-support.mf')
            .append('IBM-Test-Feature: true\n')
    }
}

task publishArquillianSupportFeature(type:Copy) {
    dependsOn extractArquillianSupportFeature
    from('build/arquillian-feature-extract/extension')
    into(buildImage.file('wlp'))
}

assemble.dependsOn publishArquillianSupportFeature