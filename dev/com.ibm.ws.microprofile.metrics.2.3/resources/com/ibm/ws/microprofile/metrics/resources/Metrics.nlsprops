#CMVCPATHNAME N/A
#COMPONENTPREFIX CWMMC
#COMPONENTNAMEFOR CWMMC MicroProfile Metrics API 
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#ISMESSAGEFILE true
# #########################################################################
###############################################################################
# Copyright (c) 2009, 2021 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
# This file follows the WebSphere Message Guidelines.
# For more information, visit: 
# http://washome.austin.ibm.com/xwiki/bin/view/MessagesTeam/
#

#-----------------------------------------------------------------------------------------------------------------------------
# Messages used by Metrics Impl -  range is 0000-2999, plus 9999 for the emergency message
#-----------------------------------------------------------------------------------------------------------------------------

#Accept Header not acceptable.
notAcceptable.info.CWMMC0000I=CWMMC0000I: The accept header format {0} is incorrect.
notAcceptable.info.CWMMC0000I.explanation=The accept header uses an unsupported format.
notAcceptable.info.CWMMC0000I.useraction=Use appropriate headers.

#Method Not Allowed
requestType.info.CWMMC0001I=CWMMC0001I: The method request type must be GET or OPTIONS.
requestType.info.CWMMC0001I.explanation=The request type is not supported. The type must be GET or OPTIONS.
requestType.info.CWMMC0001I.useraction=Make GET or OPTIONS requests.

#Metric was not found.
metricNotFound.info.CWMMC0002I=CWMMC0002I: The {0} metric name was not found.
metricNotFound.info.CWMMC0002I.explanation=The metric does not exist.
metricNotFound.info.CWMMC0002I.useraction=Enter the correct metric name.

#Registry was not found.
registryNotFound.info.CWMMC0003I=CWMMC0003I: The {0} registry was not found.
registryNotFound.info.CWMMC0003I.explanation=The registry does not exist.
registryNotFound.info.CWMMC0003I.useraction=Enter the correct registry name.

#Registry is empty.
emptyRegistry.info.CWMMC0004I=CWMMC0004I: The {0} registry has no content.
emptyRegistry.info.CWMMC0004I.explanation=The registry is empty.
emptyRegistry.info.CWMMC0004I.useraction=Populate the registry with metrics.

#An internal error occurred. The exception is {0}.
internal.error.CWMMC0005E=CWMMC0005E: An internal error occurred: {0}
internal.error.CWMMC0005E.explanation=The application server experienced an internal error.
internal.error.CWMMC0005E.useraction=Gather a set of traces and open a new issue against your application server.

#Generic error for internal failures. 
internal.error.CWMMC0006E=CWMMC0006E: An internal error occurred.
internal.error.CWMMC0006E.explanation=The application server experienced an internal error.
internal.error.CWMMC0006E.useraction=Gather a set of traces and open a new issue against your application server.

#Memory usedHeap message
memory.usedHeap.description=Displays the amount of used heap memory in bytes.

#Memory committedHeap message
memory.committedHeap.description=Displays the amount of memory in bytes that is committed for the Java virtual machine to use. This amount of memory is guaranteed for the Java virtual machine to use.

#Memory maxHeap message
memory.maxHeap.description=Displays the maximum amount of heap memory in bytes that can be used for memory management. This attribute displays -1 if the maximum heap memory size is undefined. This amount of memory is not guaranteed to be available for memory management if it is greater than the amount of committed memory. The Java virtual machine may fail to allocate memory even if the amount of used memory does not exceed this maximum size.

#Jvm uptime message
jvm.uptime.description=Displays the start time of the Java virtual machine in milliseconds. This attribute displays the approximate time when the Java virtual machine started.

#Thread count message
thread.count.description=Displays the current number of live threads including both daemon and non-daemon threads.

#Thread daemon count message
thread.daemon.count.description=Displays the current number of live daemon threads.

#Thread max count message
thread.max.count.description=Displays the peak live thread count since the Java virtual machine started or peak was reset. This includes daemon and non-daemon threads.

#Classloader currentLoadedClass count message
classloader.currentLoadedClass.count.description=Displays the number of classes that are currently loaded in the Java virtual machine.

#Classloader totalLoadedClass count message
classloader.totalLoadedClass.count.description=Displays the total number of classes that have been loaded since the Java virtual machine has started execution.

#Classloader totalUnloadedClass count message
classloader.totalUnloadedClass.count.description=Displays the total number of classes unloaded since the Java virtual machine has started execution.

#Cpu availableProcessors message
cpu.availableProcessors.description=Displays the number of processors available to the Java virtual machine. This value may change during a particular invocation of the virtual machine.

#Cpu systemLoadAverage message
cpu.systemLoadAverage.description=Displays the system load average for the last minute. The system load average is the sum of the number of runnable entities queued to the available processors and the number of runnable entities running on the available processors averaged over a period of time. The way in which the load average is calculated is operating system specific but is typically a damped time-dependent average. If the load average is not available, a negative value is displayed. This attribute is designed to provide a hint about the system load and may be queried frequently. The load average may be unavailable on some platform where it is expensive to implement this method.

#Cpu processCpuLoad message
cpu.processCpuLoad.description=Displays the 'recent cpu usage' for the Java Virtual Machine process.

#Cpu processCpuTime message
cpu.processCpuTime.description=Displays the CPU time used by the process on which the Java virtual machine is running.

#Garbage collection count message
garbageCollectionCount.description=Displays the total number of collections that have occurred. This attribute lists -1 if the collection count is undefined for this collector.

#Garbage collection time message
garbageCollectionTime.description=Displays the approximate accumulated collection elapsed time in milliseconds. This attribute displays -1 if the collection elapsed time is undefined for this collector. The Java virtual machine implementation may use a high resolution timer to measure the elapsed time. This attribute may display the same value even if the collection count has been incremented if the collection elapsed time is very short.

#-----------------------------------------------------------------------------------------------------------------------------
# Monitor Metrics messages
#-----------------------------------------------------------------------------------------------------------------------------
threadpool.activeThreads.description=The number of threads that are running tasks.
threadpool.size.description=The size of the thread pool.

servlet.request.total.description=The number of visits to this servlet since the start of the server.
servlet.responseTime.total.description=The total response time of this servlet since the start of the server.

connectionpool.create.total.description=The total number of managed connections that have been created since the pool creation.
connectionpool.destroy.total.description=The total number of managed connections that have been destroyed since the pool creation.
connectionpool.managedConnections.description=The number of managed connections in the free, shared, and unshared pools.
connectionpool.connectionHandles.description=The number of connections that are in use. This number might include multiple connections that are shared from a single managed connection.
connectionpool.freeConnections.description=The number of managed connections in the free pool.

session.create.total.description=The number of sessions that have logged in since this metric was enabled.
session.liveSessions.description=The number of users that are currently logged in.
session.activeSessions.description=The number of concurrently active sessions. (A session is active if the product is currently processing a request that uses that user session).
session.invalidated.total.description=The number of sessions that have logged out since this metric was enabled.
session.invalidatedbyTimeout.total.description=The number of sessions that have logged out by timeout since this metric was enabled.

grpc.server.rpcStarted.total.description=The total number of RPCs started on the server.
grpc.server.rpcCompleted.total.description=The total number of RPCs completed on the server, regardless of success or failure.
grpc.server.sentMessages.total.description=The total number of stream messages sent by the server.
grpc.server.receivedMessages.total.description=The total number of stream messages received from the client.
grpc.server.responseTime.total.description=The total response time of completed RPCs.

grpc.client.rpcStarted.total.description=The total number of RPCs started on the client.
grpc.client.rpcCompleted.total.description=The total number of RPCs completed on the client, regardless of success or failure.
grpc.client.sentMessages.total.description=The total number of stream messages sent by the client.
grpc.client.receivedMessages.total.description=The total number of stream messages received from the server.
grpc.client.responseTime.total.description=The total response time of completed RPCs.

REST.request.description=The number of invocations and total response time of this RESTful resource method since the start of the server.

requestTiming.requestCount.description=The number of servlet requests since the server started.
requestTiming.activeRequestCount.description=The number of servlet requests currently running.
requestTiming.slowRequestCount.description=The number of servlet requests that are currently running but are slow.
requestTiming.hungRequestCount.description=The number of servlet requests that are currently running but are hung.
#-----------------------------------------------------------------------------------------------------------------------------
# Emergency Metrics error message
#-----------------------------------------------------------------------------------------------------------------------------

# A Metrics API error has occurred: {0}
temporary.CWMMC9999E=CWMMC9999E: A Metrics API error occurred: {0}
temporary.CWMMC9999E.explanation=A Metrics API error prevents normal operation.
temporary.CWMMC9999E.useraction=Review the FFDC logs and exception text to identify the problem.
