###############################################################################
# Copyright (c) 2019 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#
#ISMESSAGEFILE FALSE
# -------------------------------------------------------------------------------------------------

oauthRoles=Mapa rol\u00ed OAuth
oauthRoles.desc=Mapa rol\u00ed zabezpe\u010den\u00ed webov\u00fdch aplikac\u00ed OAuth.

authenticated=Ov\u011b\u0159en\u00e1 Role
authenticated.desc=Role zabezpe\u010den\u00ed pro \u017e\u00e1dosti o autoriza\u010dn\u00ed k\u00f3dy a tokeny.

clientManager=Role spr\u00e1vce klient\u016f
clientManager.desc=Role zabezpe\u010den\u00ed pro po\u017eadavky spr\u00e1vy klient\u016f.

tokenManager=Role spr\u00e1vce token\u016f
tokenManager.desc=Role zabezpe\u010den\u00ed pro po\u017eadavky spr\u00e1vy token\u016f.

user=U\u017eivatel
user.desc=U\u017eivatel, kter\u00fd m\u00e1 roli zabezpe\u010den\u00ed.

userName=Jm\u00e9no u\u017eivatele
userName.desc=N\u00e1zev u\u017eivatele, kter\u00fd m\u00e1 roli zabezpe\u010den\u00ed.

userAccessId=ID u\u017eivatelsk\u00e9ho p\u0159\u00edstupu
userAccessId.desc=ID u\u017eivatelsk\u00e9ho p\u0159\u00edstupu v obecn\u00e9 podob\u011b user:realmName/userUniqueId. Pokud hodnotu nezad\u00e1te, bude vygenerov\u00e1na.

group=Skupina
group.desc=Skupina, kter\u00e1 m\u00e1 roli zabezpe\u010den\u00ed.

groupName=N\u00e1zev skupiny
groupName.desc=N\u00e1zev skupiny, kter\u00e1 m\u00e1 roli zabezpe\u010den\u00ed.

groupAccessId=ID p\u0159\u00edstupu skupiny
groupAccessId.desc=ID p\u0159\u00edstupu skupiny v obecn\u00e9 podob\u011b group:realmName/groupUniqueId. Pokud hodnotu nezad\u00e1te, bude vygenerov\u00e1na.

specialSubject=Speci\u00e1ln\u00ed subjekt
specialSubject.desc=Speci\u00e1ln\u00ed subjekt, kter\u00fd m\u00e1 roli zabezpe\u010den\u00ed.

specialSubjectType=Typ speci\u00e1ln\u00edho subjektu
specialSubjectType.desc=Jeden z n\u00e1sleduj\u00edc\u00edch typ\u016f speci\u00e1ln\u00edho subjektu: ALL_AUTHENTICATED_USERS, EVERYONE.

allAuthenticated.desc=V\u0161ichni ov\u011b\u0159en\u00ed u\u017eivatel\u00e9.

everyone.desc=V\u0161ichni u\u017eivatel\u00e9 pro v\u0161echny po\u017eadavky, v\u010detn\u011b neov\u011b\u0159en\u00fdch po\u017eadavk\u016f.

client=Klient OAuth
client.desc=Definice klienta OAuth. P\u0159\u00edstup k poskytovateli maj\u00ed pouze zde definovan\u00ed klienti.

name=N\u00e1zev
name.desc=N\u00e1zev klienta (n\u011bkdy ozna\u010dovan\u00fd jako ID).

secret=Tajn\u00fd kl\u00ed\u010d
secret.desc=Tajn\u00fd kl\u00ed\u010d klienta.

displayname=Zobrazovan\u00fd n\u00e1zev
displayname.desc=Zobrazovan\u00fd n\u00e1zev klienta.

redirect=Pole identifik\u00e1tor\u016f URI pro p\u0159esm\u011brov\u00e1n\u00ed
redirect.desc=Pole identifik\u00e1tor\u016f URI pro p\u0159esm\u011brov\u00e1n\u00ed, kter\u00e9 se pou\u017e\u00edv\u00e1 v toc\u00edch zalo\u017een\u00fdch na p\u0159esm\u011brov\u00e1n\u00ed, jako nap\u0159. v autoriza\u010dn\u00edm k\u00f3du a implicitn\u00edch typech ud\u011blen\u00ed klient\u016f. Prvn\u00ed identifik\u00e1tor URI pro p\u0159esm\u011brov\u00e1n\u00ed se pou\u017e\u00edv\u00e1 jako p\u0159edvolba, nen\u00ed-li \u017e\u00e1dn\u00fd takov\u00fd identifik\u00e1tor uveden v po\u017eadavku.

enabled=Povolen\u00fd klient
enabled.desc=Pokud m\u00e1 hodnotu true, je klient povolen, pokud m\u00e1 hodnotu false, je klient zak\u00e1z\u00e1n.

oauthProvider=Definice poskytovatele OAuth
oauthProvider.desc=Definice poskytovatele OAuth.

localStore=Lok\u00e1ln\u00ed \u00falo\u017ei\u0161t\u011b
localStore.desc=Klienti jsou definov\u00e1ni v souboru server.xml a tokeny jsou ulo\u017een\u00e9 v mezipam\u011bti na serveru.

localStore.tokenStoreSize=Velikost \u00falo\u017ei\u0161t\u011b token\u016f
localStore.tokenStoreSize.desc=Maxim\u00e1ln\u00ed povolen\u00fd po\u010det polo\u017eek v \u00falo\u017ei\u0161ti token\u016f.

databaseStore=Datab\u00e1zov\u00e9 \u00falo\u017ei\u0161t\u011b
databaseStore.desc=Klienti jsou definov\u00e1ni a tokeny jsou ulo\u017een\u00e9 v mezipam\u011bti v datab\u00e1zi.

dataSourceRef=Zdroj dat
dataSourceRef$Ref=Odkaz na zdroj dat
dataSourceRef.desc=Odkaz na zdroj dat pro dan\u00e9 \u00falo\u017ei\u0161t\u011b.

cleanupExpiredTokenInterval=Interval vy\u010di\u0161t\u011bn\u00ed datab\u00e1ze
cleanupExpiredTokenInterval.desc=Interval pro vy\u010di\u0161t\u011bn\u00ed token\u016f s vypr\u0161enou platnost\u00ed z datab\u00e1zov\u00e9ho \u00falo\u017ei\u0161t\u011b. Platn\u00fd rozsah je 0 a\u017e Integer.MAX_VALUE, v sekund\u00e1ch. Hodnota 0 ozna\u010duje, \u017ee nen\u00ed provedeno \u017e\u00e1dn\u00e9 vy\u010di\u0161t\u011bn\u00ed.

cleanupExpiredInterval=Interval vy\u010di\u0161t\u011bn\u00ed vlastn\u00edho \u00falo\u017ei\u0161t\u011b OAuthStore
cleanupExpiredInterval.desc=Interval, kter\u00fd se m\u00e1 pou\u017e\u00edt pro vy\u010di\u0161t\u011bn\u00ed token\u016f s vypr\u0161enou platnost\u00ed a se souhlasy z implementace vlastn\u00edho \u00falo\u017ei\u0161t\u011b OAuthStore. Platn\u00fd rozsah je 0 a\u017e Integer.MAX_VALUE, v sekund\u00e1ch. Hodnota 0 ozna\u010duje, \u017ee nen\u00ed provedeno \u017e\u00e1dn\u00e9 vy\u010di\u0161t\u011bn\u00ed.

databaseStore.user=U\u017eivatel
databaseStore.user.desc=ID u\u017eivatele pou\u017e\u00edvan\u00e9 pro p\u0159\u00edstup k datab\u00e1zi.

databaseStore.password=Heslo
databaseStore.password.desc=Heslo pou\u017e\u00edvan\u00e9 pro p\u0159\u00edstup k datab\u00e1zi.

databaseStore.schema=Sch\u00e9ma
databaseStore.schema.desc=N\u00e1zev sch\u00e9matu datab\u00e1ze.

customStore=Vlastn\u00ed \u00falo\u017ei\u0161t\u011b OAuthStore
customStore.desc=Klienti jsou definov\u00e1ni a tokeny a souhlasy jsou ukl\u00e1d\u00e1ny do mezipam\u011bti v r\u00e1mci implementace vlastn\u00edho \u00falo\u017ei\u0161t\u011b OAuthStore.

storeId=ID vlastn\u00edho \u00falo\u017ei\u0161t\u011b OAuthStore
storeId.desc=Ur\u010duje ID \u00falo\u017ei\u0161t\u011b OAuthStore, kter\u00e9 m\u00e1 b\u00fdt pou\u017eito pro vlastn\u00ed \u00falo\u017ei\u0161t\u011b. Hodnota mus\u00ed odpov\u00eddat hodnot\u011b vlastnosti oauth.store.id, kter\u00e1 je uvedena pro implementaci OAuthStore.

authorizationGrantLifetime=\u017divotnost ud\u011blen\u00ed autorizace
authorizationGrantLifetime.desc=Doba \u017eivotnosti ud\u011blen\u00ed autorizace (v sekund\u00e1ch). Ekvivalentn\u00edm parametrem poskytovatele v \u00fapln\u00e9m profilu aplika\u010dn\u00edho serveru je oauth20.max.authorization.grant.lifetime.seconds.

authorizationCodeLifetime=\u017divotnost autoriza\u010dn\u00edho k\u00f3du
authorizationCodeLifetime.desc=Doba \u017eivotnosti autoriza\u010dn\u00edho k\u00f3du (v sekund\u00e1ch). Ekvivalentn\u00edm parametrem poskytovatele v \u00fapln\u00e9m profilu aplika\u010dn\u00edho serveru je oauth20.code.lifetime.seconds.

authorizationCodeLength=D\u00e9lka autoriza\u010dn\u00edho k\u00f3du
authorizationCodeLength.desc=D\u00e9lka vygenerovan\u00e9ho autoriza\u010dn\u00edho k\u00f3du. Ekvivalentn\u00edm parametrem poskytovatele v \u00fapln\u00e9m profilu aplika\u010dn\u00edho serveru je oauth20.code.length.

accessTokenLifetime=\u017divotnost p\u0159\u00edstupov\u00e9ho prvku
accessTokenLifetime.desc=Doba, po kterou je p\u0159\u00edstupov\u00fd prvek platn\u00fd (v sekund\u00e1ch). Ekvivalentn\u00edm parametrem poskytovatele v \u00fapln\u00e9m profilu aplika\u010dn\u00edho serveru je oauth20.token.lifetime.seconds.

accessTokenLength=D\u00e9lka p\u0159\u00edstupov\u00e9ho prvku
accessTokenLength.desc=D\u00e9lka vygenerovan\u00e9ho p\u0159\u00edstupov\u00e9ho prvku OAuth. Ekvivalentn\u00edm parametrem poskytovatele v \u00fapln\u00e9m profilu aplika\u010dn\u00edho serveru je oauth20.access.token.length. 

issueRefreshToken=P\u0159\u00edznak pou\u017eit\u00ed token\u016f aktualizace
issueRefreshToken.desc=Hodnota false zak\u00e1\u017ee generov\u00e1n\u00ed a pou\u017eit\u00ed token\u016f aktualizace. Ekvivalentn\u00edm parametrem poskytovatele v \u00fapln\u00e9m profilu aplika\u010dn\u00edho serveru je oauth20.issue.refresh.token.

refreshTokenLength=D\u00e9lka tokenu aktualizace
refreshTokenLength.desc=D\u00e9lka generovan\u00e9ho tokenu aktualizace. Ekvivalentn\u00edm parametrem poskytovatele v \u00fapln\u00e9m profilu aplika\u010dn\u00edho serveru je oauth20.refresh.token.length.

revokeAccessTokensWithRefreshTokens=Zru\u0161it p\u0159\u00edstupov\u00e9 tokeny, kdy\u017e byl aktualiza\u010dn\u00edmu tokenu zru\u0161en p\u0159\u00edstup
revokeAccessTokensWithRefreshTokens.desc=Hodnota false zak\u00e1\u017ee odvol\u00e1n\u00ed p\u0159idru\u017een\u00fdch p\u0159\u00edstupov\u00fdch token\u016f, kdy\u017e je aktualiza\u010dn\u00edmu tokenu zru\u0161en p\u0159\u00edstup. V\u00fdchoz\u00ed hodnota je true (ano). 

libraryRef=Sd\u00edlen\u00e1 knihovna
libraryRef$Ref=Odkaz na sd\u00edlenou knihovnu
libraryRef.desc=Odkaz na sd\u00edlenou knihovnu obsahuj\u00edc\u00ed t\u0159\u00eddu modulu plug-in medi\u00e1tora

mediatorClassname=N\u00e1zev t\u0159\u00eddy medi\u00e1tora
mediatorClassname.desc=N\u00e1zev t\u0159\u00eddy modulu plug-in medi\u00e1tora. Ekvivalentn\u00edm parametrem poskytovatele v \u00fapln\u00e9m profilu aplika\u010dn\u00edho serveru je oauth20.mediator.classnames.

allowPublicClients=Povolit ve\u0159ejn\u00fdm klient\u016fm p\u0159\u00edstup k poskytovateli OAuth
allowPublicClients.desc=Hodnota false zak\u00e1\u017ee p\u0159\u00edstup ve\u0159ejn\u00fdm klient\u016fm, jak ur\u010duje specifikace OAuth. Ekvivalentn\u00edm parametrem poskytovatele v \u00fapln\u00e9m profilu aplika\u010dn\u00edho serveru je oauth20.allow.public.clients.

grantType=Typ ud\u011blen\u00ed OAuth
grantType.desc=Typ ud\u011blen\u00ed OAuth 2.0, jak jej ur\u010duje specifikace OAuth 2.0, kter\u00fd je povolen pro poskytovatele. Standardn\u011b jsou v\u0161echny typy ud\u011blen\u00ed povoleny. Podporovan\u00e9 hodnoty jsou authorization_code, client_credentials, refresh_token, password, implicit a urn:ietf:params:oauth:grant-type:jwt-bearer.

authorizationFormTemplate=Vlastn\u00ed formul\u00e1\u0159 autorizace
authorizationFormTemplate.desc=Adresa URL vlastn\u00ed \u0161ablony str\u00e1nky autorizace. Ekvivalentn\u00edm parametrem poskytovatele v \u00fapln\u00e9m profilu aplika\u010dn\u00edho serveru je oauth20.authorization.form.template.

authorizationErrorTemplate=Vlastn\u00ed form\u00e1t chyby autorizace
authorizationErrorTemplate.desc=Adresa URL vlastn\u00ed \u0161ablony str\u00e1nky chyby autorizace. Ekvivalentn\u00edm parametrem poskytovatele v \u00fapln\u00e9m profilu aplika\u010dn\u00edho serveru je oauth20.authorization.error.template.

customLoginURL=Vlastn\u00ed p\u0159ihla\u0161ovac\u00ed formul\u00e1\u0159
customLoginURL.desc=Adresa URL vlastn\u00ed p\u0159ihla\u0161ovac\u00ed str\u00e1nky. Ekvivalentn\u00edm parametrem poskytovatele v \u00fapln\u00e9m profilu aplika\u010dn\u00edho serveru je oauth20.authorization.loginURL.

autoAuthorizeParam=Parametr automatick\u00e9 autorizace
autoAuthorizeParam.desc=Chcete-li vyu\u017e\u00edt automatickou autorizaci, p\u0159ipojte k po\u017eadavk\u016fm parametr autoAuthorize s hodnotu true. Ekvivalentn\u00edm parametrem poskytovatele v \u00fapln\u00e9m profilu aplika\u010dn\u00edho serveru je oauth20.autoauthorize.param.

autoAuthorize=Automatick\u00e1 autorizace
autoAuthorize.desc=Pou\u017e\u00edv\u00e1 automatickou autorizaci, pokud je hodnota true. V\u00fdchoz\u00ed hodnota je false (ne).

autoAuthorizeClient=Klient s automatickou autorizac\u00ed
autoAuthorizeClient.desc=N\u00e1zev klienta, kter\u00fd m\u00e1 povolenu automatickou autorizaci. Ekvivalentn\u00edm parametrem poskytovatele v \u00fapln\u00e9m profilu aplika\u010dn\u00edho serveru je oauth20.autoauthorize.clients.

clientURISubstitutions=Substituce identifik\u00e1toru URI klienta
clientURISubstitutions.desc=Nepovinn\u00e1 hodnota, kter\u00e1 m\u00e1 nahradit \u0159et\u011bzce identifik\u00e1tor\u016f URI klient\u016f pro dynamick\u00e9 n\u00e1zvy hostitel\u016f. Ekvivalentn\u00edm parametrem poskytovatele v \u00fapln\u00e9m profilu aplika\u010dn\u00edho serveru je oauth20.client.uri.substitutions.

clientTokenCacheSize=Velikost mezipam\u011bti token\u016f klient\u016f
clientTokenCacheSize.desc=Maxim\u00e1ln\u00ed po\u010det polo\u017eek v mezipam\u011bti token\u016f klient\u016f.

userClientTokenLimit=Limit tokenu u\u017eivatel - klient
userClientTokenLimit.desc=Limit tokenu pro ka\u017edou kombinaci u\u017eivatele a klienta.

appTokenOrPasswordLimit=Omezen\u00ed tokenu aplikace nebo hesla
appTokenOrPasswordLimit.desc=Limit tokenu pro ka\u017edou kombinaci u\u017eivatele a klienta.

filter=Filtr po\u017eadavk\u016f
filter.desc=Filtr identifik\u00e1tor\u016f URI vyb\u00edr\u00e1 po\u017eadavky, kter\u00e9 m\u00e1 autorizovat tento poskytovatel. Ekvivalentn\u00edm parametrem poskytovatele v \u00fapln\u00e9m profilu aplika\u010dn\u00edho serveru je Filter.

characterEncoding=K\u00f3dov\u00e1n\u00ed znak\u016f
characterEncoding.desc=Na tuto hodnotu nastavte k\u00f3dov\u00e1n\u00ed znak\u016f po\u017eadavku. Ekvivalentn\u00edm parametrem poskytovatele v \u00fapln\u00e9m profilu aplika\u010dn\u00edho serveru je characterEncoding.

oauthOnly=Ov\u011b\u0159en\u00ed se nezda\u0159\u00ed, pokud chyb\u00ed p\u0159\u00edstupov\u00fd prvek OAuth
oauthOnly.desc=Pokud je hodnota true, potom po\u017eadavky shoduj\u00edc\u00ed se s filtrem mus\u00ed m\u00edt p\u0159\u00edstupov\u00fd prvek nebo skon\u010d\u00ed nezdarem. V p\u0159\u00edpad\u011b hodnoty false budou u shoduj\u00edc\u00edch se po\u017eadavk\u016f zkontrolov\u00e1na dal\u0161\u00ed data ov\u011b\u0159ov\u00e1n\u00ed, pokud nen\u00ed k dispozici p\u0159\u00edstupov\u00fd prvek. Ekvivalentn\u00edm parametrem poskytovatele v \u00fapln\u00e9m profilu aplika\u010dn\u00edho serveru je oauthOnly. 

includeTokenInSubject=Zahrnout token OAuth do p\u0159edm\u011btu
includeTokenInSubject.desc=Pokud je hodnota true, p\u0159idejte jako soukrom\u00e9 pov\u011b\u0159en\u00ed com.ibm.wsspi.security.oauth20.token.WSOAuth20Token. Ekvivalentn\u00edm parametrem poskytovatele v \u00fapln\u00e9m profilu aplika\u010dn\u00edho serveru je includeToken.

consentCacheEntryLifetime=\u017divotnost polo\u017eky mezipam\u011bti svolen\u00ed
consentCacheEntryLifetime.desc=Doba, po kterou je platn\u00e1 polo\u017eka v mezipam\u011bti svolen\u00ed (v sekund\u00e1ch).

consentCacheSize=Velikost mezipam\u011bti svolen\u00ed
consentCacheSize.desc=Maxim\u00e1ln\u00ed po\u010det polo\u017eek povolen\u00fd v mezipam\u011bti svolen\u00ed.

httpsRequired=Vy\u017eadovat komunikaci SSL
httpsRequired.desc=Po\u017eaduje se komunikace SSL mezi klientem a poskytovatelem OAuth.

certAuthentication=Povolit ov\u011b\u0159en\u00ed klientsk\u00fdch certifik\u00e1t\u016f
certAuthentication.desc=Povolit ov\u011b\u0159en\u00ed klientsk\u00fdch certifik\u00e1t\u016f v po\u017eadavc\u00edch HTTPS.

allowCertAuthentication=Povolit ov\u011b\u0159en\u00ed klientsk\u00fdch certifik\u00e1t\u016f
allowCertAuthentication.desc=Ov\u011b\u0159en\u00ed certifik\u00e1tu klienta povolte, pokud je certifik\u00e1t klienta zahrnut v po\u017eadavku https. Tento atribut umo\u017e\u0148uje, aby se k ov\u011b\u0159en\u00ed pou\u017e\u00edvaly certifik\u00e1ty klienta, i kdy\u017e je atribut certAuthentication nastaven na false.

allowSpnegoAuthentication=Povolit ov\u011b\u0159en\u00ed SPNEGO
allowSpnegoAuthentication.desc=Povolit ov\u011b\u0159en\u00ed tokenu SPNEGO v po\u017eadavku https. 

coverageMapSessionMaxAge=Maxim\u00e1ln\u00ed st\u00e1\u0159\u00ed relace mapy pokryt\u00ed
coverageMapSessionMaxAge.desc=Hodnota max-age (s) pro z\u00e1hlav\u00ed cache-control slu\u017eby mapy pokryt\u00ed.
skipResourceOwnerValidation=P\u0159esko\u010dit ov\u011b\u0159en\u00ed vlastn\u00edka prost\u0159edku
skipResourceOwnerValidation.desc=Pokud je hodnota true, p\u0159esko\u010dte ov\u011b\u0159en\u00ed vlastn\u00edka prost\u0159edku.

# new attribute for JWT GrantType
jwtGrantType=Typ ud\u011blen\u00ed JWT
jwtGrantType.desc=Typ grant_type pro obslu\u017enou rutinu tokenu JWT

maxJtiCacheSize=Maxim\u00e1ln\u00ed velikost mezipam\u011bti jti tokenu jwt
maxJtiCacheSize.desc=Maxim\u00e1ln\u00ed velikost mezipam\u011bti, kter\u00e1 udr\u017euje data jti tokenu jwt, aby se zabr\u00e1nilo op\u011btovn\u00e9ho pou\u017eit\u00ed jti.

clockSkew=Povolen\u00fd \u010dasov\u00fd rozd\u00edl mezi syst\u00e9my
clockSkew.desc=\u010casov\u00fd rozd\u00edl, kter\u00fd je povolen mezi klientem pro p\u0159ipojen\u00ed OpenID a poskytovatelem p\u0159ipojen\u00ed OpenID, nejsou-li synchronizovan\u00e9. 

tokenMaxLifetime=Maxim\u00e1ln\u00ed doba \u017eivotnosti tokenu jwt
tokenMaxLifetime.desc=Doba uv\u00e1d\u011bj\u00edc\u00ed maxim\u00e1ln\u00ed dobu \u017eivotnosti \u017eiv\u00e9ho tokenu jwt od jeho \u010dasu vyd\u00e1n\u00ed.

iatRequired=Vy\u017eadovat n\u00e1rok iat v tokenu jwt
iatRequired.desc=N\u00e1rok iat se v tokenu jwt po\u017eaduje.

jwtAccessToken=P\u0159\u00edstupov\u00fd token je JWT
jwtAccessToken.desc=Vygenerujte webov\u00fd token Json, serializujte jej jako \u0159et\u011bzec a vlo\u017ete na m\u00edsto p\u0159\u00edstupov\u00e9ho tokenu.

resourceIds=Identifik\u00e1tory prost\u0159edku
resourceIds.desc=Identifik\u00e1tory prost\u0159edku, kter\u00e9 jsou c\u00edlov\u00fdmi skupinami webov\u00e9ho tokenu Json.

logoutRedirectURL=Adresa URL pou\u017eit\u00e1 po odhl\u00e1\u0161en\u00ed
logoutRedirectURL.desc=Voliteln\u00e1 adresa URL, na n\u00ed\u017e je klient p\u0159esm\u011brov\u00e1n po \u00fasp\u011b\u0161n\u00e9m vyvol\u00e1n\u00ed koncov\u00e9ho bodu odhl\u00e1\u0161en\u00ed. Nen\u00ed-li zad\u00e1na adresa URL, pou\u017eije se minim\u00e1ln\u00ed v\u00fdchoz\u00ed str\u00e1nka odhl\u00e1\u0161en\u00ed.

appPasswordAllowed=Heslo aplikace je povoleno
appPasswordAllowed.desc=P\u0159i nastaven\u00ed na true m\u00e1 klient OAuth povoleno po\u017eadovat hesla aplikace.

appTokenAllowed=Token aplikace je povolen
appTokenAllowed.desc=P\u0159i nastaven\u00ed na true m\u00e1 klient OAuth povoleno po\u017eadovat tokeny aplikace.

appPasswordLifetime=Doba \u017eivotnosti hesla aplikace
appPasswordLifetime.desc=Uv\u00e1d\u00ed dobu \u017eivotnosti hesel aplikace, kter\u00e1 jsou generov\u00e1na t\u00edmto poskytovatelem OAuth.

appTokenLifetime=Doba \u017eivotnosti tokenu aplikace
appTokenLifetime.desc=Uv\u00e1d\u00ed dobu \u017eivotnosti token\u016f aplikace, kter\u00e1 jsou generov\u00e1na t\u00edmto poskytovatelem OAuth.

passwordGrantRequiresAppPassword=Ud\u011blen\u00ed hesla vy\u017eaduje heslo aplikace
passwordGrantRequiresAppPassword.desc=P\u0159i nastaven\u00ed na true mus\u00ed autoriza\u010dn\u00ed toky OAuth, kter\u00e9 pou\u017e\u00edvaj\u00ed typ ud\u011blen\u00ed pov\u011b\u0159en\u00ed hesla vlastn\u00edka prost\u0159edku, pou\u017e\u00edvat heslo aplikace m\u00edsto hesla nakonfigurovan\u00e9ho pro u\u017eivatele v registru u\u017eivatel\u016f. Je-li tento atribut povolen, mus\u00ed klienti OAuth z\u00edskat heslo aplikace od tohoto poskytovatele OAuth pro pou\u017eit\u00ed typu ud\u011blen\u00ed hesla.

# -------------------------------------------------------------------------------------------------
#	End of temporary addition of OpenId Connect Server Properties
# -------------------------------------------------------------------------------------------------

# -------------------------------------------------------------------------------------------------
#	Additional metatype properties to support OIDC Client Registration
# -------------------------------------------------------------------------------------------------
tokenEndpointAuthMethod=Metoda ov\u011b\u0159en\u00ed koncov\u00e9ho bodu tokenu
tokenEndpointAuthMethod.desc=Po\u017eadovan\u00e1 metoda ov\u011b\u0159en\u00ed pro koncov\u00fd bod tokenu klienta. 
tokenEndpointAuthMethod.none=nen\u00ed
tokenEndpointAuthMethod.clientSecretPost=client_secret_post
tokenEndpointAuthMethod.clientSecretBasic=client_secret_basic

scope=Rozsah
scope.desc=Zadejte mezerami odd\u011blen\u00fd seznam rozsah\u016f klienta.

grantTypes=Typy ud\u011blen\u00ed
grantTypes.desc=Typy ud\u011blen\u00ed, kter\u00e9 m\u016f\u017ee klient pou\u017e\u00edvat.
grantTypes.authorizationCode=authorization_code
grantTypes.implicit=implicitn\u00ed
grantTypes.refreshToken=refresh_token
grantTypes.clientCredentials=client_credentials
grantTypes.password=heslo
grantTypes.jwtBearer=urn:ietf:params:oauth:grant-type:jwt-bearer

responseTypes=Typy odezvy
responseTypes.desc=Typy odezvy, kter\u00e9 m\u016f\u017ee klient pou\u017e\u00edvat.
responseTypes.code=k\u00f3d
responseTypes.token=token
responseTypes.idTokenToken=id_token token

applicationType=Typ aplikace
applicationType.desc=Typ aplikace nejl\u00e9pe popisuj\u00edc\u00ed klienta.
applicationType.native=nativn\u00ed
applicationType.web=webov\u00e1

subjectType=Typ subjektu
subjectType.desc=Typ subjektu po\u017eadovan\u00fd pro odezvu na tohoto klienta.
subjectType.public=public

postLogoutRedirectUris=Identifik\u00e1tory URI pro p\u0159esm\u011brov\u00e1n\u00ed po odhl\u00e1\u0161en\u00ed
postLogoutRedirectUris.desc=Pole adres URL dodan\u00fdch RP, na kter\u00e9 m\u016f\u017eete po\u017eadovat p\u0159esm\u011brov\u00e1n\u00ed agenta u\u017eivatele koncov\u00e9ho u\u017eivatele pomoc\u00ed parametru post_logout_redirect_uri po proveden\u00ed odhl\u00e1\u0161en\u00ed.

sessionManaged=Relace spravov\u00e1na
sessionManaged.desc=Logick\u00e1 hodnota uv\u00e1d\u011bj\u00edc\u00ed, zda se bude klient \u00fa\u010dastnit spr\u00e1vy relace OpenID.

preAuthorizedScope=P\u0159edem autorizovan\u00fd rozsah
preAuthorizedScope.desc=Mezerami odd\u011blen\u00fd seznam hodnot rozsah\u016f, kter\u00fd m\u016f\u017ee klient pou\u017e\u00edvat p\u0159i \u017e\u00e1dosti o p\u0159\u00edstupov\u00e9 tokeny, kter\u00e9 se budou pova\u017eovat za p\u0159edem schv\u00e1len\u00e9 vlastn\u00edkem prost\u0159edku, a proto nebudou vy\u017eadovat souhlas vlastn\u00edka prost\u0159edku.

introspectTokens=Introspekce token\u016f
introspectTokens.desc=Logick\u00e1 hodnota uv\u00e1d\u011bj\u00edc\u00ed, zda je klientovi povoleno p\u0159istupovat ke koncov\u00e9mu bodu introspekce a prov\u00e1d\u011bt zde introspekci token\u016f vydan\u00fdch autoriza\u010dn\u00edm serverem.

functionalUserId=ID funk\u010dn\u00edho u\u017eivatele
functionalUserId.desc=Identifik\u00e1tor u\u017eivatele, kter\u00fd se m\u00e1 p\u0159idru\u017eit k p\u0159\u00edstupov\u00fdm token\u016fm obdr\u017een\u00fdm t\u00edmto klientem prost\u0159ednictv\u00edm typu ud\u011blen\u00ed pov\u011b\u0159en\u00ed klienta. Je-li tento parametr klienta uveden, vr\u00e1t\u00ed se hodnota v parametru odezvy functional_user_id z koncov\u00e9ho bodu introspekce.

functionalUserGroupIds=ID skupin funk\u010dn\u00edch u\u017eivatel\u016f
functionalUserGroupIds.desc=Seznam ID skupin, kter\u00e9 se maj\u00ed p\u0159idru\u017eit k p\u0159\u00edstupov\u00fdm token\u016fm obdr\u017een\u00fdm t\u00edmto klientem prost\u0159ednictv\u00edm typu ud\u011blen\u00ed pov\u011b\u0159en\u00ed. Je-li tento parametr klienta uveden, vr\u00e1t\u00ed se hodnota v parametru odezvy functional_user_groupIds z koncov\u00e9ho bodu introspekce.


tokenFormat=Typ vydan\u00e9ho tokenu JWT
tokenFormat.desc=Typ tokenu, kter\u00fd m\u00e1 b\u00fdt produkov\u00e1n. Jedna z hodnot opaque, jwt nebo mpjwt. Mpjwt je standardizovan\u00fd form\u00e1t microprofile. V\u00fdchoz\u00ed nastaven\u00ed je opaque. 
tokenFormat.opaque=opaque
tokenFormat.jwt=jwt
tokenFormat.mpjwt=mpjwt

accessTokenCacheEnabled=Tokeny p\u0159\u00edstupu do mezipam\u011bti
accessTokenCacheEnabled.desc=Povolte ukl\u00e1d\u00e1n\u00ed do mezipam\u011bti, aby se p\u0159\u00edstupov\u00e9 tokeny ukl\u00e1daly do datab\u00e1ze a vnit\u0159n\u00ed mezipam\u011bti.

allowRegexpRedirects=Povolit p\u0159esm\u011brov\u00e1n\u00ed regul\u00e1rn\u00edho v\u00fdrazu
allowRegexpRedirects.desc=Povol\u00ed p\u0159esm\u011brov\u00e1n\u00ed adres URL, aby obsahovala regul\u00e1rn\u00ed v\u00fdrazy. V\u00fdchoz\u00ed hodnota je false.

clientSecretEncoding=K\u00f3dov\u00e1n\u00ed tajn\u00e9ho kl\u00ed\u010de klienta
clientSecretEncoding.desc=Typ k\u00f3dov\u00e1n\u00ed pro ulo\u017een\u00fd tajn\u00fd kl\u00ed\u010d klienta. V\u00fdchoz\u00ed nastaven\u00ed je na XOR, pro kompatibilitu s d\u0159\u00edv\u011bj\u0161\u00edmi verzemi. Doporu\u010deno je PBKDF2WithHmacSHA512. 
clientSecretEncoding.xor=xor
clientSecretEncoding.PBKDF2WithHmacSHA512=PBKDF2WithHmacSHA512

accessTokenEncoding=K\u00f3dov\u00e1n\u00ed p\u0159\u00edstupov\u00e9ho tokenu
accessTokenEncoding.desc=Typ k\u00f3dov\u00e1n\u00ed pro ulo\u017een\u00fd p\u0159\u00edstupov\u00fd token. V\u00fdchoz\u00ed nastaven\u00ed je na plain, pro kompatibilitu s d\u0159\u00edv\u011bj\u0161\u00edmi verzemi. Doporu\u010deno je PBKDF2WithHmacSHA512. 
accessTokenEncoding.plain=plain
accessTokenEncoding.PBKDF2WithHmacSHA512=PBKDF2WithHmacSHA512

# -------------------------------------------------------------------------------------------------
#	End of metatype properties to support OIDC Client Registration
# -------------------------------------------------------------------------------------------------
