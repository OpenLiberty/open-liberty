<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed under the Apache License, Version 2.0 (the "License"); you 
    may not use this file except in compliance with the License. You may obtain 
    a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless 
    required by applicable law or agreed to in writing, software distributed 
    under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
    OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
    the specific language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ibm.ws.microprofile.faulttolerance</groupId>
    <artifactId>tck.runner.tck</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>MicroProfile Fault Tolerance TCK Runner TCK Module</name>

    <properties>
    
        <!--  The API and TCK versions are taken from the GIT sourced pom.xml -->
    
        <!-- Override with, for example, -Dmicroprofile.config.version=1.1 -->
        <default.config.version>1.0</default.config.version>
        <microprofile.config.version>${default.config.version}</microprofile.config.version>

        <!-- Override with, for example, -Darquillian.version=1.4 -->
        <default.arquillian.version>1.3.0.Final</default.arquillian.version>
        <arquillian.version>${default.arquillian.version}</arquillian.version>

        <!-- The api version is taken from the pom.xml in the top level directory of the repo
             and set into a System Property. Override with -Dapi.version=X.Y etc. -->
        <api.version>${api.version}</api.version>

        <!-- The tck version is taken from the pom.xml in the tck directory of the repo
             and set into a System Property. Override with -Dtck.version=X.Y etc. -->
        <tck.version>${tck.version}</tck.version>

        <!-- The impl version can also be overridden with with -Dimpl.version=X.Y etc. -->
        <impl.version>${impl.version}</impl.version>

        <!-- To select specific tests copy/paste/edit tck-suit.xml and add -DsuiteXmlFile=<file> -->
        <defaultSuiteFiles>tck-suite.xml</defaultSuiteFiles>
        <suiteXmlFile>${defaultSuiteFiles}</suiteXmlFile>

        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--  the below is used in arquillian.xml -->
        <wlp>${wlp}</wlp>
        <targetDirectory>${project.basedir}/target</targetDirectory>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${arquillian.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.eclipse.microprofile.fault-tolerance</groupId>
            <artifactId>microprofile-fault-tolerance-tck</artifactId>
            <version>${tck.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.apis</groupId>
            <artifactId>microprofile-fault-tolerance-api</artifactId>
            <version>${api.version}</version>
            <scope>system</scope>
            <systemPath>${com.ibm.websphere.org.eclipse.microprofile.faulttolerance}</systemPath>
        </dependency>

        <dependency>
            <groupId>org.eclipse.microprofile.config</groupId>
            <artifactId>microprofile-config-api</artifactId>
            <version>${microprofile.config.version}</version>
            <scope>system</scope>
            <systemPath>${com.ibm.websphere.org.eclipse.microprofile.config}</systemPath>
        </dependency>

        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.9.9</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.testng</groupId>
            <artifactId>arquillian-testng-container</artifactId>
            <version>1.1.14.Final</version>
        </dependency>
        <dependency>
            <groupId>io.openliberty.arquillian</groupId>
            <artifactId>arquillian-liberty-managed</artifactId>
            <version>1.0.3</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
    <directory>${targetDirectory}</directory>
        <defaultGoal>clean test</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.9</version>
                <executions>
                    <execution>
                        <id>build-classpath</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>build-classpath</goal>
                        </goals>
                        <configuration>
                            <!-- configure the plugin here -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.17</version> <!-- Any changes to the surefire version must be tested against ZOS -->
                <configuration>
                    <argLine>-Dfile.encoding=${project.build.sourceEncoding} -Dcom.ibm.tools.attach.enable=yes</argLine> <!-- Needed for ZOS. sourceEncoding is needed becuase arquillian calls string.getBtytes(). Attach is needed becuase because arquillian uses com.sun.tools.attach to find VMs -->
                    <systemPropertyVariables>
                        <wlp>${wlp}</wlp>
                        <tck_server>${tck_server}</tck_server>
                        <tck_port>${tck_port}</tck_port>
                    </systemPropertyVariables>
                    <suiteXmlFiles>
                        <suiteXmlFile>${suiteXmlFile}</suiteXmlFile>
                    </suiteXmlFiles>
                    <testSourceDirectory>${basedir}${file.separarator}src${file.separarator}main${file.separarator}java${file.separarator}</testSourceDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
