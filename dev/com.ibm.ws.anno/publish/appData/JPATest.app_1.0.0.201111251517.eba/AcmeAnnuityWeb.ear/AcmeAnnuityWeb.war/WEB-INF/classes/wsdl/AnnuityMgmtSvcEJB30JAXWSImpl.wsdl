<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.1 in JDK 6. -->
<definitions targetNamespace="http://jaxws.client.common.annuity.acme.wssvt.ibm.com/ejb3impl/" name="AnnuityMgmtSvcEJB30JAXWSImpl" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://jaxws.client.common.annuity.acme.wssvt.ibm.com/ejb3impl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <types>
    <xsd:schema>
      <xsd:import namespace="http://jaxws.client.common.annuity.acme.wssvt.ibm.com/ejb3impl/" schemaLocation="AnnuityMgmtSvcEJB30JAXWSImpl_schema1.xsd"/>
    </xsd:schema>
    <xsd:schema>
      <xsd:import namespace="http://bean.common.annuity.acme.wssvt.ibm.com/jaxbjpa/" schemaLocation="AnnuityMgmtSvcEJB30JAXWSImpl_schema2.xsd"/>
    </xsd:schema>
  </types>
  <message name="createAnnuity">
    <part name="parameters" element="tns:createAnnuity"/>
  </message>
  <message name="createAnnuityResponse">
    <part name="parameters" element="tns:createAnnuityResponse"/>
  </message>
  <message name="ServerBusinessModuleException">
    <part name="fault" element="tns:ServerBusinessModuleException"/>
  </message>
  <message name="ServerPersistenceModuleException">
    <part name="fault" element="tns:ServerPersistenceModuleException"/>
  </message>
  <message name="EntityAlreadyExistsException">
    <part name="fault" element="tns:EntityAlreadyExistsException"/>
  </message>
  <message name="InvalidArgumentException">
    <part name="fault" element="tns:InvalidArgumentException"/>
  </message>
  <message name="updateAnnuity">
    <part name="parameters" element="tns:updateAnnuity"/>
  </message>
  <message name="updateAnnuityResponse">
    <part name="parameters" element="tns:updateAnnuityResponse"/>
  </message>
  <message name="deleteAnnuity">
    <part name="parameters" element="tns:deleteAnnuity"/>
  </message>
  <message name="deleteAnnuityResponse">
    <part name="parameters" element="tns:deleteAnnuityResponse"/>
  </message>
  <message name="createAnnuityHolder">
    <part name="parameters" element="tns:createAnnuityHolder"/>
  </message>
  <message name="createAnnuityHolderResponse">
    <part name="parameters" element="tns:createAnnuityHolderResponse"/>
  </message>
  <message name="updateAnnuityHolder">
    <part name="parameters" element="tns:updateAnnuityHolder"/>
  </message>
  <message name="updateAnnuityHolderResponse">
    <part name="parameters" element="tns:updateAnnuityHolderResponse"/>
  </message>
  <message name="deleteAnnuityHolder">
    <part name="parameters" element="tns:deleteAnnuityHolder"/>
  </message>
  <message name="deleteAnnuityHolderResponse">
    <part name="parameters" element="tns:deleteAnnuityHolderResponse"/>
  </message>
  <message name="createPayor">
    <part name="parameters" element="tns:createPayor"/>
  </message>
  <message name="createPayorResponse">
    <part name="parameters" element="tns:createPayorResponse"/>
  </message>
  <message name="updatePayor">
    <part name="parameters" element="tns:updatePayor"/>
  </message>
  <message name="updatePayorResponse">
    <part name="parameters" element="tns:updatePayorResponse"/>
  </message>
  <message name="deletePayor">
    <part name="parameters" element="tns:deletePayor"/>
  </message>
  <message name="deletePayorResponse">
    <part name="parameters" element="tns:deletePayorResponse"/>
  </message>
  <message name="createContact">
    <part name="parameters" element="tns:createContact"/>
  </message>
  <message name="createContactResponse">
    <part name="parameters" element="tns:createContactResponse"/>
  </message>
  <message name="updateContact">
    <part name="parameters" element="tns:updateContact"/>
  </message>
  <message name="updateContactResponse">
    <part name="parameters" element="tns:updateContactResponse"/>
  </message>
  <message name="deleteContact">
    <part name="parameters" element="tns:deleteContact"/>
  </message>
  <message name="deleteContactResponse">
    <part name="parameters" element="tns:deleteContactResponse"/>
  </message>
  <message name="createPayout">
    <part name="parameters" element="tns:createPayout"/>
  </message>
  <message name="createPayoutResponse">
    <part name="parameters" element="tns:createPayoutResponse"/>
  </message>
  <message name="updatePayout">
    <part name="parameters" element="tns:updatePayout"/>
  </message>
  <message name="updatePayoutResponse">
    <part name="parameters" element="tns:updatePayoutResponse"/>
  </message>
  <message name="deletePayout">
    <part name="parameters" element="tns:deletePayout"/>
  </message>
  <message name="deletePayoutResponse">
    <part name="parameters" element="tns:deletePayoutResponse"/>
  </message>
  <message name="deleteRider">
    <part name="parameters" element="tns:deleteRider"/>
  </message>
  <message name="deleteRiderResponse">
    <part name="parameters" element="tns:deleteRiderResponse"/>
  </message>
  <message name="findAnnuityById">
    <part name="parameters" element="tns:findAnnuityById"/>
  </message>
  <message name="findAnnuityByIdResponse">
    <part name="parameters" element="tns:findAnnuityByIdResponse"/>
  </message>
  <message name="EntityNotFoundException">
    <part name="fault" element="tns:EntityNotFoundException"/>
  </message>
  <message name="findHolderById">
    <part name="parameters" element="tns:findHolderById"/>
  </message>
  <message name="findHolderByIdResponse">
    <part name="parameters" element="tns:findHolderByIdResponse"/>
  </message>
  <message name="findContactById">
    <part name="parameters" element="tns:findContactById"/>
  </message>
  <message name="findContactByIdResponse">
    <part name="parameters" element="tns:findContactByIdResponse"/>
  </message>
  <message name="findHolderAnnuities">
    <part name="parameters" element="tns:findHolderAnnuities"/>
  </message>
  <message name="findHolderAnnuitiesResponse">
    <part name="parameters" element="tns:findHolderAnnuitiesResponse"/>
  </message>
  <message name="findAnnuityHolder">
    <part name="parameters" element="tns:findAnnuityHolder"/>
  </message>
  <message name="findAnnuityHolderResponse">
    <part name="parameters" element="tns:findAnnuityHolderResponse"/>
  </message>
  <message name="findPayorAnnuities">
    <part name="parameters" element="tns:findPayorAnnuities"/>
  </message>
  <message name="findPayorAnnuitiesResponse">
    <part name="parameters" element="tns:findPayorAnnuitiesResponse"/>
  </message>
  <message name="findPayorById">
    <part name="parameters" element="tns:findPayorById"/>
  </message>
  <message name="findPayorByIdResponse">
    <part name="parameters" element="tns:findPayorByIdResponse"/>
  </message>
  <message name="findPayoutById">
    <part name="parameters" element="tns:findPayoutById"/>
  </message>
  <message name="findPayoutByIdResponse">
    <part name="parameters" element="tns:findPayoutByIdResponse"/>
  </message>
  <message name="findRiderById">
    <part name="parameters" element="tns:findRiderById"/>
  </message>
  <message name="findRiderByIdResponse">
    <part name="parameters" element="tns:findRiderByIdResponse"/>
  </message>
  <portType name="AnnuityMgmtSvcEJB30JAXWS">
    <operation name="createAnnuity">
      <input message="tns:createAnnuity"/>
      <output message="tns:createAnnuityResponse"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:EntityAlreadyExistsException" name="EntityAlreadyExistsException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="updateAnnuity">
      <input message="tns:updateAnnuity"/>
      <output message="tns:updateAnnuityResponse"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="deleteAnnuity">
      <input message="tns:deleteAnnuity"/>
      <output message="tns:deleteAnnuityResponse"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="createAnnuityHolder">
      <input message="tns:createAnnuityHolder"/>
      <output message="tns:createAnnuityHolderResponse"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:EntityAlreadyExistsException" name="EntityAlreadyExistsException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="updateAnnuityHolder">
      <input message="tns:updateAnnuityHolder"/>
      <output message="tns:updateAnnuityHolderResponse"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="deleteAnnuityHolder">
      <input message="tns:deleteAnnuityHolder"/>
      <output message="tns:deleteAnnuityHolderResponse"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="createPayor">
      <input message="tns:createPayor"/>
      <output message="tns:createPayorResponse"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:EntityAlreadyExistsException" name="EntityAlreadyExistsException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="updatePayor">
      <input message="tns:updatePayor"/>
      <output message="tns:updatePayorResponse"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="deletePayor">
      <input message="tns:deletePayor"/>
      <output message="tns:deletePayorResponse"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="createContact">
      <input message="tns:createContact"/>
      <output message="tns:createContactResponse"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:EntityAlreadyExistsException" name="EntityAlreadyExistsException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="updateContact">
      <input message="tns:updateContact"/>
      <output message="tns:updateContactResponse"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="deleteContact">
      <input message="tns:deleteContact"/>
      <output message="tns:deleteContactResponse"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="createPayout">
      <input message="tns:createPayout"/>
      <output message="tns:createPayoutResponse"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:EntityAlreadyExistsException" name="EntityAlreadyExistsException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="updatePayout">
      <input message="tns:updatePayout"/>
      <output message="tns:updatePayoutResponse"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="deletePayout">
      <input message="tns:deletePayout"/>
      <output message="tns:deletePayoutResponse"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="deleteRider">
      <input message="tns:deleteRider"/>
      <output message="tns:deleteRiderResponse"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="findAnnuityById">
      <input message="tns:findAnnuityById"/>
      <output message="tns:findAnnuityByIdResponse"/>
      <fault message="tns:EntityNotFoundException" name="EntityNotFoundException"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="findHolderById">
      <input message="tns:findHolderById"/>
      <output message="tns:findHolderByIdResponse"/>
      <fault message="tns:EntityNotFoundException" name="EntityNotFoundException"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="findContactById">
      <input message="tns:findContactById"/>
      <output message="tns:findContactByIdResponse"/>
      <fault message="tns:EntityNotFoundException" name="EntityNotFoundException"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="findHolderAnnuities">
      <input message="tns:findHolderAnnuities"/>
      <output message="tns:findHolderAnnuitiesResponse"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="findAnnuityHolder">
      <input message="tns:findAnnuityHolder"/>
      <output message="tns:findAnnuityHolderResponse"/>
      <fault message="tns:EntityNotFoundException" name="EntityNotFoundException"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="findPayorAnnuities">
      <input message="tns:findPayorAnnuities"/>
      <output message="tns:findPayorAnnuitiesResponse"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="findPayorById">
      <input message="tns:findPayorById"/>
      <output message="tns:findPayorByIdResponse"/>
      <fault message="tns:EntityNotFoundException" name="EntityNotFoundException"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="findPayoutById">
      <input message="tns:findPayoutById"/>
      <output message="tns:findPayoutByIdResponse"/>
      <fault message="tns:EntityNotFoundException" name="EntityNotFoundException"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
    <operation name="findRiderById">
      <input message="tns:findRiderById"/>
      <output message="tns:findRiderByIdResponse"/>
      <fault message="tns:EntityNotFoundException" name="EntityNotFoundException"/>
      <fault message="tns:ServerBusinessModuleException" name="ServerBusinessModuleException"/>
      <fault message="tns:ServerPersistenceModuleException" name="ServerPersistenceModuleException"/>
      <fault message="tns:InvalidArgumentException" name="InvalidArgumentException"/>
    </operation>
  </portType>
  <binding name="AnnuityMgmtSvcEJB3JAXWSImplPortBinding" type="tns:AnnuityMgmtSvcEJB30JAXWS">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <operation name="createAnnuity">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="EntityAlreadyExistsException">
        <soap:fault name="EntityAlreadyExistsException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="updateAnnuity">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="deleteAnnuity">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="createAnnuityHolder">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="EntityAlreadyExistsException">
        <soap:fault name="EntityAlreadyExistsException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="updateAnnuityHolder">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="deleteAnnuityHolder">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="createPayor">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="EntityAlreadyExistsException">
        <soap:fault name="EntityAlreadyExistsException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="updatePayor">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="deletePayor">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="createContact">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="EntityAlreadyExistsException">
        <soap:fault name="EntityAlreadyExistsException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="updateContact">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="deleteContact">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="createPayout">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="EntityAlreadyExistsException">
        <soap:fault name="EntityAlreadyExistsException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="updatePayout">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="deletePayout">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="deleteRider">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="findAnnuityById">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="EntityNotFoundException">
        <soap:fault name="EntityNotFoundException" use="literal"/>
      </fault>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="findHolderById">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="EntityNotFoundException">
        <soap:fault name="EntityNotFoundException" use="literal"/>
      </fault>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="findContactById">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="EntityNotFoundException">
        <soap:fault name="EntityNotFoundException" use="literal"/>
      </fault>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="findHolderAnnuities">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="findAnnuityHolder">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="EntityNotFoundException">
        <soap:fault name="EntityNotFoundException" use="literal"/>
      </fault>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="findPayorAnnuities">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="findPayorById">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="EntityNotFoundException">
        <soap:fault name="EntityNotFoundException" use="literal"/>
      </fault>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="findPayoutById">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="EntityNotFoundException">
        <soap:fault name="EntityNotFoundException" use="literal"/>
      </fault>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="findRiderById">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="EntityNotFoundException">
        <soap:fault name="EntityNotFoundException" use="literal"/>
      </fault>
      <fault name="ServerBusinessModuleException">
        <soap:fault name="ServerBusinessModuleException" use="literal"/>
      </fault>
      <fault name="ServerPersistenceModuleException">
        <soap:fault name="ServerPersistenceModuleException" use="literal"/>
      </fault>
      <fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="AnnuityMgmtSvcEJB30JAXWSImpl">
    <port name="AnnuityMgmtSvcEJB3JAXWSImplPort" binding="tns:AnnuityMgmtSvcEJB3JAXWSImplPortBinding">
      <soap:address location="http://localhost:9080/AcmeAnnuityEJB3JAXWS/AnnuityMgmtSvcEJB30JAXWSImpl"/>
    </port>
  </service>
</definitions>