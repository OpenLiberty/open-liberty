#*******************************************************************************
# Copyright (c) 2017 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
#*******************************************************************************
-include= ~../cnf/resources/bnd/bundle.props
bVersion=1.0

Bundle-Name: JCA Security
Bundle-SymbolicName: com.ibm.ws.security.jca
Bundle-Description: JCA Security, version=${bVersion}

WS-TraceGroup: \
  JCASecurity

# For each exported package, create (in that package) a package-info.java
# file, and place an @version javadoc tag in package-level javadoc. 
# Append ";provide:=true" if this bundle also provides an implementation
# for the exported API.
Export-Package: \
  com.ibm.ws.security.jca;provide:=true

Private-Package: \
  com.ibm.ws.security.jca.internal*

Import-Package: com.ibm.ejs.ras,com.ibm.websphere.crypto, \
  com.ibm.websphere.ras, \
  com.ibm.websphere.ras.annotation, \
  com.ibm.websphere.security.auth.data, \
  com.ibm.ws.ras.instrument.annotation, \
  com.ibm.ws.security.authentication.principals, \
  com.ibm.ws.security.intfc, \
  com.ibm.ws.security.jca;version="[1.0,1.1)", \
  com.ibm.wsspi.kernel.service.utils, \
  javax.security.auth, \
  javax.security.auth.callback, \
  javax.security.auth.login, \
  org.osgi.framework;version="[1.7,2)", \
  org.osgi.service.component;version="[1.3,2)"

DynamicImport-Package: \
 javax.resource.spi, \
 javax.resource.spi.security, \
 com.ibm.ws.security, \
 com.ibm.wsspi.security.auth.callback;version="[1.1,2)"

# Update the metatype.xml for your component in the resources/OSGI-INF/metatype folder
Include-Resource: \
  OSGI-INF/permissions.perm=resources/permissions.perm


# At least one service component should be defined to allow configuration
# to be injected via config admin. Use configuration-policy:=ignore 
# if the component does not expect injected config

Service-Component: \
  com.ibm.ws.security.jca.authdata.service; \
    implementation:=com.ibm.ws.security.jca.internal.AuthDataServiceImpl; \
    provide:='com.ibm.ws.security.jca.AuthDataService'; \
    configuration-policy:=ignore; \
    authDataProvider=com.ibm.websphere.security.auth.data.AuthDataProvider; \
    securityService=com.ibm.ws.security.SecurityService; \
    subjectManagerService=com.ibm.ws.security.intfc.SubjectManagerService; \
    optional:='securityService,subjectManagerService'; \
    dynamic:='securityService,subjectManagerService'; \
    properties:="service.vendor=IBM"

-buildpath: \
	com.ibm.websphere.javaee.connector.1.6;version=latest,\
	com.ibm.ws.crypto.passwordutil,\
	com.ibm.ws.logging;version=latest,\
	com.ibm.ws.security;version=latest,\
	com.ibm.ws.security.jaas.common;version=latest,\
	com.ibm.websphere.appserver.spi.kernel.service,\
	com.ibm.websphere.org.osgi.core,\
	com.ibm.websphere.org.osgi.service.component,\
	com.ibm.wsspi.org.osgi.service.component.annotations,\
	com.ibm.ws.security.auth.data.common;version=latest,\
	com.ibm.ws.security.credentials;version=latest,\
	com.ibm.websphere.security;version=latest, \
	com.ibm.ws.org.osgi.annotation.versioning;version=latest

-testpath: \
	../build.sharedResources/lib/junit/old/junit.jar;version=file, \
	com.ibm.ws.junit.extensions;version=latest, \
	org.hamcrest:hamcrest-all;version=1.3, \
	org.jmock:jmock-junit4;strategy=exact;version=2.5.1, \
	org.jmock:jmock;strategy=exact;version=2.5.1, \
	org.jmock:jmock-legacy;version=2.5.0, \
	com.ibm.ws.org.objenesis:objenesis;version=1.0, \
	cglib:cglib-nodep;version=3.2.10, \
	com.ibm.ws.kernel.boot;version=latest
