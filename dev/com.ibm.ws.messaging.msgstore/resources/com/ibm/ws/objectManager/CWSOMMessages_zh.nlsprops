###############################################################################
# Copyright (c) 2013 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
# File com.ibm.ws.sib.example.CWSOMMessages.nlsprops
#
# These messages will be formatted as follows to enable translation and problem determination key values
# 
# Instructions to translation will precede the line to which it applies
# {0} description of each insert field
# ClassName_MessageName=CWSOM0001I: This is a message with insert {0}
# ClassName_MessageName.explanation=Explanation text for the message.
# ClassName_MessageName.useraction=User action text for the message.
#
#
# -------------------------------------------------------------------------------------------------
# Notes:
#   - CWSOMIS9999 is for emergency use if any new messages are required after the messages file is finalized
# -------------------------------------------------------------------------------------------------
#
#
#CMVCPATHNAME %Z%%W% %I%
#COMPONENTPREFIX CWSOM
#COMPONENTNAMEFOR CWSOM ObjectManager
#ISMESSAGEFILE TRUE
#NLS_MESSAGEFORMAT_VAR
#NLS_ENCODING=UNICODE

# -------------------------------------------------------------------------------------------------

# {0} name of the log file.
ObjectManagerState_ColdStart=CWSOM0001I: \u4f7f\u7528\u65e5\u5fd7\u6587\u4ef6 {0} \u7684 ObjectManager \u5df2\u51b7\u542f\u52a8\u3002
ObjectManagerState_ColdStart.explanation=\u7ed9\u4e88 ObjectManager \u7684\u65e5\u5fd7\u6587\u4ef6\u4e3a\u7a7a\uff0c\u6240\u4ee5 ObjectManager \u8fdb\u884c\u4e86\u51b7\u542f\u52a8\u3002
ObjectManagerState_ColdStart.useraction= \u65e0\uff0c\u9664\u975e\u60a8\u5e0c\u671b ObjectManager \u70ed\u542f\u52a8\u3002\
\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u8bf7\u8c03\u67e5\u65e5\u5fd7\u6587\u4ef6\u4e3a\u7a7a\u7684\u539f\u56e0\u3002
 
# {0} name of the log file.
# {1) The LOG_FILE_TYPE used for the warm start.
ObjectManagerState_WarmStart=CWSOM0002I: \u4f7f\u7528\u65e5\u5fd7\u6587\u4ef6 {0} \u7684 ObjectManager \u5df2\u70ed\u542f\u52a8\uff0c\u65e5\u5fd7\u6587\u4ef6\u7c7b\u578b\u4e3a {1}\u3002
ObjectManagerState_WarmStart.explanation=\u5df2\u7ed9\u4e88 ObjectManager \u6709\u6548\u65e5\u5fd7\u6587\u4ef6\uff0cObjectManager \u80fd\u591f\u901a\u8fc7\u6b64\u65e5\u5fd7\u6587\u4ef6\u91cd\u65b0\u542f\u52a8\u3002
ObjectManagerState_WarmStart.useraction=\u65e0\uff0c\u9664\u975e\u60a8\u5e0c\u671b ObjectManager \u51b7\u542f\u52a8\u3002\
\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u8bf7\u8c03\u67e5\u6b64\u65e5\u5fd7\u6587\u4ef6\u4e0d\u4e3a\u7a7a\u7684\u539f\u56e0\u3002
 
# {0} name of the log file.
ObjectManagerState_Shutdown=CWSOM0003I: \u4f7f\u7528\u65e5\u5fd7\u6587\u4ef6 {0} \u7684 ObjectManager \u5df2\u5173\u95ed\u3002
ObjectManagerState_Shutdown.explanation=\u7cfb\u7edf\u8bf7\u6c42 ObjectManager \u5173\u95ed\u3002
ObjectManagerState_Shutdown.useraction=\u65e0\uff0c\u9664\u975e\u60a8\u4e0d\u5e0c\u671b ObjectManager \u5173\u95ed\u3002

# {0} name of the log file.
ObjectManagerState_ShutdownFast=CWSOM0004I: \u4f7f\u7528\u65e5\u5fd7\u6587\u4ef6 {0} \u7684 ObjectManager \u5728\u672a\u6267\u884c\u6700\u7ec8\u68c0\u67e5\u70b9\u7684\u60c5\u51b5\u4e0b\u5df2\u5173\u95ed\u3002
ObjectManagerState_ShutdownFast.explanation=\u7cfb\u7edf\u8bf7\u6c42 ObjectManager \u5728\u672a\u6267\u884c\u6700\u7ec8\u68c0\u67e5\u70b9\u7684\u60c5\u51b5\u4e0b\u5173\u95ed\uff0c\u6216 ObjectManager \u56e0\u4e3a\u4e4b\u524d\u7684\u67d0\u4e2a\u9519\u8bef\u800c\u5173\u95ed\u3002
ObjectManagerState_ShutdownFast.useraction=\u65e0\uff0c\u9664\u975e\u60a8\u4e0d\u5e0c\u671b ObjectManager \u5728\u672a\u6267\u884c\u6700\u7ec8\u68c0\u67e5\u70b9\u7684\u60c5\u51b5\u4e0b\u5173\u95ed\u3002\
\u68c0\u67e5\u8bca\u65ad\u8f93\u51fa\u4ee5\u786e\u5b9a\u610f\u5916\u5173\u95ed\u7684\u539f\u56e0\u3002

# {0} Descriptive name of the transaction to be backed out.
ObjectManagerState_LogTooFull=CWSOM0005W: ObjectManager \u53d1\u73b0\u65e5\u5fd7\u6587\u4ef6\u592a\u6ee1\u5e76\u5c06\u56de\u9000\u4e8b\u52a1 {0}\u3002
ObjectManagerState_LogTooFull.explanation=ObjectManager \u5b8c\u6210\u68c0\u67e5\u70b9\u540e\u7684\u65e5\u5fd7\u6587\u4ef6\u7a7a\u95f4\u4e0d\u8db3\uff0c\u5b83\u56de\u9000\u4e86\u65e5\u5fd7\u4e2d\u7684\u6700\u5927\u4e8b\u52a1\u4ee5\u91ca\u653e\u4e00\u4e9b\u7a7a\u95f4\u3002
ObjectManagerState_LogTooFull.useraction=\u76f8\u5bf9\u4e8e\u60a8\u5df2\u914d\u7f6e\u7684\u65e5\u5fd7\u6587\u4ef6\u5927\u5c0f\uff0c\u60a8\u5c1d\u8bd5\u6267\u884c\u7684\u4e8b\u52a1\u5de5\u4f5c\u8fc7\u591a\u3002\
\u8003\u8651\u4e8b\u52a1\u5c1d\u8bd5\u6267\u884c\u7684\u66f4\u65b0\u662f\u5426\u592a\u591a\u3001\u60a8\u5c1d\u8bd5\u66f4\u65b0\u7684\u5927\u5bf9\u8c61\u662f\u5426\u592a\u591a\u3001\u60a8\u5c1d\u8bd5\u540c\u65f6\u8fd0\u884c\u7684\u4e8b\u52a1\u662f\u5426\u592a\u591a\u6216\u8005\u65e5\u5fd7\u6587\u4ef6\u662f\u5426\u592a\u5c0f\u5e76\u5e94\u589e\u5927\u3002

# ----------------------------------------------------------------------------------------------------

# {0} Descriptive name of the transaction to be backed out.
InternalTransaction_BackoutOrphan=CWSOM0100W: \u5783\u573e\u56de\u6536\u671f\u95f4\u53d1\u73b0\u4e86\u4e8b\u52a1 {0}\uff0c\u5e94\u56de\u9000\u6b64\u4e8b\u52a1\u3002
InternalTransaction_BackoutOrphan.explanation=\u5e94\u7528\u7a0b\u5e8f\u5931\u53bb\u4e86\u5bf9\u4e8b\u52a1\u7684\u5f15\u7528\uff0c\u4ece\u800c\u4e0d\u80fd\u5b8c\u6210\u6b64\u4e8b\u52a1\u3002\
\u56e0\u6b64\uff0cObjectManager \u5c06\u56de\u9000\u6b64\u4e8b\u52a1\u4ee5\u91ca\u653e\u5176\u8d44\u6e90\u3002
InternalTransaction_BackoutOrphan.useraction=\u5e94\u7528\u7a0b\u5e8f\u5931\u53bb\u4e86\u5bf9\u4e8b\u52a1\u7684\u5f15\u7528\u3002\
\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u5f02\u5e38\u7ec8\u6b62\uff0c\u90a3\u4e48\u6ca1\u6709\u9700\u8981\u8fdb\u4e00\u6b65\u6267\u884c\u7684\u64cd\u4f5c\u3002\
\u4f46\u662f\uff0c\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u5728\u672a\u5f02\u5e38\u7ec8\u6b62\u7684\u60c5\u51b5\u4e0b\u5931\u53bb\u5176\u5f15\u7528\uff0c\u90a3\u4e48\u8fd9\u53ef\u80fd\u88ab\u89c6\u4e3a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5b58\u5728\u903b\u8f91\u9519\u8bef\u3002
              
# ----------------------------------------------------------------------------------------------------

# {0} ObjectStore which could not safely be closed.
ObjectStore_UnsafeToFlush=CWSOM0200W: \u672a\u80fd\u5b89\u5168\u5173\u95ed\u5e26\u6709\u7b56\u7565 STRATEGY_SAVE_ONLY_ON_SHUTDOWN \u7684 ObjectStore {0}\u3002
ObjectStore_UnsafeToFlush.explanation=\u5982\u679c\u5173\u95ed\u65f6\u5b58\u5728\u6d3b\u52a8\u4e8b\u52a1\uff0c\
\u90a3\u4e48\u5e26\u6709\u7b56\u7565 STRATEGY_SAVE_ONLY_ON_SHUTDOWN \u7684 ObjectStore \u56e0\u800c\u4e0d\u80fd\u5b89\u5168\u5173\u95ed\u3002\
\u5173\u95ed\u6b64 ObjectStore \u53ef\u80fd\u5bfc\u81f4\u5b83\u4fdd\u5b58\u4e0d\u4e00\u81f4\u6570\u636e\u3002\
ObjectStore \u4f1a\u4fdd\u7559\u4e3a\u672a\u66f4\u6539\u72b6\u6001\u3002
ObjectStore_UnsafeToFlush.useraction=\u8bf7\u68c0\u67e5\u5b58\u5728\u6d3b\u52a8\u4e8b\u52a1\u7684\u539f\u56e0\u3002\
\u8fd9\u4e9b\u6d3b\u52a8\u4e8b\u52a1\u53ef\u80fd\u5b58\u5728\u662f\u56e0\u4e3a\u60a8\u6b63\u5728\u4f7f\u7528\u5916\u90e8\u4e8b\u52a1\u7ba1\u7406\u5668\u3002\
\u5982\u679c\u65e0\u6cd5\u907f\u514d\u5173\u95ed\u65f6\u5b58\u5728\u6d3b\u52a8\u4e8b\u52a1\uff0c\u8bf7\u4f7f\u7528\u5e26\u6709\u53e6\u4e00\u5b58\u50a8\u5668\u7b56\u7565\u7684 ObjectStore\u3002

# {0} Bytes required in the file system.
# {1} Bytes currently used in the file system.
# {2} Exception caught when trying to reserved the bytes.
ObjectStore_AllocateFileSpaceFailed=CWSOM0201W: ObjectStore \u5f53\u524d\u5177\u6709 {1} \u5b57\u8282\u5b58\u50a8\u7a7a\u95f4\u65f6\u8bf7\u6c42 {0} \u5b57\u8282\u5b58\u50a8\u7a7a\u95f4\uff0c\u4f46\u63a5\u6536\u5230\u5f02\u5e38 {2}\u3002
ObjectStore_AllocateFileSpaceFailed.explanation=\u6587\u4ef6\u7cfb\u7edf\u4e0d\u80fd\u5206\u914d\u6240\u9700\u7a7a\u95f4\u3002\
\u5c1d\u8bd5\u5728 ObjectStore \u4e2d\u5206\u914d\u5bf9\u8c61\u5c06\u5931\u8d25\u3002
ObjectStore_AllocateFileSpaceFailed.useraction=\u8bf7\u68c0\u67e5\u5f02\u5e38\u5e76\u786e\u5b9a\u4e0d\u80fd\u5728\u6b64\u6587\u4ef6\u7cfb\u7edf\u4e2d\u5206\u914d\u7a7a\u95f4\u7684\u539f\u56e0\u3002

# ---------------------------------------------------------------------------------------------------------------------------------
# Messages used by ObjectManagerException.
# ---------------------------------------------------------------------------------------------------------------------------------

# {0} The ClassNotFoundException that was caught by the ObjectManager.
ClassNotFoundException_info=CWSOM1001E: ObjectManager \u5c1d\u8bd5\u5bf9 ManagedObject \u6267\u884c\u53cd\u5e8f\u5217\u5316\u65f6\u6355\u83b7\u5230 ClassNotFoundException {0}(java.lang.ClassNotFoundException)\u3002
ClassNotFoundException_info.explanation=ObjectManager \u5c1d\u8bd5\u5bf9 ManagedObject \u6267\u884c\u53cd\u5e8f\u5217\u5316\u65f6\u6355\u83b7\u5230 java.lang.ClassNotFoundException\u3002
ClassNotFoundException_info.useraction=\u5f02\u5e38\u5305\u542b\u627e\u4e0d\u5230\u7684\u7c7b\u7684\u540d\u79f0\u3002\
\u5c06\u5176\u63d0\u4f9b\u7ed9 ObjectManager \u7c7b\u88c5\u5165\u5668\uff0c\u4f8b\u5982\uff0c\u901a\u8fc7\u5728\u7c7b\u8def\u5f84\u4e0a\u5305\u62ec\u6b64\u7c7b\u6587\u4ef6\u3002

# {0} The Name of the new and existing ObjectStore.
# {1} ObjectStore already using the name.
DuplicateObjectStoreNameException_info=CWSOM1002E: \u5c1d\u8bd5\u4f7f\u7528\u540d\u4e3a {0}(String) \u7684\u5b58\u50a8\u5668\u6784\u9020 ObjectStore\uff0c\u4f46\u6b64\u5b58\u50a8\u5668\u5df2\u88ab ObjectStore {1} \u4f7f\u7528\u3002
DuplicateObjectStoreNameException_info.explanation=ObjectStore \u540d\u79f0\u5728 ObjectManager \u4e2d\u5fc5\u987b\u552f\u4e00\u3002
DuplicateObjectStoreNameException_info.useraction=\u4e3a ObjectStore \u9009\u62e9\u53e6\u4e00\u540d\u79f0\u3002

# {0} Object which is not in a valid state for the operation.
# {1} The state the object was in.
# {2} The descriptive name of the state.
StateErrorException_info=CWSOM1003E: \u5bf9\u8c61 {0} \u73b0\u5728\u5904\u4e8e\u9519\u8bef\u72b6\u6001\uff0c\u5176\u5148\u524d\u65e0\u6548\u72b6\u6001\u4e3a {1}(int) {2}(String)\u3002
StateErrorException_info.explanation=\u8bf7\u6c42\u5bf9\u5176\u6267\u884c\u64cd\u4f5c\u7684\u5bf9\u8c61\u6240\u5904\u7684\u72b6\u6001\u5bf9\u6b64\u64cd\u4f5c\u65e0\u6548\u3002\
\u6b64\u64cd\u4f5c\u5931\u8d25\uff0c\u6b64\u5bf9\u8c61\u8f6c\u6362\u4e3a\u9519\u8bef\u72b6\u6001\u3002
StateErrorException_info.useraction=CMSG0002


# {0} The IOException that was caught by the ObjectManager.
PermanentIOException_info=CWSOM1004E: ObjectManager \u6355\u83b7\u5230 IOException={0}(java.io.IOException)\u3002
PermanentIOException_info.explanation=ObjectManager \u6355\u83b7\u5230 IOException\uff0cIO \u64cd\u4f5c\u672a\u80fd\u5b89\u5168\u91cd\u8bd5\u5e76\u5df2\u88ab\u653e\u5f03\u3002
PermanentIOException_info.useraction=IOException \u63cf\u8ff0\u4e86\u6b64\u7279\u5b9a\u9519\u8bef\u3002\
\u8bf7\u8c03\u67e5\u5bfc\u81f4\u5e95\u5c42 IOException \u7684\u539f\u56e0\u5e76\u8fdb\u884c\u4fee\u6b63\u3002

# {0} The IOException that was caught by the ObjectManager.
TemporaryIOException_info=CWSOM1005E: ObjectManager \u6355\u83b7\u5230 IOException={0}(java.io.IOException)\u3002
TemporaryIOException_info.explanation=ObjectManager \u6355\u83b7\u5230 IOException\uff0cIO \u64cd\u4f5c\u88ab\u653e\u5f03\uff0c\u4f46\u53ef\u5728\u4fee\u6b63\u5e95\u5c42\u539f\u56e0\u540e\u901a\u8fc7\u91cd\u8bd5 ObjectManager \u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3 (API) \u4ee5\u5b89\u5168\u65b9\u5f0f\u91cd\u8bd5\u3002
TemporaryIOException_info.useraction=IOException \u63cf\u8ff0\u4e86\u6b64\u7279\u5b9a\u9519\u8bef\u3002\
\u8bf7\u8c03\u67e5\u5bfc\u81f4\u5e95\u5c42 IOException \u7684\u539f\u56e0\u5e76\u8fdb\u884c\u4fee\u6b63\uff0c\u7136\u540e\u91cd\u8bd5\u6b64\u64cd\u4f5c\u3002

# {0} The ObjectStore being constructed.
# {1} The name.
InvalidObjectStoreNameException_info=CWSOM1006E: ObjectStore {0}(ObjectStore) \u4f20\u9012\u4e86\u65e0\u6548\u540d\u79f0 {1}(String)\u3002
InvalidObjectStoreNameException_info.explanation=\u7528\u4e8e\u6784\u9020 ObjectStore \u7684\u540d\u79f0\u65e0\u6548\u3002\
ObjectManager \u672a\u521b\u5efa ObjectStore\u3002
InvalidObjectStoreNameException_info.useraction=\u8bf7\u68c0\u67e5\u6b64\u540d\u79f0\u4ee5\u786e\u5b9a\u5bfc\u81f4\u5b83\u65e0\u6548\u7684\u539f\u56e0\u3002

# {0} The unrecognized statistics set.
StatisticsNameNotFoundException_info=CWSOM1007E: \u672a\u8bc6\u522b\u540d\u4e3a {0}(String) \u7684\u7edf\u8ba1\u4fe1\u606f\u3002
StatisticsNameNotFoundException_info.explanation=\u5e94\u7528\u7a0b\u5e8f\u8bf7\u6c42\u7684\u4e00\u7ec4\u7edf\u8ba1\u4fe1\u606f\u4e0d\u53ef\u8bc6\u522b\u3002
StatisticsNameNotFoundException_info.useraction=\u8bf7\u66f4\u6b63\u6240\u8bf7\u6c42\u7684\u7edf\u8ba1\u4fe1\u606f\u96c6\u7684\u540d\u79f0\u3002

# {0} The ObjectStore detecting the error.
# {1} The ManagedObject.
InvalidObjectToStoreException_info=CWSOM1008E: \u7cfb\u7edf\u8bf7\u6c42 ObjectStore {0}(ObjectStore) \u5b58\u50a8\u65e0\u6548 ManagedObject {1} (ManagedObject)\u3002
InvalidObjectToStoreException_info.explanation=\u7cfb\u7edf\u8981\u6c42 ObjectStore \u5b58\u50a8\u65e0\u6548 ManagedObject\u3002\
Objectstore \u672a\u5b58\u50a8\u6b64 ManagedObject\u3002
InvalidObjectToStoreException_info.useraction=\u68c0\u67e5\u8981\u5b58\u50a8\u7684 ManagedObject \u5e76\u786e\u5b9a\u5bfc\u81f4\u5b83\u65e0\u6548\u7684\u539f\u56e0\u3002\
\u4f8b\u5982\uff0c\u5b83\u53ef\u80fd\u662f\u7a7a ManagedObject\u3002

# {0} The ObjectStore reporting the sequence error.
# {1} The non unique sequence number.
# {2} The ManagedObject already using the sequence number.
StoreSequenceException_info=CWSOM1009E: ObjectStore {0}(ObjectStore) \u751f\u6210\u7684\u5e8f\u5217\u53f7 {1}(Long) \u5df2\u88ab {2}(ManagedObject) \u4f7f\u7528\u3002
StoreSequenceException_info.explanation=ObjectStore \u4e2d\u53d1\u751f\u4e86\u5185\u90e8\u9519\u8bef\u3002
StoreSequenceException_info.useraction=CMSG0002

# {0} ObjectStore throwing the replacementException.
# {1} The ManagedObject being replaced.
# {2} The Token referencing the replacement.
# {3} The existing Token attempting the replacement.
ReplacementException_info=CWSOM1010E: \u7cfb\u7edf\u8981\u6c42 ObjectStore {0} \u66ff\u6362\u6807\u8bb0 {2} \u5f15\u7528\u7684 ManagedObject {1}\uff0c\u4f46\u5b58\u50a8\u5668\u4e2d\u5df2\u5b58\u5728\u53e6\u4e00\u6807\u8bb0 {3}\u3002
ReplacementException_info.explanation=\u6807\u8bb0\u7531 objectStoreIdentifier \u548c storedObjectIdentifier \u6807\u8bc6\u3002\
\u6bcf\u4e2a\u8eab\u4efd\u5b58\u50a8\u5668\u4e2d\u53ea\u80fd\u5b58\u5728\u4e00\u4e2a\u6807\u8bb0\uff0c\u4f46\u65b0\u6807\u8bb0\u548c\u73b0\u6709\u6807\u8bb0\u5171\u7528\u540c\u4e00\u8eab\u4efd\u3002
ReplacementException_info.useraction=CMSG0002


# {0} Object which is not in a valid state for the operation.
# {1} The state the object is in.
# {2} The descriptive name of the state.
InvalidStateException_info=CWSOM1011E: \u5bf9\u8c61 {0} \u5904\u4e8e\u72b6\u6001 {1}(int) {2}(String) \u65f6\uff0c\u5c1d\u8bd5\u5bf9\u5176\u6267\u884c\u65e0\u6548\u64cd\u4f5c\u3002
InvalidStateException_info.explanation=\u5c1d\u8bd5\u5bf9\u6b64\u5bf9\u8c61\u6267\u884c\u64cd\u4f5c\u3002\
\u6b64\u5bf9\u8c61\u5904\u4e8e\u5f53\u524d\u72b6\u6001\u65f6\uff0c\u6b64\u64cd\u4f5c\u65e0\u6548\u3002\
\u4f8b\u5982\uff0c\u60a8\u53ef\u80fd\u5c1d\u8bd5\u5220\u9664\u5df2\u88ab\u5220\u9664\u7684 ManagedObject\u3002\
\u6b64\u64cd\u4f5c\u5df2\u88ab\u62d2\u7edd\u5e76\u4e14\u5bf9\u8c61\u4fdd\u6301\u672a\u66f4\u6539\u72b6\u6001\u3002
InvalidStateException_info.useraction=\u8bf7\u8c03\u67e5\u6b64\u5bf9\u8c61\u7684\u72b6\u6001\u4ee5\u53ca\u5c1d\u8bd5\u6267\u884c\u6b64\u64cd\u4f5c\u7684\u539f\u56e0\u3002

# {0} ObjecManagerState which has detected the duplicate.
# {1} The new duplicate InternalTransaction.
# {2} The old existing InternalTransaction.
DuplicateTransactionException_info=CWSOM1012E: ObjectManagerState {0}(ObjectManagerState) \
\u5c1d\u8bd5\u6ce8\u518c\u6216\u91ca\u653e\u65b0\u4e8b\u52a1 {1}(InternalTransaction)\uff0c\u8be5\u4e8b\u52a1\u7684 LogicalUnitOfWork \u6807\u8bc6\u4e0e\u4e8b\u52a1 {2}(InternalTransaction) \u7684 LogicalUnitOfWork \u6807\u8bc6\u76f8\u540c\u3002
DuplicateTransactionException_info.explanation=ObjectManager \u5df2\u53d1\u73b0\u65b0\u7684\u548c\u73b0\u6709\u4e8b\u52a1\u5177\u6709\u76f8\u540c\u4e8b\u52a1\u6807\u8bc6\u3002\u8fd9\u662f\u5185\u90e8\u9519\u8bef\uff0c\u4e0d\u5e94\u53d1\u751f\u3002
DuplicateTransactionException_info.useraction=CMSG0002


# {0} The internal transaction trying to unregister.
NonExistentTransactionException_info=CWSOM1013E: \u5c1d\u8bd5\u6ce8\u9500\u672a\u6ce8\u518c\u7684\u4e8b\u52a1 {0}(InternalTransaction)\u3002
NonExistentTransactionException_info.explanation=\u5728 ObjectManager \u5185\u90e8\u68c0\u6d4b\u5230\u5185\u90e8\u9519\u8bef\u3002\u4e0d\u5141\u8bb8\u5bf9\u6b64\u4e8b\u52a1\u6267\u884c\u8fdb\u4e00\u6b65\u64cd\u4f5c\u3002
NonExistentTransactionException_info.useraction=CMG0002

# {0} The ObjectStoreIdentifier of the ObjectStore that was not known to the ObjectManager.
NonExistentObjectStoreTemporaryIOException_info=CWSOM1014E: \u5c1d\u8bd5\u67e5\u627e\u672a\u6ce8\u518c\u7684 ObjectStore\uff0c\u5176 storeIdentifier \u4e3a {0}(int)\u3002
NonExistentObjectStoreTemporaryIOException_info.explanation=\u6807\u8bb0\u5bf9 ObjectStore \u7684\u5f15\u7528\u5bf9 ObjectManager \u662f\u672a\u77e5\u7684\u3002
NonExistentObjectStoreTemporaryIOException_info.useraction=\u5982\u679c\u4ece ObjectManager \u9664\u53bb\u4e86 ObjectStore\uff0c\u90a3\u4e48\u6bcf\u5f53\u73b0\u6709\u6807\u8bb0\u5f15\u7528\u6b64 Objectstore \u65f6\uff0c\u90fd\u5c06\u6355\u83b7\u5230\u6b64\u5f02\u5e38\u3002\
\u8bf7\u91cd\u65b0\u542f\u52a8 ObjectStore \u6216\u505c\u6b62\u4f7f\u7528\u5c1d\u8bd5\u8bbf\u95ee\u5b83\u7684\u6807\u8bb0\u3002

# {0} The Exception that was caught by the ObjectManager.
UnexpectedExceptionException_info=CWSOM1015E: ObjectManager \u610f\u5916\u6355\u83b7\u5230\u5f02\u5e38 {0}\uff08\u5f02\u5e38\uff09\u3002
UnexpectedExceptionException_info.explanation=ObjectManager \u6355\u83b7\u5230\u5f02\u5e38\uff0cObjectManager \u65e0\u6cd5\u6267\u884c\u5408\u7406\u64cd\u4f5c\u6765\u54cd\u5e94\u6b64\u5f02\u5e38\u3002
UnexpectedExceptionException_info.useraction=\u8bf7\u8c03\u67e5\u5e76\u89e3\u51b3\u5bfc\u81f4\u8be5\u5e95\u5c42\u5f02\u5e38\u7684\u539f\u56e0\u3002

# {0} The managedObject being unlocked.
# {1} Internal transaction trying to release the lock on the ManagedObject.
# {2} The existing lock on the ManagedObject.
InvalidTransactionException_info=CWSOM1016E: ManagedObject {0}(ManagedObject) \u5728 transactionLock {2}(TransactionLock) \u4e0b\u88ab\u9501\u5b9a\u65f6\uff0c\u5c1d\u8bd5\u5c06\u5176\u89e3\u9501\u6216\u5c06\u5176\u66ff\u6362\u4e3a InternalTransaction {1}(InternalTransaction)\u3002
InvalidTransactionException_info.explanation=\u5c1d\u8bd5\u89e3\u9501\u53e6\u4e00\u4e8b\u52a1\u4e0b\u7684 ManagedObject \u6216\u5c06\u5176\u66ff\u6362\u4e3a\u9501\u5b9a\u8be5\u4e8b\u52a1\u7684 ManagedObject\u3002\
\u6b64\u5c1d\u8bd5\u88ab\u62d2\u7edd\u3002
InvalidTransactionException_info.useraction=\u8bf7\u68c0\u67e5\u4f7f\u7528 ObjectManager Transaction.unlock(ManagedObject) \
\u63a5\u53e3\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u903b\u8f91\u5e76\u786e\u5b9a\u5bfc\u81f4\u8fd9\u4e24\u4e2a\u4e8b\u52a1\u4e0d\u540c\u7684\u539f\u56e0\u3002

# {0} ObjectManagerState which is unable to locate the log file.
# {1} The exception caught by the ObjectManagerState when trying to locate the log file.
# {2} The log file name.
NonExistentLogFileException_info=CWSOM1017E: ObjectManagerState {0}(ObjectManagerState) \
\u5c1d\u8bd5\u627e\u51fa\u6216\u521b\u5efa\u65e5\u5fd7\u6587\u4ef6\u540d {2}(String) \u65f6\u6355\u83b7\u5230\u5f02\u5e38 {1}(Exception)\u3002
NonExistentLogFileException_info.explanation=ObjectManager \u5c1d\u8bd5\u6253\u5f00\u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6\u65f6\u6355\u83b7\u5230\u5f02\u5e38\u3002\
ObjectManager \u5c06\u4e0d\u4f1a\u542f\u52a8\u3002
NonExistentLogFileException_info.useraction=\u8bf7\u9a8c\u8bc1\u6b64\u65e5\u5fd7\u6587\u4ef6\u540d\u662f\u5426\u6709\u6548\u5e76\u4e14 ObjectManager \u662f\u5426\u6709\u5199\u5165\u6b64\u65e5\u5fd7\u6587\u4ef6\u7684\u9002\u5f53\u8bb8\u53ef\u6743\u3002

# {0} The Object raising the exception.
# {1} The underlying Exception.
LogFileExhaustedException_info=CWSOM1018E: \u5bf9\u8c61 {0}(Object) \u68c0\u6d4b\u5230\u8f93\u5165\u65e5\u5fd7\u6587\u4ef6\u7684\u7ed3\u5c3e\uff0c\u56e0\u4e3a\u5b58\u5728\u5e95\u5c42\u5f02\u5e38 {1}(Exception)\u3002
LogFileExhaustedException_info.explanation=ObjectManager \u68c0\u6d4b\u5230\u8f93\u5165\u65e5\u5fd7\u6587\u4ef6\u7ed3\u5c3e\u3002
LogFileExhaustedException_info.useraction=\u5982\u679c\u56e0\u4e3a\u5728 ObjectManager \u91cd\u65b0\u542f\u52a8\u65f6\u8bfb\u53d6\u65e5\u5fd7\u81f3\u7ed3\u5c3e\u800c\u5bfc\u81f4\u53d1\u751f\u6b64\u5f02\u5e38\uff0c\u90a3\u4e48\u4e0d\u9700\u8981\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002

# {0} The type of logRecord that was read from the log but not recognized.
InvalidLogRecordTypeException_info=CWSOM1019E: \u4ece\u4e8b\u52a1\u65e5\u5fd7\u8bfb\u53d6\u4e86\u65e0\u6548\u65e5\u5fd7\u8bb0\u5f55\u7c7b\u578b {0}(int)\u3002
InvalidLogRecordTypeException_info.explanation=ObjectManager \u5728\u6062\u590d\u5e76\u53d1\u73b0\u5176\u7c7b\u578b\u4e0d\u53ef\u8bc6\u522b\u7684\u65e5\u5fd7\u8bb0\u5f55\uff0cObjectManager \u672a\u5b9e\u4f8b\u5316\u3002
InvalidLogRecordTypeException_info.useraction=CMSG0002


# {0} The name of the ObjectStore that is not registered with the ObjectManager.
UnknownObjectStoreException_info=CWSOM1020E: \u5c1d\u8bd5\u67e5\u627e\u672a\u6ce8\u518c\u7684 ObjectStore {0}(String)\u3002
UnknownObjectStoreException_info.explanation=\u7cfb\u7edf\u8981\u6c42 ObjectManager \u67e5\u627e\u672a\u5411\u5176\u6ce8\u518c\u7684 ObjectStore\u3002
UnknownObjectStoreException_info.useraction=\u53ef\u80fd\u5df2\u4ece ObjectManager \u4e2d\u9664\u53bb\u6b64 ObjectStore\u3002\u8bf7\u91cd\u65b0\u521b\u5efa\u6b64 ObjectStore\u3002

# {0} The Object detecting the condition that is not valid.
# {1} The variable name containing the condition that is not valid.
# {2} The data assigned to the variable giving the condition that is not valid.
InvalidConditionException_info=CWSOM1021E: {0}\uff08\u5bf9\u8c61\uff09\u68c0\u6d4b\u5230\u65e0\u6548\u6761\u4ef6\u3002\u53d8\u91cf {1} \u5305\u542b\u503c {2}\u3002
InvalidConditionException_info.explanation=\u53d1\u751f\u4e86\u5185\u90e8\u9519\u8bef\uff0c\u5e76\u4e14\u53d1\u73b0\u65e0\u6548\u6761\u4ef6\u3002
InvalidConditionException_info.useraction=CMSG0002


# {0} The name of the log file.
LogFileInUseException_info=CWSOM1022E: \u65e5\u5fd7\u6587\u4ef6\u540d {0}(String) \u5df2\u5728\u4f7f\u7528\u4e2d\u3002
LogFileInUseException_info.explanation=ObjectManager \u5c1d\u8bd5\u83b7\u53d6\u9488\u5bf9\u6b64\u65e5\u5fd7\u6587\u4ef6\u7684\u4e92\u65a5\u9501\u5b9a\uff0c\u4f46\u6b64\u65e5\u5fd7\u6587\u4ef6\u5df2\u5728\u4f7f\u7528\u4e2d\u3002
LogFileInUseException_info.useraction=\u786e\u5b9a\u662f\u5426\u6709\u53e6\u4e00 ObjectManager \u6216\u53e6\u4e00\u7a0b\u5e8f\u6b63\u5c1d\u8bd5\u4f7f\u7528\u540c\u4e00\u65e5\u5fd7\u6587\u4ef6\u3002

LogFileHeaderCorruptException_info=CWSOM1023E: \u65e5\u5fd7\u6587\u4ef6\u5177\u6709\u65e0\u6548\u5934\u3002
LogFileHeaderCorruptException_info.explanation=\u4e8b\u52a1\u65e5\u5fd7\u6587\u4ef6\u5305\u542b ObjectManager \u65e0\u6cd5\u89e3\u91ca\u7684\u6570\u636e\u3002
LogFileHeaderCorruptException_info.useraction=\u8bf7\u68c0\u67e5\u6b64\u65e5\u5fd7\u6587\u4ef6\u662f\u5426\u4e3a\u6b63\u786e\u6587\u4ef6\u3002

# {0} The current XID.
# {1} The rejected XID.
XIDModificationException_info=CWSOM1024E: \u5c1d\u8bd5\u5728\u5df2\u8bbe\u7f6e\u4e8b\u52a1 XID \u7684\u60c5\u51b5\u4e0b\u8bbe\u7f6e\u4e8b\u52a1 XID\uff0c\u73b0\u6709 XID \u4e3a {0}([]byte)\uff0c\u88ab\u62d2\u7edd XID \u4e3a {1}([]byte)\u3002
XIDModificationException_info.explanation=\u4e00\u4e2a\u4e8b\u52a1\u53ea\u80fd\u6709\u4e00\u4e2a X/Open \u4e8b\u52a1\u6807\u8bc6 XID\u3002\
\u8bbe\u7f6e\u6b64 XID \u540e\u4e0d\u80fd\u4fee\u6539\u3002
XIDModificationException_info.useraction=\u8bf7\u68c0\u67e5\u5e94\u7528\u7a0b\u5e8f\u7684\u903b\u8f91\u5e76\u786e\u5b9a\u5c1d\u8bd5\u66f4\u6539\u5e94\u7528\u7a0b\u5e8f\u5df2\u8bbe\u7f6e\u4e8b\u52a1\u7684 XID \u7684\u539f\u56e0\u3002

# {0} The length of the XID passed to the ObjectManager.
XIDTooLongException_info=CWSOM1025E: \u5c1d\u8bd5\u8bbe\u7f6e\u8fc7\u957f\u7684\u4e8b\u52a1 XID\uff0c\u6b64 XID \u7684\u957f\u5ea6\u4e3a {0}(int)\u3002
XIDTooLongException_info.explanation=X/Open \u4e8b\u52a1\u6807\u8bc6 XID \u53ef\u5177\u6709 java.lang.Short.MAX_VALUE \u6307\u5b9a\u7684\u6700\u5927\u957f\u5ea6\u3002
XIDTooLongException_info.useraction=\u8bf7\u4f7f\u7528\u8f83\u77ed XID \u957f\u5ea6\u3002

# {0} The object containing the disabled interface.
# {1} The method name of the interface that is disabled.
InterfaceDisabledExceptionException_info=CWSOM1026E: \u5c1d\u8bd5\u5728\u6e90 {0}(Object) \u4e2d\u4f7f\u7528\u5df2\u7981\u7528\u7684\u65b9\u6cd5\u540d {1}(String)\u3002
InterfaceDisabledExceptionException_info.explanation=\u5c1d\u8bd5\u4f7f\u7528\u5df2\u7981\u7528\u7684\u63a5\u53e3\u3002
InterfaceDisabledExceptionException_info.useraction=\u8bf7\u505c\u6b62\u4f7f\u7528\u6b64\u63a5\u53e3\uff0c\u6216\u5207\u6362\u81f3\u652f\u6301\u6b64\u63a5\u53e3\u7684 ObjectManager \u7248\u672c\u3002

# {0} The number of bytes to be written to the log.
# {1} The number of reserved bytes included in the request.
# {2} The number of bytes available in the log file.
LogFileFullException_info=CWSOM1027E: \u65e5\u5fd7\u6587\u4ef6\u592a\u6ee1\uff0c\u65e0\u6cd5\u5bb9\u7eb3\u603b\u5171 {0}(long) \u5b57\u8282\u7684\u6570\u636e\uff0c\u8bf7\u6c42\u5df2\u4fdd\u7559 {1}(long) \u989d\u5916\u5b57\u8282\uff0c\u5e76\u4e14\u53ef\u7528\u7a7a\u95f4\u4e3a {2}(long) \u5b57\u8282\u3002
LogFileFullException_info.explanation=\u5c1d\u8bd5\u5c06\u8d85\u8fc7\u53ef\u7528\u6587\u4ef6\u7a7a\u95f4\u6240\u5141\u8bb8\u91cf\u7684\u6570\u636e\u5199\u81f3\u65e5\u5fd7\u3002\
\u6b64\u5c1d\u8bd5\u88ab\u62d2\u7edd\uff0c\u4e8b\u52a1\u72b6\u6001\u672a\u66f4\u6539\u3002
LogFileFullException_info.useraction=\u964d\u4f4e\u60a8\u5728\u4e8b\u52a1\u4e2d\u66f4\u65b0\u7684\u5bf9\u8c61\u6570\u3002\
\u964d\u4f4e\u540c\u65f6\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u7684\u4e8b\u52a1\u6570\u3002\
\u964d\u4f4e\u60a8\u66f4\u65b0\u7684 ManagedObjects \u7684\u5927\u5c0f\u3002\
\u63d0\u9ad8\u65e5\u5fd7\u6587\u4ef6\u7684\u5927\u5c0f\u3002

# {0} The part type found in the log that is not valid.
InvalidLogRecordPartTypeException_info=CWSOM1028E: \u65e5\u5fd7\u8bb0\u5f55\u90e8\u4ef6\u7c7b\u578b {0}(byte) \u65e0\u6548\u3002
InvalidLogRecordPartTypeException_info.explanation=\u672a\u8bc6\u522b\u65e5\u5fd7\u8bb0\u5f55\u90e8\u4ef6\u4e0a\u7684\u7c7b\u578b\u6807\u5fd7\u3002
InvalidLogRecordPartTypeException_info.useraction=\u8bf7\u786e\u5b9a\u65e5\u5fd7\u6587\u4ef6\u7684\u635f\u574f\u60c5\u51b5\u5e76\u6062\u590d\u5907\u4efd\u65e5\u5fd7\u6587\u4ef6\u3002

# {0} The name of the log file.
CheckpointEndNotFoundException_info=CWSOM1029E: \u5728\u65e5\u5fd7\u6587\u4ef6 {0}(String) \u4e2d\u627e\u4e0d\u5230\u4efb\u4f55 CheckpointEndLogRecord\u3002
CheckpointEndNotFoundException_info.explanation=\u65e5\u5fd7\u6587\u4ef6\u5728\u53d1\u73b0\u68c0\u67e5\u70b9\u7ed3\u675f\u8bb0\u5f55\u4e4b\u524d\u7ed3\u675f\u3002\
\u8fd9\u4e9b\u65e5\u5fd7\u6587\u4ef6\u5e94\u5305\u542b\u81f3\u5c11\u4e00\u4e2a\u68c0\u67e5\u70b9\u5f00\u59cb\u548c\u4e00\u4e2a\u68c0\u67e5\u70b9\u7ed3\u675f\u65e5\u5fd7\u8bb0\u5f55\u3002
CheckpointEndNotFoundException_info.useraction=\u8bf7\u786e\u5b9a\u65e5\u5fd7\u6587\u4ef6\u7684\u635f\u574f\u60c5\u51b5\u5e76\u6062\u590d\u5907\u4efd\u65e5\u5fd7\u6587\u4ef6\u3002

# {0} The ObjectStore raising the exception.
# {1} The Token requesting the ManagedObject.
InMemoryObjectNotAvailableException_info=CWSOM1030E: \u8981\u6c42\u57fa\u4e8e\u5185\u5b58\u7684 ObjectStore {0} \u68c0\u7d22\u6807\u8bb0={0}(Token) \u7684 ManagedObject\uff0c\u4f46\u8be5 ManagedObject \u5c1a\u4e0d\u5728\u5185\u5b58\u4e2d\u3002

InMemoryObjectNotAvailableException_info.explanation=\u5df2\u8981\u6c42 ObjectManager \u68c0\u7d22 ManagedObject\uff0c\u8be5 ManagedObject \u5e94\u5df2\u5728\u5185\u5b58\u4e2d\uff0c\u4f46\u627e\u4e0d\u5230\u3002
InMemoryObjectNotAvailableException_info.useraction=CMSG0002

# {0} The maximum size in bytes the serialized ManagedObject should be.
# {1} The actual size in bytes of the ManagedObject in bytes.
SimplifiedSerializationSizeExceptionException_info=CWSOM1031E: \u7b80\u5316\u5e8f\u5217\u5316\u5927\u5c0f\u8d85\u8fc7\u6700\u5927\u5927\u5c0f {0}(long)\uff0c\u5b9e\u9645\u5927\u5c0f\u4e3a {1}(long)\u3002
SimplifiedSerializationSizeExceptionException_info.explanation=\u5e8f\u5217\u5316 ManagedObject \u7684\u5927\u5c0f\u8d85\u8fc7\u671f\u671b\u7684\u6700\u5927\u5927\u5c0f\u3002
SimplifiedSerializationSizeExceptionException_info.useraction=CMSG0002

# {0} The current size of the log.
# {1} The requested size of the log.
# {2} The space available in the log.
# {3} the predicted occupancy of the new log file.
# {4} The threshold occupancy above which the ObjectManager triggers a checkpoint. 
LogFileSizeTooSmallException_info=CWSOM1032E: \u65e5\u5fd7\u6587\u4ef6\u5927\u5c0f\u592a\u5c0f\uff0c\u73b0\u6709\u5927\u5c0f\u4e3a {0}(long)\uff0c\u6240\u8bf7\u6c42\u5927\u5c0f\u4e3a {1}(long)\uff0c\u53ef\u7528\u7a7a\u95f4\u4e3a {2}(long) \u9884\u8ba1\u5360\u7528\u7a7a\u95f4\u4e3a {3}(float)\uff0c\u5360\u7528\u9608\u503c\u4e3a {4}(float)\u3002
LogFileSizeTooSmallException_info.explanation=\u7cfb\u7edf\u8981\u6c42 ObjectManager \u964d\u4f4e\u4e8b\u52a1\u65e5\u5fd7\u7684\u5927\u5c0f\u3002\
\u6240\u8bf7\u6c42\u5927\u5c0f\u592a\u5c0f\uff0c\u65e0\u6cd5\u5305\u542b\u73b0\u6709\u65e5\u5fd7\u6570\u636e\u3002\
\u65b0\u5927\u5c0f\u5728\u9650\u5236\u4e4b\u4e0b\uff0c\u8fd9\u5c06\u5141\u8bb8 ObjectManager \u6b63\u5e38\u5de5\u4f5c\u800c\u4e0d\u5fc5\u8fde\u7eed\u6267\u884c\u68c0\u67e5\u70b9\u3002
LogFileSizeTooSmallException_info.useraction=\u8bf7\u53d1\u51fa\u7533\u8bf7\u8f83\u5927\u5927\u5c0f\u7684\u8bf7\u6c42\u6216\u901a\u8fc7\u5199\u5165\u8f83\u5c11\u6216\u8f83\u5c0f\u7684 ManagedObject \u6765\u964d\u4f4e\u65e5\u5fd7\u4e0a\u7684\u8d1f\u8f7d\u3002

# {0} The non empty collection.
# {1} The number of items, committed and uncommitted, in the collection.
# {2} The transaction trying to delete the collection.
CollectionNotEmptyException_info=CWSOM1033E: \u96c6\u5408 {0} \u975e\u7a7a\uff0c\u810f\u5927\u5c0f\u4e3a {1}(long)\uff0c\u4e8b\u52a1\u4e3a {2}(Transaction)\u3002
CollectionNotEmptyException_info.explanation=\u7cfb\u7edf\u8981\u6c42 ObjectManager \u5220\u9664\u975e\u7a7a\u7684\u96c6\u5408\uff08\u6620\u5c04\u6216\u5217\u8868\uff09\u3002\u6b64\u96c6\u5408\u5305\u542b\u4e00\u4e9b\u672a\u88ab\u5220\u9664\u7684\u6761\u76ee\u6216\u4e00\u4e9b\u5df2\u88ab\u5c1d\u8bd5\u5220\u9664\u6b64\u96c6\u5408\u4ee5\u5916\u7684\u4e8b\u52a1\u5220\u9664\u7684\u6761\u76ee\u3002
CollectionNotEmptyException_info.useraction=\u8bf7\u68c0\u67e5\u5e94\u7528\u7a0b\u5e8f\u7684\u903b\u8f91\u5e76\u67e5\u627e\u6b64\u4e8b\u52a1\u5c1d\u8bd5\u5220\u9664\u5305\u542b\u6761\u76ee\u7684\u96c6\u5408\u7684\u539f\u56e0\u3002

# {0} The defined maximum number of transactions.
TooManyTransactionsException_info=CWSOM1034E: \u5e94\u7528\u7a0b\u5e8f\u5c1d\u8bd5\u542f\u52a8\u7684\u4e8b\u52a1\u6570\u8d85\u8fc7\u6240\u5b9a\u4e49\u7684\u6700\u5927\u4e8b\u52a1\u6570 {0}(long)\u3002
TooManyTransactionsException_info.explanation=\u7cfb\u7edf\u8981\u6c42 ObjectManager \u542f\u52a8\u7684\u4e8b\u52a1\u6570\u8d85\u8fc7\u5176\u914d\u7f6e\u4e2d\u6307\u5b9a\u7684\u4e8b\u52a1\u6570\u3002\u65b0\u4e8b\u52a1\u672a\u5f00\u59cb\u3002
TooManyTransactionsException_info.useraction=\u8bf7\u68c0\u67e5\u5e94\u7528\u7a0b\u5e8f\u7684\u903b\u8f91\u5e76\u67e5\u627e\u6b64\u4e8b\u52a1\u5c1d\u8bd5\u542f\u52a8\u8fc7\u591a\u4e8b\u52a1\u7684\u539f\u56e0\u3002\
\u6709\u53ef\u80fd\u6b64\u5e94\u7528\u7a0b\u5e8f\u6b63\u5728\u542f\u52a8\u4e8b\u52a1\uff0c\u4f46\u672a\u5728\u843d\u5b9e\u6216\u56de\u9000\u8fd9\u4e9b\u4e8b\u52a1\u3002

# {0} The number of active transactions.
# {1} The number of transactons the ObjectManager can currently run.
TransactionCapacityExceededException_info=CWSOM1035E: \u6700\u5927\u6d3b\u52a8\u4e8b\u52a1\u6570\u5df2\u4e34\u65f6\u964d\u4f4e\uff0c\u5f53\u524d\u6d3b\u52a8\u4e8b\u52a1\u6570\u4e3a {0}(long)\uff0c\u5f53\u524d\u5bb9\u91cf\u4e3a {1}(long)\u3002
TransactionCapacityExceededException_info.explanation=\u7cfb\u7edf\u8981\u6c42 ObjectManager \u542f\u52a8\u7684\u4e8b\u52a1\u6570\u8d85\u8fc7\u53ef\u7528\u8d44\u6e90\u6240\u80fd\u652f\u6301\u7684\u4e8b\u52a1\u6570\u3002\
ObjectManager \u964d\u4f4e\u4e86\u5b83\u5c06\u542f\u52a8\u7684\u4e8b\u52a1\u6570\uff0c\u4ee5\u4fbf\u68c0\u67e5\u70b9\u53ef\u5728\u65e5\u5fd7\u6587\u4ef6\u53d8\u6ee1\u524d\u5b8c\u6210\u3002\u65b0\u4e8b\u52a1\u672a\u5f00\u59cb\u3002
TransactionCapacityExceededException_info.useraction=\u8bf7\u63d0\u9ad8\u65e5\u5fd7\u6587\u4ef6\u7684\u5927\u5c0f\u6216\u542f\u52a8\u8f83\u5c11\u4e8b\u52a1\u3002

# {0} The ObjectStore throwing the exception.
# {1} the name of the ObjectStore.
StoreFileInUseExceptionException_info=CWSOM1036E: \u540d\u79f0\u4e3a {1}(String) \u7684 ObjectStore {0}(ObjectStore) \u5df2\u5b58\u5728\u3002
StoreFileInUseExceptionException_info.explanation=ObjectStore \u5c1d\u8bd5\u5bf9\u5176\u6587\u4ef6\u6267\u884c\u4e92\u65a5\u9501\u5b9a\u65f6\u53d1\u73b0\u6b64\u6587\u4ef6\u5df2\u88ab\u9501\u5b9a\u3002
StoreFileInUseExceptionException_info.useraction=\u8bf7\u786e\u5b9a\u6b64 ObjectStore \u6587\u4ef6\u662f\u5426\u6b63\u88ab\u53e6\u4e00 ObjectManager \u6216\u53e6\u4e00\u7a0b\u5e8f\u4f7f\u7528\u3002

# {0} The Name of the log file.
# {1} The expected size of the log file.
# {2} Byte found not to exist in the physical file.
PrematureEndOfLogFileException_info=CWSOM1037E: \u53d1\u73b0\u540d\u4e3a {0}(String) \u7684\u65e5\u5fd7\u6587\u4ef6\u7684\u7269\u7406\u5927\u5c0f\u672a\u8fbe\u5230\u671f\u671b\u5927\u5c0f {1}(long)\uff0c\u5c1d\u8bd5\u8bbf\u95ee\u7684\u5b57\u8282\u6570\u4e3a {2}(Long)\u3002
PrematureEndOfLogFileException_info.explanation=\u6b64\u65e5\u5fd7\u6587\u4ef6\u672a\u6b63\u5e38\u7ed3\u675f\uff0c\u7269\u7406\u6587\u4ef6\u53ef\u80fd\u88ab\u622a\u65ad\u3002
PrematureEndOfLogFileException_info.useraction=\u8bf7\u786e\u5b9a\u6b64\u65e5\u5fd7\u6587\u4ef6\u662f\u5426\u5df2\u635f\u574f\u5e76\u6062\u590d\u539f\u59cb\u672a\u635f\u574f\u6587\u4ef6\u3002

# {0} The ObjectManager throwing the exception.
NoRestartableObjectStoresAvailableException_info=CWSOM1038E: ObjectManager {0} \u53d1\u73b0\u6ca1\u6709\u53ef\u91cd\u65b0\u542f\u52a8\u7684 ObjectStore \u53ef\u7528\u3002
NoRestartableObjectStoresAvailableException_info.explanation=\u7cfb\u7edf\u8981\u6c42 ObjectManager \u5b58\u50a8\u5bf9\u6307\u5b9a ManagedObject \u7684\u5f15\u7528\u3002\
\u4f46\u662f\uff0cObjectManager \u4e2d\u6ca1\u6709\u53ef\u91cd\u65b0\u542f\u52a8\u7684 ObjectStore \u6765\u5b58\u50a8\u6b64\u5f15\u7528\u3002
NoRestartableObjectStoresAvailableException_info.useraction=\u8bf7\u786e\u5b9a\u662f\u5426\u9700\u8981\u4f7f\u7528\u6307\u5b9a\u7684 ManagedObject\u3002\
\u5982\u679c\u786e\u5b9e\u9700\u8981\u4f7f\u7528\u6307\u5b9a\u7684 ManagedObject\uff0c\u8bf7\u521b\u5efa\u53ef\u91cd\u65b0\u542f\u52a8\u7684 ObjectStore\u3002

# {0} The key which already exists in the map.
# {1} The existing entry in the map.
# {2} The transaction locking the duplicate entry or null.
DuplicateKeyExceptionException_info=CWSOM1039E: \u91cd\u590d\u952e {0}(Object) \u4e0e\u4e8b\u52a1 {3}(InternalTransaction) \u9501\u5b9a\u7684\u73b0\u6709\u6761\u76ee {1}(Map.Entry) \u51b2\u7a81\u3002
DuplicateKeyExceptionException_info.explanation=\u5c1d\u8bd5\u5c06\u552f\u4e00\u952e\u6dfb\u52a0\u81f3\u6620\u5c04\uff0c\u4f46\u6b64\u6620\u5c04\u4e2d\u5df2\u5b58\u5728\u76f8\u540c\u952e\u3002\u73b0\u6709\u952e\u5df2\u5305\u542b\u5728\u53e6\u4e00\u4e8b\u52a1\u4e2d\uff0c\u65e0\u6cd5\u66ff\u6362\u4e3a\u65b0\u952e\u3002
DuplicateKeyExceptionException_info.useraction=\u8bf7\u4f7f\u7528 putDuplicate \u65b9\u6cd5\u8bf7\u6c42\u6dfb\u52a0\u91cd\u590d\u952e\u6216\u67e5\u660e\u6b64\u5e94\u7528\u7a0b\u5e8f\u5c1d\u8bd5\u66ff\u6362\u73b0\u6709\u952e\u7684\u539f\u56e0\u3002

# {0} Number of bytes requested in the store file.
# {1} Existing store file size in bytes.
# {2} Number of bytes currently used in the store file.
StoreFileSizeTooSmallException_info=CWSOM1040E: ObjectStore \u6587\u4ef6\u5927\u5c0f\u592a\u5c0f\uff0c\u6240\u8bf7\u6c42\u5927\u5c0f\u4e3a {0}(long)\uff0c\u73b0\u6709\u5927\u5c0f\u4e3a {1}(long)\uff0c\u5df2\u4f7f\u7528\u5927\u5c0f\u4e3a {2}(long)\u3002
StoreFileSizeTooSmallException_info.explanation=\u7cfb\u7edf\u8981\u6c42 ObjectManager \u5c06\u5b58\u50a8\u5668\u6587\u4ef6\u7684\u5927\u5c0f\u964d\u4f4e\u81f3\u65e0\u6cd5\u5305\u542b\u6b64\u6587\u4ef6\u4e2d\u73b0\u6709 ManagedObject \u7684\u957f\u5ea6\u3002
StoreFileSizeTooSmallException_info.useraction=\u53d1\u51fa\u7533\u8bf7\u8db3\u591f\u5305\u542b\u73b0\u6709 ManagedObject \u7684\u7a7a\u95f4\u7684\u8bf7\u6c42\u3002

# {0} The java.nio.XXXX Exception that was caught by the ObjectManager.
PermanentNIOException_info=CWSOM1041E: ObjectManager \u6355\u83b7\u5230\u5f02\u5e38 {0}(java.nio.XXX Exception)\u3002
PermanentNIOException_info.explanation=ObjectManager \u6355\u83b7\u5230 nio \u5f02\u5e38\uff0c\u8f93\u5165/\u8f93\u51fa\u64cd\u4f5c\u672a\u80fd\u5b89\u5168\u91cd\u8bd5\u5e76\u5df2\u88ab\u653e\u5f03\u3002
PermanentNIOException_info.useraction=\u6b64 nio \u5f02\u5e38\u5305\u542b\u5bfc\u81f4\u5e95\u5c42\u95ee\u9898\u7684\u539f\u56e0\u3002\
\u8bf7\u8c03\u67e5\u5bfc\u81f4\u5e95\u5c42 nio \u5f02\u5e38\u7684\u539f\u56e0\u5e76\u8fdb\u884c\u4fee\u6b63\u3002

# {0} The ObjectStore asked to fulfill the allocation request.
# {1} The ManagedObject requesting the allocation.
ObjectStoreFullException_info=CWSOM1042E: \u7cfb\u7edf\u5728 ObjectStore {0}(ObjectStore) \u5df2\u53d8\u6ee1\u65f6\u8981\u6c42\u5b83\u4e3a ManagedObject {1}(ManagedObject) \u5206\u914d\u7a7a\u95f4\u3002
ObjectStoreFullException_info.explanation=\u53d1\u51fa\u65b0\u7684\u5206\u914d\u8bf7\u6c42\u65f6\uff0cObjectStore \u5df2\u53d8\u6ee1\u3002\
\u5206\u914d\u8bf7\u6c42\u88ab\u62d2\u7edd\u3002
ObjectStoreFullException_info.useraction=\u51b3\u5b9a\u662f\u5426\u5e94\u589e\u5927 ObjectStore \u6216\u786e\u5b9a\u662f\u5426\u9664\u53bb\u67d0\u4e9b\u73b0\u6709\u5bf9\u8c61\u3002\
\u800c\u4e14\u60a8\u53ef\u80fd\u6b63\u5728\u5c1d\u8bd5\u5b58\u50a8\u6570\u76ee\u6216\u5927\u5c0f\u8d85\u8fc7\u8ba1\u5212\u7684\u5bf9\u8c61\u3002

# {0} The logfiletype that was passed to the ObjectManager constructor.
InvalidLogFileTypeException_info=CWSOM1043E: ObjectManager \u4f20\u9012\u7684\u65e5\u5fd7\u6587\u4ef6\u7c7b\u578b {0}(int) \u65e0\u6548\u3002
InvalidLogFileTypeException_info.explanation=ObjectManager \u6784\u9020\u51fd\u6570\u4f20\u9012\u7684\u65e5\u5fd7\u6587\u4ef6\u7c7b\u578b\u672a\u88ab\u8bc6\u522b\u4e3a LOG_FILE_TYPE_XXXX \u7c7b\u578b\u4e4b\u4e00\u3002\
ObjectManager \u672a\u5b9e\u4f8b\u5316\u3002
InvalidLogFileTypeException_info.useraction=\u8bf7\u66f4\u6539\u6784\u9020\u51fd\u6570\u8c03\u7528\u4ee5\u4f7f\u7528\u53ef\u8bc6\u522b\u7684\u65e5\u5fd7\u6587\u4ef6\u7c7b\u578b\u3002

# {0} The List from which the sublist is to be created.
# {1} The entry which is not in the list.
SubListEntryNotInListException_info=CWSOM1044E: \u7cfb\u7edf\u8981\u6c42\u5217\u8868 {0}(List) \u521b\u5efa\u7531\u5b83\u672a\u5305\u542b\u7684 List.Entry {1}(List.Entry) \u5b9a\u754c\u7684\u5b50\u5217\u8868\u3002
SubListEntryNotInListException_info.explanation=\u7cfb\u7edf\u8bf7\u6c42\u5217\u8868\u521b\u5efa\u7531\u5b83\u672a\u5305\u542b\u7684\u6761\u76ee\u5b9a\u754c\u7684\u5b50\u5217\u8868\u3002\
\u672a\u521b\u5efa\u6b64\u5b50\u5217\u8868\u3002
SubListEntryNotInListException_info.useraction=\u8bf7\u67e5\u770b\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4ee5\u786e\u5b9a\u5bfc\u81f4\u6b64\u6761\u76ee\u4e0d\u5728\u6b64\u5217\u8868\u4e2d\u7684\u539f\u56e0\u3002\
\u4f8b\u5982\uff0c\u53ef\u80fd\u5df2\u4ece\u6b64\u5217\u8868\u4e2d\u9664\u53bb\u6b64\u6761\u76ee\u3002

# {0} The List from which the sublist is to be created.
ObjectSignatureNotFoundException_info=CWSOM1045E: ObjectManager \u5c1d\u8bd5\u53cd\u5e8f\u5217\u5316\u7279\u5f81\u7b26\u4e3a {0}(int) \u7684 ManagedObject\uff0c\u6b64\u7279\u5f81\u7b26\u4e0d\u53ef\u8bc6\u522b\u3002
ObjectSignatureNotFoundException_info.explanation=\u5728 ManagedObject \u4e2d\u53d1\u73b0\u4e0d\u53ef\u8bc6\u522b\u7684\u7279\u5f81\u7b26\u3002\u56e0\u6b64\u53cd\u5e8f\u5217\u5316\u64cd\u4f5c\u88ab\u653e\u5f03\u3002
ObjectSignatureNotFoundException_info.useraction=CMSG0002

# {0} The ObjectStore being constructed.
# {1} The store strategy value that is not valid.
InvalidStoreStrategyException_info=CWSOM1046E: \u7528\u4e8e\u6784\u9020 ObjectStore {0} \u7684\u5b58\u50a8\u5668\u7b56\u7565 {1}(int) \u65e0\u6548\u3002
InvalidStoreStrategyException_info.explanation=\u53ea\u80fd\u4f7f\u7528\u6709\u6548\u5b58\u50a8\u5668\u7b56\u7565\u6765\u6784\u9020 ObjectStore\u3002
InvalidStoreStrategyException_info.useraction=\u8bf7\u4f7f\u7528\u6709\u6548\u5b58\u50a8\u5668\u7b56\u7565\u6765\u6784\u9020 ObjectStore\u3002\
\u8bf7\u53c2\u9605 ObjectManagerjavadoc \u4ee5\u4e86\u89e3\u6709\u6548\u7b56\u7565\u3002

# {0} The Name of the new ObjectStore.
# {1} The objectStoreIdentifier of the new and existing store.
# {2} ObjectStore already using the identifier.
DuplicateObjectStoreIdentifierException_info=CWSOM1047E: \u5c1d\u8bd5\u4f7f\u7528\u5b58\u50a8\u5668\u540d\u79f0 {0}(String) \u548c\u6807\u8bc6 {1} \u6765\u6784\u9020 ObjectStore\uff0c\u4f46\u6b64\u6807\u8bc6\u5df2\u88ab ObjectStore {2} \u4f7f\u7528\u3002
DuplicateObjectStoreIdentifierException_info.explanation=ObjectStore \u6807\u8bc6\u5728 ObjectManager \u4e2d\u5fc5\u987b\u552f\u4e00\u3002
DuplicateObjectStoreIdentifierException_info.useraction=\u521b\u5efa\u65b0 ObjectStore \u4e4b\u524d\uff0c\u8bf7\u5c06\u73b0\u6709 ObjectStore \u6dfb\u52a0\u81f3 ObjectManager\u3002\
\u6b64\u8fc7\u7a0b\u4f7f ObjectManager \u80fd\u591f\u907f\u514d\u91cd\u590d\u4f7f\u7528\u6b64\u6807\u8bc6\u3002

# {0} The Object discovering data corruption.
# {1} The corrupted object.
GuardBytesException_info=CWSOM1048E: \u5bf9\u8c61 {0} \u53d1\u73b0\u5bf9\u8c61 {1}(Object) \u4e2d\u7684\u6570\u636e\u5df2\u53d1\u751f\u4e86\u90e8\u5206\u635f\u574f\u3002
GuardBytesException_info.explanation=\u5bf9\u4e8e\u53d7\u4fdd\u62a4\u5b57\u8282\u4fdd\u62a4\u7684\u6570\u636e\uff0cObjectManager \u53d1\u73b0\u4fdd\u62a4\u5b57\u8282\u7684\u503c\u4e2d\u5b58\u5728\u4e0d\u5339\u914d\u3002
GuardBytesException_info.useraction=CMSG0002

# {0} The name of the ObjectStore discovering corruption in its file header.
# {1} The corrupted signature found.
# {2} The correct signature expected.
InvalidStoreSignatureException_info=CWSOM1049E: \u540d\u4e3a {0} \u7684 ObjectStore \u53d1\u73b0\u5df2\u635f\u574f\u7684\u7279\u5f81\u7b26 {1}(String) \u800c\u4e0d\u662f\u6b63\u786e\u7279\u5f81\u7b26 {2}(String)\u3002
InvalidStoreSignatureException_info.explanation=\u6b64 ObjectStore \u7684\u5934\u5df2\u635f\u574f\uff0c\u65e0\u6cd5\u5904\u7406\u6b64 ObjectStore\u3002
InvalidStoreSignatureException_info.useraction=\u8bf7\u786e\u5b9a\u6b64\u6587\u4ef6\u7684\u635f\u574f\u60c5\u51b5\u5e76\u6062\u590d\u5907\u4efd\u3002

# {0} The LogFileHeader discovering corruption in its file header.
# {1} The corrupted signature found.
# {2} The correct signature expected.
InvalidLogFileSignatureException_info=CWSOM1050E: \u5728\u65e5\u5fd7\u6587\u4ef6\u4e2d\u53d1\u73b0\u4e86\u5df2\u635f\u574f\u7684\u7279\u5f81\u7b26 {0}(String) \u800c\u4e0d\u662f\u6b63\u786e\u7279\u5f81\u7b26 {1}(String)\u3002
InvalidLogFileSignatureException_info.explanation=\u6b64\u65e5\u5fd7\u6587\u4ef6\u7684\u5934\u5df2\u635f\u574f\uff0c\u65e0\u6cd5\u5904\u7406\u6b64\u65e5\u5fd7\u6587\u4ef6\u3002
InvalidLogFileSignatureException_info.useraction=\u8bf7\u786e\u5b9a\u6b64\u6587\u4ef6\u7684\u635f\u574f\u60c5\u51b5\u5e76\u6062\u590d\u5907\u4efd\u3002

# {0} The name of the thread which is being asked to perform the request.
# {1} The name of the request the thread is being asked to perform.
ThreadNotRunningException_info=CWSOM1051E: \u7cfb\u7edf\u8981\u6c42\u7ebf\u7a0b {0} \u5728\u5df2\u505c\u6b62\u8fd0\u884c\u540e\u6267\u884c\u8bf7\u6c42 {1}\u3002
ThreadNotRunningException_info.explanation=\u53d1\u51fa\u6b64\u8bf7\u6c42\u65f6\uff0c\u6307\u5b9a\u7684\u7ebf\u7a0b\u5931\u8d25\u6216\u88ab\u8bf7\u6c42\u505c\u6b62\u3002
ThreadNotRunningException_info.useraction=CMSG0002

# {0} ObjectStore which is unable to locate the file.
# {1} The exception caught by the ObjectStore when trying to locate the file, or null.
# {2} The file name of the file that cannot be found.
NonExistentObjectStoreFileException_info=CWSOM1052E: ObjectStore {0}(ObjectStore) \u5c1d\u8bd5\u67e5\u627e\u6216\u521b\u5efa\u540d\u4e3a {2}(String) \u7684\u6587\u4ef6\u65f6\u6355\u83b7\u5230\u5f02\u5e38 {1}(Exception)\u3002
NonExistentObjectStoreFileException_info.explanation=ObjectStore \u5c1d\u8bd5\u6253\u5f00\u6307\u5b9a\u7684\u6587\u4ef6\u65f6\u6355\u83b7\u5230\u5f02\u5e38\u3002ObjectManager \u5c06\u4e0d\u4f1a\u542f\u52a8\u3002
NonExistentObjectStoreFileException_info.useraction=\u8bf7\u9a8c\u8bc1\u6b64\u6587\u4ef6\u540d\u662f\u5426\u6709\u6548\u3001\u6b64\u6587\u4ef6\u662f\u5426\u5b58\u5728\u4ee5\u53ca ObjectManager \u662f\u5426\u6709\u5199\u5165\u6b64\u65e5\u5fd7\u6587\u4ef6\u7684\u9002\u5f53\u8bb8\u53ef\u6743\u3002\
\
\u5982\u679c\u5fc5\u8981\uff0c\u8bf7\u5728 ObjectManager \u542f\u52a8\u65f6\u63d0\u4f9b\u903b\u8f91\u5b58\u50a8\u5668\u540d\u79f0\u81f3\u6b64\u6587\u4ef6\u7684\u7269\u7406\u4f4d\u7f6e\u7684\u6620\u5c04\u3002

# ----------------------------------------------------------------------------------------------------

# {0} is the text of the message.
TEMPORARY_SIOM9999=CWSOM9999E: {0}
TEMPORARY_SIOM9999.explanation=\u5982\u679c\u6b64\u6d88\u606f\u672a\u63d0\u4f9b\u8db3\u591f\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u76f8\u5173\u6d88\u606f\u4ee5\u83b7\u53d6\u8fdb\u4e00\u6b65\u5e2e\u52a9\u3002
TEMPORARY_SIOM9999.useraction=\u8bf7\u53c2\u9605\u5148\u524d\u7684\u6d88\u606f\u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002
