// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package org.omg.stub.javax.management.j2ee;

import java.io.Serializable;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.rmi.UnexpectedException;
import javax.ejb.CreateException;
import javax.ejb.EJBMetaData;
import javax.ejb.Handle;
import javax.ejb.HomeHandle;
import javax.ejb.RemoveException;
import javax.rmi.CORBA.Stub;
import javax.rmi.CORBA.Util;
import javax.rmi.PortableRemoteObject;
import org.omg.CORBA.ORB;
import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.ApplicationException;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.OutputStream;
import org.omg.CORBA.portable.RemarshalException;
import org.omg.CORBA.portable.ResponseHandler;
import org.omg.CORBA.portable.ServantObject;

import javax.management.j2ee.*  ;

public class _ManagementHome_Stub extends Stub implements ManagementHome {
    
    private static final String[] _type_ids = {
        "RMI:javax.management.j2ee.ManagementHome:0000000000000000", 
        "RMI:javax.ejb.EJBHome:0000000000000000"
    };
    
        public String[] _ids() { 
            return (String[]) _type_ids.clone();
        }
        
        public void remove(Handle arg0) throws java.rmi.RemoteException, javax.ejb.RemoveException {
            if (!Util.isLocal(this)) {
                try {
                    org.omg.CORBA_2_3.portable.InputStream in = null;
                    try {
                        OutputStream out = _request("remove__javax_ejb_Handle", true);
                        Util.writeAbstractObject(out,arg0);
                        _invoke(out);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String $_id = in.read_string();
                        if ($_id.equals("IDL:javax/ejb/RemoveEx:1.0")) {
                            throw (javax.ejb.RemoveException) in.read_value(javax.ejb.RemoveException.class);
                        }
                        throw new UnexpectedException($_id);
                    } catch (RemarshalException ex) {
                        remove(arg0);
                    } finally {
                        _releaseReply(in);
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                }
            } else {
                ServantObject so = _servant_preinvoke("remove__javax_ejb_Handle",ManagementHome.class);
                if (so == null) {
                    remove(arg0);
                    return ;
                }
                try {
                    Handle arg0Copy = (Handle) Util.copyObject(arg0,_orb());
                    ((ManagementHome)so.servant).remove(arg0Copy);
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof javax.ejb.RemoveException) {
                        throw (javax.ejb.RemoveException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
        
        public void remove(Object arg0) throws java.rmi.RemoteException, javax.ejb.RemoveException {
            if (!Util.isLocal(this)) {
                try {
                    org.omg.CORBA_2_3.portable.InputStream in = null;
                    try {
                        OutputStream out = _request("remove__java_lang_Object", true);
                        Util.writeAny(out,arg0);
                        _invoke(out);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String $_id = in.read_string();
                        if ($_id.equals("IDL:javax/ejb/RemoveEx:1.0")) {
                            throw (javax.ejb.RemoveException) in.read_value(javax.ejb.RemoveException.class);
                        }
                        throw new UnexpectedException($_id);
                    } catch (RemarshalException ex) {
                        remove(arg0);
                    } finally {
                        _releaseReply(in);
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                }
            } else {
                ServantObject so = _servant_preinvoke("remove__java_lang_Object",ManagementHome.class);
                if (so == null) {
                    remove(arg0);
                    return ;
                }
                try {
                    Object arg0Copy = (Object) Util.copyObject(arg0,_orb());
                    ((ManagementHome)so.servant).remove(arg0Copy);
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof javax.ejb.RemoveException) {
                        throw (javax.ejb.RemoveException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
        
        public EJBMetaData getEJBMetaData() throws java.rmi.RemoteException {
            if (!Util.isLocal(this)) {
                try {
                    org.omg.CORBA_2_3.portable.InputStream in = null;
                    try {
                        OutputStream out = _request("_get_EJBMetaData", true);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (EJBMetaData) in.read_value(EJBMetaData.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String $_id = in.read_string();
                        throw new UnexpectedException($_id);
                    } catch (RemarshalException ex) {
                        return getEJBMetaData();
                    } finally {
                        _releaseReply(in);
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                }
            } else {
                ServantObject so = _servant_preinvoke("_get_EJBMetaData",ManagementHome.class);
                if (so == null) {
                    return getEJBMetaData();
                }
                try {
                    EJBMetaData result = ((ManagementHome)so.servant).getEJBMetaData();
                    return (EJBMetaData)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
        
        public HomeHandle getHomeHandle() throws java.rmi.RemoteException {
            if (!Util.isLocal(this)) {
                try {
                    org.omg.CORBA_2_3.portable.InputStream in = null;
                    try {
                        OutputStream out = _request("_get_homeHandle", true);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (HomeHandle) in.read_abstract_interface();
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String $_id = in.read_string();
                        throw new UnexpectedException($_id);
                    } catch (RemarshalException ex) {
                        return getHomeHandle();
                    } finally {
                        _releaseReply(in);
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                }
            } else {
                ServantObject so = _servant_preinvoke("_get_homeHandle",ManagementHome.class);
                if (so == null) {
                    return getHomeHandle();
                }
                try {
                    HomeHandle result = ((ManagementHome)so.servant).getHomeHandle();
                    return (HomeHandle)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
        
        public Management create() throws javax.ejb.CreateException, java.rmi.RemoteException {
            if (!Util.isLocal(this)) {
                try {
                    org.omg.CORBA_2_3.portable.InputStream in = null;
                    try {
                        OutputStream out = _request("create", true);
                        in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                        return (Management) PortableRemoteObject.narrow(in.read_Object(), Management.class);
                    } catch (ApplicationException ex) {
                        in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                        String $_id = in.read_string();
                        if ($_id.equals("IDL:javax/ejb/CreateEx:1.0")) {
                            throw (javax.ejb.CreateException) in.read_value(javax.ejb.CreateException.class);
                        }
                        throw new UnexpectedException($_id);
                    } catch (RemarshalException ex) {
                        return create();
                    } finally {
                        _releaseReply(in);
                    }
                } catch (SystemException ex) {
                    throw Util.mapSystemException(ex);
                }
            } else {
                ServantObject so = _servant_preinvoke("create",ManagementHome.class);
                if (so == null) {
                    return create();
                }
                try {
                    Management result = ((ManagementHome)so.servant).create();
                    return (Management)Util.copyObject(result,_orb());
                } catch (Throwable ex) {
                    Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                    if (exCopy instanceof javax.ejb.CreateException) {
                        throw (javax.ejb.CreateException)exCopy;
                    }
                    throw Util.wrapException(exCopy);
                } finally {
                    _servant_postinvoke(so);
                }
            }
        }
    }
