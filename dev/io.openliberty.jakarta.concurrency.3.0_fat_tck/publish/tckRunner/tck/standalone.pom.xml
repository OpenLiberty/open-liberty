<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Copyright (c) 2022 IBM Corporation and others. All rights reserved.
    This program and the accompanying materials are made available under the 
    terms of the Eclipse Public License v1.0 which accompanies this distribution, 
    and is available at 
        http://www.eclipse.org/legal/epl-v10.html 
    Contributors: 
        IBM Corporation - initial API and implementation
-->
<!-- NOTE: This pom is used for Standalone Testing -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.openliberty.jakarta.enterprise.concurrent</groupId>
    <artifactId>tck.runner.tck</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>Jakarta Concurrency TCK Runner TCK Module</name>

    <properties>
    	<!-- These properties can be overwritten by users if they want to test against a snapshot version-->
        <jakarta.concurrent.tck.groupid>jakarta.enterprise.concurrent</jakarta.concurrent.tck.groupid>
        <jakarta.concurrent.tck.version>3.0.2</jakarta.concurrent.tck.version>
        
        <jakarta.concurrent.version>3.0.2</jakarta.concurrent.version>
        
        <arquillian.version>1.7.0.Alpha12</arquillian.version>
        <arquillian-wlp.version>2.1.0</arquillian-wlp.version>
        
        <testng.version>6.14.3</testng.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>

        <!--  the below is used in arquillian.xml -->
        <wlp>${wlp}</wlp>
        
        <targetDirectory>${project.basedir}/target</targetDirectory>
    </properties>

	<repositories>
		<!-- For artifacts not yet in Maven Central -->
		<!-- Enable the following during development of a vNext release to use a staged TCK rather than a local -SNAPSHOT
		<repository>
			<id>sonatype-nexus-staging</id>
			<name>Sonatype Nexus Staging</name>
			<url>https://jakarta.oss.sonatype.org/content/repositories/staging/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		-->
	</repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${arquillian.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- TCK Dependency -->
        <dependency>
		    <groupId>${jakarta.concurrent.tck.groupid}</groupId>
		    <artifactId>jakarta.enterprise.concurrent-tck</artifactId>
		    <version>${jakarta.concurrent.tck.version}</version>
        </dependency>
        <!-- API Dependency -->
        <dependency>
            <groupId>${jakarta.concurrent.groupid}</groupId>
            <artifactId>jakarta.enterprise.concurrent-api</artifactId>
            <version>${jakarta.concurrent.version}</version>
        </dependency>
		<!-- Other API Dependencies -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>5.0.0</version>
        </dependency>
	    <!-- TEST DEPENDENCIES -->
        <dependency>
            <groupId>io.openliberty.arquillian</groupId>
            <artifactId>arquillian-liberty-managed-jakarta-testng</artifactId>
            <version>${arquillian-wlp.version}</version>
            <type>pom</type>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.beust</groupId>
                    <artifactId>jcommander</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
            <version>1.78</version>
        </dependency>
        <dependency>
            <groupId>org.netbeans.tools</groupId>
            <artifactId>sigtest-maven-plugin</artifactId>
            <version>1.6</version>
        </dependency>
    </dependencies>

    <build>
        <directory>${targetDirectory}</directory>
        <defaultGoal>clean test</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.9</version>
                <executions>
                    <execution>
                        <id>build-classpath</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>build-classpath</goal>
                        </goals>
                        <configuration>
                            <!-- configure the plugin here -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.17</version> <!-- Any changes to the surefire version must be tested against ZOS -->
                <configuration>
                    <argLine>-Dfile.encoding=${project.build.sourceEncoding} -Dcom.ibm.tools.attach.enable=yes</argLine> <!-- Needed for ZOS. sourceEncoding is needed becuase arquillian calls string.getBtytes(). Attach is needed becuase because arquillian uses com.sun.tools.attach to find VMs -->
                    <systemPropertyVariables>
                        <wlp>${wlp}</wlp>
                        <tck_server>${tck_server}</tck_server>
                        <tck_hostname>${tck_hostname}</tck_hostname>
                        <tck_username>${tck_username}</tck_username>
                        <tck_password>${tck_password}</tck_password>
                        <tck_port>${tck_port}</tck_port>
                        <tck_port>${tck_port_secure}</tck_port>
                        <sun.rmi.transport.tcp.responseTimeout>${sun.rmi.transport.tcp.responseTimeout}</sun.rmi.transport.tcp.responseTimeout>
                    </systemPropertyVariables>
                    <suiteXmlFiles>
                        <suiteXmlFile>${suiteXmlFile}</suiteXmlFile> <!-- provided by runtime property -->
                    </suiteXmlFiles>
                    <testSourceDirectory>${basedir}${file.separarator}src${file.separarator}main${file.separarator}java${file.separarator}</testSourceDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>