//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.06.20 at 10:41:30 AM CDT 
//


package org.apache.cxf.transports.http.configuration;

import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import org.apache.cxf.wsdl.TExtensibilityElementImpl;


/**
 * Properties used for configuring a server-side HTTP prort
 * 
 * <p>Java class for HTTPServerPolicy complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="HTTPServerPolicy">
 *   &lt;complexContent>
 *     &lt;extension base="{http://schemas.xmlsoap.org/wsdl/}tExtensibilityElement">
 *       &lt;attribute name="ReceiveTimeout" type="{http://www.w3.org/2001/XMLSchema}unsignedInt" default="30000" />
 *       &lt;attribute name="SuppressClientSendErrors" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="SuppressClientReceiveErrors" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="HonorKeepAlive" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;attribute name="KeepAliveParameters" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="RedirectURL" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="CacheControl" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="ContentLocation" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="ContentType" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="ContentEncoding" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="ServerType" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "HTTPServerPolicy")
public class HTTPServerPolicy
    extends TExtensibilityElementImpl
{

    @XmlAttribute(name = "ReceiveTimeout")
    @XmlSchemaType(name = "unsignedInt")
    protected Long receiveTimeout;
    @XmlAttribute(name = "SuppressClientSendErrors")
    protected Boolean suppressClientSendErrors;
    @XmlAttribute(name = "SuppressClientReceiveErrors")
    protected Boolean suppressClientReceiveErrors;
    @XmlAttribute(name = "HonorKeepAlive")
    protected Boolean honorKeepAlive;
    @XmlAttribute(name = "KeepAliveParameters")
    protected String keepAliveParameters;
    @XmlAttribute(name = "RedirectURL")
    protected String redirectURL;
    @XmlAttribute(name = "CacheControl")
    protected String cacheControl;
    @XmlAttribute(name = "ContentLocation")
    protected String contentLocation;
    @XmlAttribute(name = "ContentType")
    protected String contentType;
    @XmlAttribute(name = "ContentEncoding")
    protected String contentEncoding;
    @XmlAttribute(name = "ServerType")
    protected String serverType;
    @XmlTransient
    protected PropertyChangeSupport propertyListener = new PropertyChangeSupport(this);

    /**
     * Gets the value of the receiveTimeout property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public long getReceiveTimeout() {
        if (receiveTimeout == null) {
            return  30000L;
        } else {
            return receiveTimeout;
        }
    }

    /**
     * Sets the value of the receiveTimeout property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setReceiveTimeout(long value) {
        propertyListener.firePropertyChange("receiveTimeout", this.receiveTimeout, value);
        this.receiveTimeout = value;
    }

    public boolean isSetReceiveTimeout() {
        return (this.receiveTimeout!= null);
    }

    public void unsetReceiveTimeout() {
        this.receiveTimeout = null;
    }

    /**
     * Gets the value of the suppressClientSendErrors property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isSuppressClientSendErrors() {
        if (suppressClientSendErrors == null) {
            return false;
        } else {
            return suppressClientSendErrors;
        }
    }

    /**
     * Sets the value of the suppressClientSendErrors property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSuppressClientSendErrors(boolean value) {
        propertyListener.firePropertyChange("suppressClientSendErrors", this.suppressClientSendErrors, ((Boolean) value));
        this.suppressClientSendErrors = value;
    }

    public boolean isSetSuppressClientSendErrors() {
        return (this.suppressClientSendErrors!= null);
    }

    public void unsetSuppressClientSendErrors() {
        this.suppressClientSendErrors = null;
    }

    /**
     * Gets the value of the suppressClientReceiveErrors property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isSuppressClientReceiveErrors() {
        if (suppressClientReceiveErrors == null) {
            return false;
        } else {
            return suppressClientReceiveErrors;
        }
    }

    /**
     * Sets the value of the suppressClientReceiveErrors property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSuppressClientReceiveErrors(boolean value) {
        propertyListener.firePropertyChange("suppressClientReceiveErrors", this.suppressClientReceiveErrors, ((Boolean) value));
        this.suppressClientReceiveErrors = value;
    }

    public boolean isSetSuppressClientReceiveErrors() {
        return (this.suppressClientReceiveErrors!= null);
    }

    public void unsetSuppressClientReceiveErrors() {
        this.suppressClientReceiveErrors = null;
    }

    /**
     * Gets the value of the honorKeepAlive property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isHonorKeepAlive() {
        if (honorKeepAlive == null) {
            return true;
        } else {
            return honorKeepAlive;
        }
    }

    /**
     * Sets the value of the honorKeepAlive property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setHonorKeepAlive(boolean value) {
        propertyListener.firePropertyChange("honorKeepAlive", this.honorKeepAlive, ((Boolean) value));
        this.honorKeepAlive = value;
    }

    public boolean isSetHonorKeepAlive() {
        return (this.honorKeepAlive!= null);
    }

    public void unsetHonorKeepAlive() {
        this.honorKeepAlive = null;
    }

    /**
     * Gets the value of the keepAliveParameters property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getKeepAliveParameters() {
        return keepAliveParameters;
    }

    /**
     * Sets the value of the keepAliveParameters property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setKeepAliveParameters(String value) {
        propertyListener.firePropertyChange("keepAliveParameters", this.keepAliveParameters, value);
        this.keepAliveParameters = value;
    }

    public boolean isSetKeepAliveParameters() {
        return (this.keepAliveParameters!= null);
    }

    /**
     * Gets the value of the redirectURL property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRedirectURL() {
        return redirectURL;
    }

    /**
     * Sets the value of the redirectURL property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRedirectURL(String value) {
        propertyListener.firePropertyChange("redirectURL", this.redirectURL, value);
        this.redirectURL = value;
    }

    public boolean isSetRedirectURL() {
        return (this.redirectURL!= null);
    }

    /**
     * Gets the value of the cacheControl property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCacheControl() {
        return cacheControl;
    }

    /**
     * Sets the value of the cacheControl property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCacheControl(String value) {
        propertyListener.firePropertyChange("cacheControl", this.cacheControl, value);
        this.cacheControl = value;
    }

    public boolean isSetCacheControl() {
        return (this.cacheControl!= null);
    }

    /**
     * Gets the value of the contentLocation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getContentLocation() {
        return contentLocation;
    }

    /**
     * Sets the value of the contentLocation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setContentLocation(String value) {
        propertyListener.firePropertyChange("contentLocation", this.contentLocation, value);
        this.contentLocation = value;
    }

    public boolean isSetContentLocation() {
        return (this.contentLocation!= null);
    }

    /**
     * Gets the value of the contentType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getContentType() {
        return contentType;
    }

    /**
     * Sets the value of the contentType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setContentType(String value) {
        propertyListener.firePropertyChange("contentType", this.contentType, value);
        this.contentType = value;
    }

    public boolean isSetContentType() {
        return (this.contentType!= null);
    }

    /**
     * Gets the value of the contentEncoding property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getContentEncoding() {
        return contentEncoding;
    }

    /**
     * Sets the value of the contentEncoding property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setContentEncoding(String value) {
        propertyListener.firePropertyChange("contentEncoding", this.contentEncoding, value);
        this.contentEncoding = value;
    }

    public boolean isSetContentEncoding() {
        return (this.contentEncoding!= null);
    }

    /**
     * Gets the value of the serverType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getServerType() {
        return serverType;
    }

    /**
     * Sets the value of the serverType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setServerType(String value) {
        propertyListener.firePropertyChange("serverType", this.serverType, value);
        this.serverType = value;
    }

    public boolean isSetServerType() {
        return (this.serverType!= null);
    }

    public void addPropertyChangeListener(PropertyChangeListener listener) {
        propertyListener.addPropertyChangeListener(listener);
    }

    public void removePropertyChangeListener(PropertyChangeListener listener) {
        propertyListener.removePropertyChangeListener(listener);
    }

}
