/*******************************************************************************
 * Copyright (c) 2022, 2024 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *******************************************************************************/
apply from: '../wlp-gradle/subprojects/maven-central-mirror.gradle'

def grpcVersion='1.68.0'

configurations {
  telemetryAgent
  telemetryAgent129
  telemetryAgent210
  jaegerClient
  zipkinTracer
}

dependencies {
  requiredLibs 'io.grpc:grpc-api:' + grpcVersion
  requiredLibs 'io.grpc:grpc-core:' + grpcVersion
  requiredLibs 'io.grpc:grpc-context:' + grpcVersion
  requiredLibs 'io.grpc:grpc-netty:' + grpcVersion
  requiredLibs 'io.grpc:grpc-protobuf:' + grpcVersion
  requiredLibs 'io.grpc:grpc-protobuf-lite:' + grpcVersion
  requiredLibs 'io.grpc:grpc-stub:' + grpcVersion
  requiredLibs 'com.google.protobuf:protobuf-java:3.19.2'
  requiredLibs 'com.google.protobuf:protobuf-java-util:3.19.2'
  requiredLibs 'io.opentelemetry:opentelemetry-api:1.19.0'
  requiredLibs 'io.opentelemetry:opentelemetry-semconv:1.19.0-alpha'
  requiredLibs 'io.opentelemetry.semconv:opentelemetry-semconv:1.23.1-alpha'
  requiredLibs 'io.perfmark:perfmark-api:0.23.0'
  requiredLibs 'com.google.guava:failureaccess:1.0.1'
  requiredLibs project(':com.ibm.ws.com.google.guava')
  requiredLibs project(':io.openliberty.io.netty')
  requiredLibs project(':com.ibm.ws.io.reactivex.rxjava.2.2')
  requiredLibs project(':com.ibm.websphere.org.reactivestreams.reactive-streams.1.0')
  requiredLibs project(':io.openliberty.microprofile.telemetry.internal_fat.common')
  
  telemetryAgent 'io.opentelemetry.javaagent:opentelemetry-javaagent:1.19.0'
  
  telemetryAgent129 'io.opentelemetry.javaagent:opentelemetry-javaagent:1.29.0'
  
  telemetryAgent210 'io.opentelemetry.javaagent:opentelemetry-javaagent:2.0.0'
  
  //Needed for opentracingZipkin-0.33 user feature
  zipkinTracer 'net.wasdev.wlp.tracer:liberty-opentracing-zipkintracer:3.0:sample@zip'
  
  // Jaeger Client is needed for testing with mpOpenTracing-3.0
  jaegerClient 'io.opentracing:opentracing-util:0.33.0'
  jaegerClient 'io.opentracing:opentracing-noop:0.33.0'
  jaegerClient 'io.jaegertracing:jaeger-core:1.6.0'
  jaegerClient 'io.jaegertracing:jaeger-thrift:1.6.0'
  jaegerClient 'io.jaegertracing:jaeger-client:1.6.0'
  jaegerClient 'io.jaegertracing:jaeger-tracerresolver:1.6.0'
  jaegerClient 'org.apache.thrift:libthrift:0.14.1'
  jaegerClient project(':com.ibm.ws.org.slf4j.api')
  jaegerClient project(':com.ibm.ws.org.slf4j.simple')
  jaegerClient project(':io.openliberty.com.google.gson')
  jaegerClient 'com.squareup.okio:okio-jvm:3.0.0'
  jaegerClient 'com.squareup.okhttp3:okhttp:4.10.0'
  jaegerClient 'org.jetbrains.kotlin:kotlin-stdlib:1.6.20'
  jaegerClient 'org.jetbrains.kotlin:kotlin-stdlib-common:1.6.20'
}

task addAgent(type: Copy) {
  from configurations.telemetryAgent
  into new File(autoFvtDir, 'publish/files/agent-119')
  rename { 'opentelemetry-javaagent.jar' }
}

task addAgent129(type: Copy) {
  from configurations.telemetryAgent129
  into new File(autoFvtDir, 'publish/files/agent-129')
  rename { 'opentelemetry-javaagent.jar' }
}


task addAgent210(type: Copy) {
  from configurations.telemetryAgent210
  into new File(autoFvtDir, 'publish/files/agent-210')
  rename { 'opentelemetry-javaagent.jar' }
}

task addJaegerClientLibs (type: Copy) {
    into new File(autoFvtDir, 'publish/servers/crossFeatureOpenTracingServer/jaegerLib')
    from configurations.jaegerClient
}

task extractZipkinTracer(type:Sync) {
    configurations.zipkinTracer.each {
        from(zipTree(it))
    }
    into('build/liberty-opentracing-zipkintracer')
}

task copyZipkinTracer(type: Copy){
  dependsOn extractZipkinTracer
  from('build/liberty-opentracing-zipkintracer/extension/lib')

  into new File(autoFvtDir, 'publish/bundles')
}

jar.dependsOn extractZipkinTracer
addRequiredLibraries.dependsOn copyTestContainers
addRequiredLibraries.dependsOn addJakartaTransformer
addRequiredLibraries.dependsOn addAgent
addRequiredLibraries.dependsOn addAgent129
addRequiredLibraries.dependsOn addAgent210
addRequiredLibraries.dependsOn addJaegerClientLibs
addRequiredLibraries.dependsOn copyZipkinTracer