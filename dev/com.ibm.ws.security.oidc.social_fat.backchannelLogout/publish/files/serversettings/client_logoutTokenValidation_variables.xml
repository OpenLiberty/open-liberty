<!--
    Copyright (c) 2022 IBM Corporation and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
   
    Contributors:
        IBM Corporation - initial API and implementation
 -->	
 <server>
 	<variable name="HS384" value="HS256"/>  <!-- setting the sig alg to HS256 so we can login - the test will reset the value to HS384 before the logout is called to valudate the logout_token -->
	<variable name="HS512" value="HS256"/>  <!-- setting the sig alg to HS256 so we can login - the test will reset the value to HS384 before the logout is called to valudate the logout_token -->
	<variable name="RS384" value="RS256"/>  <!-- setting the sig alg to RS256 so we can login - the test will reset the value to HS384 before the logout is called to valudate the logout_token -->
	<variable name="RS512" value="RS256"/>  <!-- setting the sig alg to RS256 so we can login - the test will reset the value to HS384 before the logout is called to valudate the logout_token -->
	<variable name="ES256" value="RS256"/>  <!-- setting the sig alg to RS256 so we can login - the test will reset the value to HS384 before the logout is called to valudate the logout_token -->
	<variable name="ES384" value="RS256"/>  <!-- setting the sig alg to RS256 so we can login - the test will reset the value to HS384 before the logout is called to valudate the logout_token -->
	<variable name="ES512" value="RS256"/>  <!-- setting the sig alg to RS256 so we can login - the test will reset the value to HS384 before the logout is called to valudate the logout_token -->
<!-- The OP doesn't support encryption, but the RP does - the tests will disable encryption during the login, and then enable it before we try to validate the logout_token -->
	<variable name="RS256_keyMgmtAlias" value=""/>  <!-- setting the keyManagemenKeyAlias to "" so that the client doesn't expect an encrypted access_token, the test will update the value before trying to validate the logout_token -->
	<variable name="RS384_keyMgmtAlias" value=""/>  <!-- setting the keyManagemenKeyAlias to "" so that the client doesn't expect an encrypted access_token, the test will update the value before trying to validate the logout_token -->
	<variable name="RS512_keyMgmtAlias" value=""/>  <!-- setting the keyManagemenKeyAlias to "" so that the client doesn't expect an encrypted access_token, the test will update the value before trying to validate the logout_token -->
	<variable name="ES256_keyMgmtAlias" value=""/>  <!-- setting the keyManagemenKeyAlias to "" so that the client doesn't expect an encrypted access_token, the test will update the value before trying to validate the logout_token -->
	<variable name="ES384_keyMgmtAlias" value=""/>  <!-- setting the keyManagemenKeyAlias to "" so that the client doesn't expect an encrypted access_token, the test will update the value before trying to validate the logout_token -->
	<variable name="ES512_keyMgmtAlias" value=""/>  <!-- setting the keyManagemenKeyAlias to "" so that the client doesn't expect an encrypted access_token, the test will update the value before trying to validate the logout_token -->
</server>