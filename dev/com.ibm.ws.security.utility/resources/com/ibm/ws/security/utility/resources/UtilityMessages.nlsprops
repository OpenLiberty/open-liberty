###############################################################################
# Copyright (c) 2010 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License 2.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-2.0/
# 
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#CMVCPATHNAME com.ibm.ws.security.utility/resources/com/ibm/ws/security/utility/resources/UtilityMessages.nlsprops
#ISMESSAGEFILE TRUE
#NLS_ENCODING=UNICODE
# NLS_MESSAGEFORMAT_VAR
#

error=Error: {0}
error.inputConsoleNotAvailable=Input console is not available.
error.missingIO=Error, missing I/O device: {0}.
error.consoleError=Error while reading console input: {0}

usage=Usage: {0}
task.unknown=Unknown task: {0}


#------------------------------\n at 72 chars -- leading tab-----------\n\#
# Common messages
tooManyArgs=Too many arguments.
insufficientArgs=Insufficient arguments.
invalidArg=Invalid argument {0}.
missingArg=Missing argument {0}.
missingValue=Missing value for argument {0}.
missingArg2=Either the {0} argument or the {1} argument must be provided.
exclusiveArg=The {0} argument or the {1} argument must be specified, but not both.
serverNotFound=Specified server {0} could not be found at location {1}


encode.enterText=Enter text:
encode.reenterText=Re-enter text:
encode.readError=Error reading in text.
encode.entriesDidNotMatch=Entries did not match.


password.enterText=Enter password:
password.reenterText=Re-enter password:
password.readError=Error reading in password.
password.entriesDidNotMatch=Passwords did not match.

name=name
days=days

sslCert.abort=Aborting certificate creation:
sslCert.createFailed=Unable to create default SSL certificate:\n{0}
sslCert.errorEncodePassword=Error encoding password (certificate not created):\n{0}
sslCert.createKeyStore=Creating keystore {0}\n
sslCert.oneType=The {0} and {1} arguments can not be specified at the same time.
sslCert.clientNotFound=Specified client {0} could not be found at location {1}

#------------------------------\n at 72 chars -- leading tab-----------\n\#
sslCert.serverXML=\
Created SSL certificate for server {0}. The certificate is created with {1} as the SubjectDN.\n\
\n\
Add the following lines to the server.xml to enable SSL:

#------------------------------\n at 72 chars -- leading tab-----------\n\#
sslCert.clientXML=\
Created SSL certificate for client {0}. The certificate is created with {1} as the SubjectDN.\n\
\n\
Add the following lines to the client.xml to enable SSL:

fileUtility.failedDirCreate=Failed to create directory {0}
file.exists=The {0} keystore file already exists.  Unable to create a keystore file in that location.
file.requiredDirNotCreated=Could not create required directory structure for {0}


#------------------------------\n at 72 chars -- leading tab-----------\n\#
# The following string will be appended after encode.option-desc.encoding
# message in UtilityOptions.nlsprops file.
encode.option-custom.encryption=\
\n\tThe custom password encryption is also available.
encode.option-desc.custom.feature=\
\n\tThe feature name of {0} is as follows:\n\t
encode.option-desc.custom.description=\
\n\tThe description of {0} is as follows:\n\t

# The following message is shown when there is no custom password
# encryption is enabled.
no.custom.encyption=The custom password encryption is not detected.

# The following messages are for retrieving an encryption key from a 
# SAF keyring.
saf.label.does.not.exist=The {0} label does not exist in the {1} keyring. Unable to find a valid key for AES password encryption.
saf.cert.is.not.key=The {0} certificate is not a key entry. The certificate must be a key entry to use it as an AES password encryption key.
saf.cert.expired=The {0} certificate is expired and cannot be used as an AES password encryption key.
saf.keyring.does.not.exist=The {0} keystore does not exist. No certificate can be retrieved from the keystore to use as the AES password encryption key.
saf.arg.not.onZ=The --keyring, --keyringType, and --keyLabel arguments can be used only on z/OS.
saf.arg.not.aes=The --keyring, --keyringType, and --keyLabel arguments can be used with only with AES encoding. 




#------------------------------\n at 72 chars -- leading tab-----------\n\#
# Note to translator: 'LTPA' should not be translated
createLTPAKeys.abort=Aborting LTPA key file creation:
createLTPAKeys.fileExists=The {0} file already exists.  Unable to create a LTPA keys file in that location.
createLTPAKeys.createdFile=Created LTPA keys file: {0}\n\
Include the following configuration to your server.xml\n\
{1}\n

#------------------------------\n at 72 chars -- leading tab-----------\n\#
importSigner.confirm=Add signer to the trust store now? (y/n)
importSigner.invalidPort=The provided port {0} is not a number.
importSigner.noCertsFound=No certificates were found to import at {0} and {1}.
importSigner.imported=Certificate was successfully imported into {0}.
importSigner.alwaysImport=The command line specified to import the certificate with no checks.
importSigner.failWritingKeystore=An error occurred writing {0}. Error was: {1}
importSigner.nomatch=The hash of the provided certificate did not match the accepted one.
