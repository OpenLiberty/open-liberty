###############################################################################
# Copyright (c) 2021 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#CMVCPATHNAME com.ibm.ws.security.saml.sso-2.00/resources/OSGI-INF/l10n/metatype.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#

saml.sso20.conf=SAML Web SSO 2.0 Authentication
saml.sso20.conf.desc=Controls the operation of the Security Assertion Markup Language Web SSO 2.0 Mechanism.

wantAssertionsSigned=Sign SAML assertion
wantAssertionsSigned.desc=Indicates a requirement for the <saml:Assertion> elements received by this service provider to contain a Signature element that signs the Assertion.

signatureMethodAlgorithm=Signature algorithm
signatureMethodAlgorithm.desc=Indicates the required algorithm by this service provider.

signatureMethodAlgorithm.SHA1=SHA-1 signature algorithm
signatureMethodAlgorithm.SHA256=SHA-256 signature algorithm

authnRequestsSigned=Sign the samlp:AuthnRequest messages
authnRequestsSigned.desc=Indicates whether the <samlp:AuthnRequest> messages sent by this service provider will be signed.

forceAuthn=IdP forces user to re-authenticate
forceAuthn.desc=Indicates whether the IdP should force the user to re-authenticate.

isPassive=IdP controls the interface of end user
isPassive.desc=Indicates IdP must not take control of the end user interface.

allowCreate=Allow create new account
allowCreate.desc=Allow the IdP to create a new account if the requesting user does not have one.

authnContextClassRef=Authentication context class reference
authnContextClassRef.desc=A URI reference identifying an authentication context class that describes the authentication context declaration. The default is null.

authnContextComparisonType=The comparison type
authnContextComparisonType.desc=When an authnContextClassRef is specified, the authnContextComparisonType can be set.

authnContextComparisonType.minimum=Minimum. The authentication context in the authentication statement must be at least as strong as one of the authentication contexts specified.
authnContextComparisonType.better=Better. The authentication context in the authentication statement must be stronger than any one of the authentication contexts specified.
authnContextComparisonType.maximum=Maximum. The authentication context in the authentication statement must be as strong as possibe without exceeding the strength of at least one of the authentication contexts specified.
authnContextComparisonType.exact=Exact. The authentication context in the authentication statement must be an exact match of at least one of the authentication contexts specified.

idpMetadata=IdP metadata file
idpMetadata.desc=Specifies the IdP metadata file.

keyStoreRef=Keystore reference
keyStoreRef.desc=A keystore containing the private key for the signing of the AuthnRequest, and the decryption of EncryptedAssertion element. The default is the server's default.

keyAlias=Key alias name
keyAlias.desc=Key alias name to locate the private key for signing and decryption. This is optional if the keystore has exactly one key entry, or if it has one key with an alias of 'samlsp'.

keyPassword=Private key password
keyPassword.desc=The password of the private key of the keyStoreRef.

# keyPassword - this ought to be included in the KeyStore element already.

trustStoreRef=Trust keystore or anchor reference
trustStoreRef.desc=A keystore containing the public key necessary for verifying the signature of the SAMLResponse and Assertion.

# trustAlias=Trust alias name
# trustAlias.desc=The key alias name to locate a public key for signature validation with asymmetric algorithm.

loginPageURL=User defined login page URL
loginPageURL.desc=Specifies the SAML IdP login application URL to which an unauthenticated request is redirected. This attribute triggers IdP-initiated SSO, and it is only required for IdP-initiated SSO.

errorPageURL=SAML validation error URL
errorPageURL.desc=Specifies an error page to be displayed if the SAML validation fails. If this attribute is not specified, and the received SAML is invalid, the user will be redirected back to the SAML IdP to restart SSO.

clockSkew=The time difference allowed between systems
clockSkew.desc=This is used to specify the allowed clock skew in minutes when validating the SAML token.

tokenReplayTimeout=The timeout value to prevent token replay
tokenReplayTimeout.desc=This property is used to specify how long the Liberty SP should prevent token replay.

sessionNotOnOrAfter=The default SAML session timeout value
sessionNotOnOrAfter.desc=Indicates an upper bound on SAML session durations, after which the Liberty SP should ask the user to re-authenticate to the IdP. If the SAML token returned from the IdP does not contain a sessionNotOnOrAfter assertion, the value specified by this attribute is used. This property is only used if disableLtpaCookie=true. The default value is true.

userIdentifier=Principal identifier
userIdentifier.desc=Specifies a SAML attribute that is used as the user principal name in the subject. If no value is specified, the NameID SAML assertion element value is used.

groupIdentifier=Group identifier
groupIdentifier.desc=Specifies a SAML attribute that is used as the name of the group that the authenticated principal is a member of. There is no default value.

# do not translate userIdentifier
userUniqueIdentifier=Unique identifier
userUniqueIdentifier.desc=Specifies a SAML attribute that is used as the unique user name as it applies to the WSCredential in the subject. The default is the same as the userIdentifier attribute value.

# do not translate issuer
realmIdentifier=Realm identifier
realmIdentifier.desc=Specifies a SAML attribute that is used as the realm name. If no value is specified, the Issuer SAML assertion element value is used.

includeTokenInSubject=Include SAML assertion in the subject
includeTokenInSubject.desc=Specifies whether to include a SAML assertion in the subject.

# do not translate No, User, Group
mapToUserRegistry=Map a SAML identity to a registry user
mapToUserRegistry.desc=Specifies how to map an identity to a registry user. The options are No, User, and Group. The default is No, and the user registry is not used to create the user subject.

mapToUserRegistry.USER=Map a SAML identity to a user defined in the registry
mapToUserRegistry.NO=Do not map a SAML identity to a user or group in the registry
mapToUserRegistry.GROUP=Map a SAML identity to a group defined in the user registry

authFilterRef=Authentication Filter Reference
authFilterRef$Ref=Authentication filter reference
authFilterRef.desc=Specifies the authentication filter reference.

nameIDFormat=Unique identifier of name id format
nameIDFormat.desc=Specifies the URI reference corresponding to a name identifier format defined in the SAML core specification.

# do not translate from nameIDFormat.UNSPECIFIED to nameIDFormat.TRANSIENT
nameIDFormat.UNSPECIFIED=urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
nameIDFormat.EMAIL=urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
nameIDFormat.X509SUBJECTNAME=urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName
nameIDFormat.WINDOWSDOMAIN=urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName
nameIDFormat.KERBEROS=urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos
nameIDFormat.ENTITY=urn:oasis:names:tc:SAML:2.0:nameid-format:entity
nameIDFormat.PERSISTENT=urn:oasis:names:tc:SAML:2.0:nameid-format:persistent
nameIDFormat.ENCRYPTED=urn:oasis:names:tc:SAML:2.0:nameid-format:encrypted
nameIDFormat.TRANSIENT=urn:oasis:names:tc:SAML:2.0:nameid-format:transient

# Please translate
nameIDFormat.CUSTOMIZE=Customized Name ID Format.

customizeNameIDFormat=Customized XML name space of name id format
customizeNameIDFormat.desc=Specifies the customized URI reference corresponding to a name identifier format that is not defined in the SAML core specification.

disableLtpaCookie=Disable LTPA token
disableLtpaCookie.desc=Do not create an LTPA Token during processing of the SAML Assertion. Create a cookie of the specific Service Provider instead.

spCookieName=SAML server provider cookie name
spCookieName.desc=Specifies a cookie name for the SAML service provider. The service provider will provide one by default.

pkixtrustengine=PKIX Trust Engine
pkixtrustengine.desc=Specifies the PKIX trust information that is used to evaluate the trustworthiness and validity of XML signatures in a SAML response. Do not specify multiple pkixTrustEngine in a samlWebSso20.

trustcert=X509 Certificate
trustcert.desc=Specifies a list of x509 certificates that are used to verify the signature.

certpath=X509 certificate path
certpath.desc=Specifies the path to the x509 certificate.

trustcrl=CRL
trustcrl.desc=Specifies the list of crls that are used to evaluate the validity of the signature.

crlpath=CRL path
crlpath.desc=Specifies the path to the crl.

authnRequestTime=AuthnRequest alive time period
authnRequestTime.desc=Specifies the life time period of an authnReuqest which is generated and sent from the service provider to an IdP for requesting a SAML Token.

trustedIssuers=Trusted issuers
trustedIssuers.desc=Specifies the identities of trusted IdP issuers. If the value is "ALL_ISSUERS", then all IdP identities are trusted.

enabled=SP enabled
enabled.desc=The service provider is enabled if true and disabled if false.

createSession=Create session
createSession.desc=Specifies whether to create an HttpSession if the current HttpSession does not exist.

#do not translate No, Group
realmName=Realm name
realmName.desc=Specifies a realm name when mapToUserRegistry is set to No or Group.

httpsRequired=Require SSL communication
httpsRequired.desc=Enforce using SSL communication when accessing a SAML WebSSO service provider end point such as acs or metadata.

allowCustomCacheKey=Customized cache key
allowCustomCacheKey.desc=Allow generating a custom cache key to access the authentication cache and get the subject.

spHostAndPort=SAML host name and port number
spHostAndPort.desc=Specifies the hostname and port number by which the IdP addresses this SAML service provider. Use this attribute if the browser needs to be redirected to a router or proxy server instead of directly connecting to the service provider. The format for the value for this attribute is (scheme)://(proxyOrRouterHost):(proxyOrRouterPort). For example, https://myRouter.com:443.

reAuthnOnAssertionExpire=Authenticate again when assertion expires
reAuthnOnAssertionExpire.desc=Authenticate the incoming HTTP request again when a SAML Assertion is about to expire.  

reAuthnCushion=Cushion time to authenticate again
reAuthnCushion.desc=The time period to authenticate again when a SAML Assertion is about to expire, which is indicated by either the statement NotOnOrAfter or the attribute SessionNotOnOrAfter of the SAML Assertion.

targetPageUrl=Target page URL
targetPageUrl.desc=The default landing page for the IdP-initiated SSO if the relayState is missing.  This property must be set to a valid URL if useRelayStateForTarget is set to false.

headerName=Header name
headerName.desc=The header name of the HTTP request which stores the SAML Token.

audiences=Audiences of SAML token
audiences.desc=The list of audiences which are trusted to verify the audience of the SAML Token. If the value is "ANY", then all audiences are trusted.

inboundPropagation=Enable SAML inbound propagation
inboundPropagation.desc=Controls the operation of the Security Assertion Markup Language Web SSO 2.0 for the inbound propagation of the Web Services Mechanisms.

includeX509InSPMetadata=Include x509 in metadata
includeX509InSPMetadata.desc=Specifies whether to include the x509 certificate in the Liberty SP metadata.

useRelayStateForTarget=Use relayState for target URL
useRelayStateForTarget.desc=When doing IdP-initiated SSO, this property specifies if the relayState in a SAMLResponse should be used as the target URL.  If set to false, the value for targetPageUrl is always used as the target URL.

spLogout=Automatic SAML logout
spLogout.desc=Perform a SAML logout when you invoke the HttpServletRequest.logout method or the ibm_security_logout URL.

postLogoutRedirectUrl=URL used after logout
postLogoutRedirectUrl.desc=The client is redirected to this optional URL after the client invokes the SAML logout endpoint and the logout completes
