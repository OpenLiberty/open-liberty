jakarta.validation.constraints.AssertFalse.message     = trebuie s\u0103 fie false
jakarta.validation.constraints.AssertTrue.message      = trebuie s\u0103 fie true
jakarta.validation.constraints.DecimalMax.message      = trebuie s\u0103 fie mai mic dec\u00e2t ${inclusiv == true ? 'or equal to ' : ''}{value}
jakarta.validation.constraints.DecimalMin.message      = trebuie s\u0103 fie mai mare dec\u00e2t ${inclusiv == true ? 'or equal to ' : ''}{value}
jakarta.validation.constraints.Digits.message          = valoare numeric\u0103 \u00een afara limitelor (<{num\u0103r \u00eentreg} digi\u0163i>.<{num\u0103r frac\u0163ionar} digi\u0163i> a\u015fteptat)
jakarta.validation.constraints.Email.message           = trebuie s\u0103 fie o adres\u0103 de e-mail cu format corect
jakarta.validation.constraints.Future.message          = trebuie s\u0103 fie o dat\u0103 viitoare
jakarta.validation.constraints.FutureOrPresent.message = trebuie s\u0103 fie o dat\u0103 \u00een prezent sau \u00een viitor
jakarta.validation.constraints.Max.message             = trebuie s\u0103 fie mai mic sau egal dec\u00e2t {valoare}
jakarta.validation.constraints.Min.message             = trebuie s\u0103 fie mai mare sau egal dec\u00e2t {valoare}
jakarta.validation.constraints.Negative.message        = trebuie s\u0103 fie mai mic dec\u00e2t 0
jakarta.validation.constraints.NegativeOrZero.message  = trebuie s\u0103 fie mai mic sau egal dec\u00e2t 0
jakarta.validation.constraints.NotBlank.message        = nu trebuie s\u0103 fie blanc
jakarta.validation.constraints.NotEmpty.message        = nu trebuie s\u0103 fie gol
jakarta.validation.constraints.NotNull.message         = nu trebuie s\u0103 fie null
jakarta.validation.constraints.Null.message            = trebuie s\u0103 fie null
jakarta.validation.constraints.Past.message            = trebuie s\u0103 fie o dat\u0103 anterioar\u0103
jakarta.validation.constraints.PastOrPresent.message   = trebuie s\u0103 fie o dat\u0103 anterioar\u0103 sau din prezent
jakarta.validation.constraints.Pattern.message         = trebuie s\u0103 se potriveasc\u0103 "{regexp}"
jakarta.validation.constraints.Positive.message        = trebuie s\u0103 fie mai mare dec\u00e2t 0
jakarta.validation.constraints.PositiveOrZero.message  = trebuie s\u0103 fie mai mare sau egal dec\u00e2t 0
jakarta.validation.constraints.Size.message            = dimensiunea trebuie s\u0103 fie \u00eentre {min} \u015fi {max}

org.hibernate.validator.constraints.CreditCardNumber.message        = num\u0103r invalid de card de credit
org.hibernate.validator.constraints.Currency.message                = moned\u0103 invalid\u0103 trebuie s\u0103 fie una din {valoare})
org.hibernate.validator.constraints.EAN.message                     = cod de bare {tip} invalid
org.hibernate.validator.constraints.Email.message                   = adres\u0103 de e-mail cu format incorect
org.hibernate.validator.constraints.ISBN.message                    = ISBN invalid
org.hibernate.validator.constraints.Length.message                  = lungimea trebuie s\u0103 fie \u00eentre {min} \u015fi {max}
org.hibernate.validator.constraints.CodePointLength.message         = lungimea trebuie s\u0103 fie \u00eentre {min} \u015fi {max}
org.hibernate.validator.constraints.LuhnCheck.message               = cifra de verificare pentru ${validatedValue} este invalid\u0103, suma de control Luhn Modulo 10 a e\u015fuat
org.hibernate.validator.constraints.Mod10Check.message              = cifra de verificare pentru ${validatedValue} este invalid\u0103, suma de control Modulo 10 a e\u015fuat
org.hibernate.validator.constraints.Mod11Check.message              = cifra de verificare pentru ${validatedValue} este invalid\u0103, suma de control Modulo 11 a e\u015fuat
org.hibernate.validator.constraints.ModCheck.message                = cifra de verificare pentru ${validatedValue} este invalid\u0103, suma de control {modType} a e\u015fuat
org.hibernate.validator.constraints.Normalized.message              = trebuie normalizat
org.hibernate.validator.constraints.NotBlank.message                = poate s\u0103 nu fie gol
org.hibernate.validator.constraints.NotEmpty.message                = poate s\u0103 nu fie gol
org.hibernate.validator.constraints.ParametersScriptAssert.message  = expresia de script "{script}" nu s-a evaluat la true
org.hibernate.validator.constraints.Range.message                   = trebuie s\u0103 fie \u00eentre {min} \u015fi {max}
org.hibernate.validator.constraints.ScriptAssert.message            = expresia de script "{script}" nu s-a evaluat la true
org.hibernate.validator.constraints.UniqueElements.message          = trebuie s\u0103 con\u0163in\u0103 numai elemente unice
org.hibernate.validator.constraints.URL.message                     = trebuie s\u0103 fie un URL valid

org.hibernate.validator.constraints.br.CNPJ.message                 = num\u0103r de registru de contribuabil corporatist brazilian invalid (CNPJ)
org.hibernate.validator.constraints.br.CPF.message                  = num\u0103r de registru de contribuabil individual brazilian invalid (CPF)
org.hibernate.validator.constraints.br.TituloEleitoral.message      = num\u0103r invalid de carte de identitate de votant brazilian

org.hibernate.validator.constraints.pl.REGON.message                = Num\u0103r de identificare pl\u0103titor polonez de taxe (REGON) este invalid
org.hibernate.validator.constraints.pl.NIP.message                  = Num\u0103r de identificare TVA (NIP) invalid
org.hibernate.validator.constraints.pl.PESEL.message                = Num\u0103r de identificare na\u0163ional polonez (PESEL) invalid

org.hibernate.validator.constraints.ru.INN.message                  = Num\u0103r de identificare pl\u0103titor de taxe din Rusia (INN) invalid

org.hibernate.validator.constraints.time.DurationMax.message        = trebuie s\u0103 fie mai scurt dec\u00e2t${inclusiv == true ? ' sau egal cu' : ''}${zile == 0 ? '' : zile == 1 ? ' 1 zi' : ' ' += zile += ' zile'}${ore == 0 ? '' : ore == 1 ? ' 1 or\u0103' : ' ' += ore += ' ore'}${minute == 0 ? '' : minute == 1 ? ' 1 minut' : ' ' += minute += ' minute'}${secunde == 0 ? '' : secunde == 1 ? ' 1 secund\u0103' : ' ' += secunde += ' secunde'}${milisecunde == 0 ? '' : milisecunde == 1 ? ' 1 milisecund\u0103' : ' ' += milisecunde += ' milisecunde'}${nanosecunde == 0 ? '' : nanosecunde == 1 ? ' 1 nanosecund\u0103' : ' ' += nanosecunde += ' nanosecunde'}
org.hibernate.validator.constraints.time.DurationMin.message        = trebuie s\u0103 fie mai lung dec\u00e2t${inclusiv == true ? ' sau egal cu' : ''}${zile == 0 ? '' : zile == 1 ? ' 1 zi' : ' ' += zile += ' zile'}${ore == 0 ? '' : ore == 1 ? ' 1 or\u0103' : ' ' += ore += ' ore'}${minute == 0 ? '' : minute == 1 ? ' 1 minut' : ' ' += minute += ' minute'}${secunde == 0 ? '' : secunde == 1 ? ' 1 secund\u0103' : ' ' += secunde += ' secunde'}${milisecunde == 0 ? '' : milisecunde == 1 ? ' 1 milisecund\u0103' : ' ' += milisecunde += ' milisecunde'}${nanosecunde == 0 ? '' : nanosecunde == 1 ? ' 1 nanosecund\u0103' : ' ' += nanosecunde += ' nanosecunde'}
