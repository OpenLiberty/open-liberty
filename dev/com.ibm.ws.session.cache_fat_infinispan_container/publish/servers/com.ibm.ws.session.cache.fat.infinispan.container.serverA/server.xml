<server>
	<!-- Used for SessionCacheTwoServerTest -->
    <featureManager>
        <!-- This server provides coverage for minimal feature set. Do not add more features. -->
        <feature>servlet-4.0</feature>
        <feature>componenttest-1.0</feature>
        <feature>sessionCache-1.0</feature>
    </featureManager>
    
    <include location="../fatTestPorts.xml"/>
    
    <httpSession maxInMemorySessionCount="1" allowOverflow="false" hideSessionValues="false" invalidationTimeout="10m"/>

    <httpSessionCache libraryRef="InfinispanLib" writeContents="GET_AND_SET_ATTRIBUTES">
		<properties infinispan.client.hotrod.server_list="${INF_SERVERLIST}"/>
		<properties infinispan.client.hotrod.auth_username="user"/> <!-- set in users.properties -->
		<properties infinispan.client.hotrod.auth_password="pass"/> <!-- set in users.properties -->
		<properties infinispan.client.hotrod.auth_realm="default"/>
		<properties infinispan.client.hotrod.sasl_mechanism="PLAIN"/>
    </httpSessionCache>

    <library id="InfinispanLib">
        <fileset dir="${shared.resource.dir}/infinispan" includes="*.jar"/>
    </library>
    
	<!-- Perms needed because the application uses OSGi reflectively to access the same caches as HTTP Session persistence. -->
	<!-- Applications should never do this. We are only granting it to the test app for purposes of verifying cached values. -->
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="java.lang.RuntimePermission" name="accessDeclaredMembers"/>
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="java.lang.reflect.ReflectPermission" name="suppressAccessChecks"/>
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="org.osgi.framework.AdminPermission" actions="context" name="*"/>
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="org.osgi.framework.ServicePermission" actions="get" name="*"/>

    <!-- Needed for missing doPriv in JCache 1.1 API (see https://github.com/jsr107/jsr107spec/issues/398) -->
    <javaPermission className="java.util.PropertyPermission" actions="read,write" name="*"/>

    <javaPermission codebase="${shared.resource.dir}/infinispan/*" className="java.security.AllPermission"/>

    <!--  Permissions for application to access mbeans -->
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="javax.management.MBeanPermission" actions="queryNames"/>
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="javax.management.MBeanServerPermission" name="createMBeanServer"/>

</server>
