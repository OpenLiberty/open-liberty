<!--
    Copyright (c) 2021 IBM Corporation and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
   
    Contributors:
        IBM Corporation - initial API and implementation
 -->
<server>

        <authFilter id="goodSSLAuthFilter">
                <requestUrl
                        id="myRequestUrl"
                        urlPattern="/simple/goodSSL"
                        matchType="contains" />
        </authFilter>

	<openidConnectClient
		id="goodSsl"
		scope="openid profile"
		clientId="client01"
		clientSecret="{xor}LDo8LTor"
		sharedKey="secret"
		signatureAlgorithm="${oidcSignAlg}"
		mapIdentityToRegistryUser="true"
		discoveryEndpointUrl="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/oidc/endpoint/OidcGoodSSLConfigSample/.well-known/openid-configuration"
		jwkEndpointUrl="${oidcJWKValidationURL}"
		authFilterRef="goodSSLAuthFilter"
	>
	</openidConnectClient>

       <authFilter id="SSLConsentAuthFilter">
                <requestUrl
                        id="myRequestUrl"
                        urlPattern="/simple/SSLConsent"
                        matchType="contains" />
        </authFilter>

        <openidConnectClient
                id="sslConsent"
                scope="openid profile"
                clientId="client01"
                clientSecret="{xor}LDo8LTor"
                sharedKey="secret"
		signatureAlgorithm="${oidcSignAlg}"
                mapIdentityToRegistryUser="true"
		discoveryEndpointUrl="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/oidc/endpoint/OidcSSLConsentConfigSample/.well-known/openid-configuration"
		jwkEndpointUrl="${oidcJWKValidationURL}"
                authFilterRef="SSLConsentAuthFilter"
        >
        </openidConnectClient>

    <authFilter id="SSLBadRedirectInOPAuthFilter">
        <requestUrl
                id="myRequestUrl"
                urlPattern="/simple/SSLBadRedirectInOp"
                matchType="contains" />
    </authFilter>

        <openidConnectClient
                id="badRedirectInOP"
                scope="openid profile"
                clientId="client01"
                clientSecret="{xor}LDo8LTor"
                sharedKey="secret"
		signatureAlgorithm="${oidcSignAlg}"
                mapIdentityToRegistryUser="true"
		discoveryEndpointUrl="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/oidc/endpoint/OidcConfigSample/.well-known/openid-configuration"
		jwkEndpointUrl="${oidcJWKValidationURL}"
                authFilterRef="SSLBadRedirectInOPAuthFilter"
        >
        </openidConnectClient>

     <authFilter id="disabledClientAuthFilter">
         <requestUrl
                 id="myRequestUrl"
                 urlPattern="/simple/disabledClient"
                 matchType="contains" />
     </authFilter>
 
         <openidConnectClient
                 id="disabledClient"
                 scope="openid profile"
                 clientId="client01"
                 clientSecret="{xor}LDo8LTor"
                 sharedKey="secret"
		 signatureAlgorithm="${oidcSignAlg}"
                 mapIdentityToRegistryUser="true"
		 discoveryEndpointUrl="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/oidc/endpoint/OidcDisabledClientConfigSample/.well-known/openid-configuration"
		 jwkEndpointUrl="${oidcJWKValidationURL}"
                 authFilterRef="disabledClientAuthFilter"
         >
         </openidConnectClient>
 
     <authFilter id="badIssuerAuthFilter">
         <requestUrl
                 id="myRequestUrl"
                 urlPattern="/simple/badIssuer"
                 matchType="contains" />
     </authFilter>
 
         <openidConnectClient
                 id="badIssuer"
                 scope="openid profile"
                 clientId="client01"
                 clientSecret="{xor}LDo8LTor"
                 sharedKey="secret"
		 signatureAlgorithm="${oidcSignAlg}"
                 mapIdentityToRegistryUser="true"
		 discoveryEndpointUrl="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/oidc/endpoint/OidcBadIssuerConfigSample/.well-known/openid-configuration"
		 jwkEndpointUrl="${oidcJWKValidationURL}"
                 authFilterRef="badIssuerAuthFilter"
         >
         </openidConnectClient>

</server>
