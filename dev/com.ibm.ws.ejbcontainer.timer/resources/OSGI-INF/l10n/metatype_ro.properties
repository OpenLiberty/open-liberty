###############################################################################
# Copyright (c) 2014 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#CMVCPATHNAME com.ibm.ws.ejbcontainer.timer/resources/OSGI-INF/l10n/metatype.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#

# EJB Container TimerService

timerService=Serviciul de cronometru EJB
timerService.desc=Define\u015fte comportamentul serviciului de cronometru EJB.

lateTimerThreshold=Prag de avertisment cronometru \u00eent\u00e2rziat
lateTimerThreshold.desc=Num\u0103rul de minute dup\u0103 expirarea planificat\u0103 a unui cronometru dup\u0103 care pornirea cronometrului va fi considerat\u0103 \u00eent\u00e2rziat\u0103. C\u00e2nd un cronometru porne\u015fte cu \u00eent\u00e2rziere, va fi \u00eenregistrat \u00een istoric un mesaj de avertisment care indic\u0103 faptul c\u0103 cronometrul a pornit mai t\u00e2rziu dec\u00e2t era planificat. Valoarea implicit\u0103 este 5 minute, iar valoarea 0 minute dezactiveaz\u0103 caracteristica mesajelor de avertisment.

nonPersistentRetryInterval=Interval de timp \u00eentre re\u00eencerc\u0103ri
nonPersistentRetryInterval.desc=C\u00e2nd un cronometru nepersistent expir\u0103, este apelat\u0103 metoda callback de timeout. Dac\u0103 tranzac\u0163ia pentru aceast\u0103 metod\u0103 callback e\u015fueaz\u0103 sau este repetat\u0103, containerul trebuie s\u0103 re\u00eencerce cronometrul. Prima re\u00eencercare se produce imediat, iar re\u00eencerc\u0103rile urm\u0103toare sunt \u00eent\u00e2rziate cu num\u0103rul de secunde specificat. Dac\u0103 valoarea este setat\u0103 la 0, atunci toate re\u00eencerc\u0103rile sunt realizate imediat. Dac\u0103 nu specifica\u0163i o valoare, intervalul implicit este de 300 secunde.

nonPersistentMaxRetries=Num\u0103r maxim de re\u00eencerc\u0103ri
nonPersistentMaxRetries.desc=C\u00e2nd un cronometru nepersistent expir\u0103, este apelat\u0103 metoda callback de timeout. Aceast\u0103 setare controleaz\u0103 de c\u00e2te ori containerul EJB re\u00eencearc\u0103 cronometrul. Dac\u0103 tranzac\u0163ia pentru aceast\u0103 metod\u0103 callback e\u015fueaz\u0103 sau este derulat\u0103 \u00eenapoi, containerul EJB trebuie s\u0103 re\u00eencerce cronometrul cel pu\u0163in o dat\u0103. Valoarea implicit\u0103 este -1, ceea ce \u00eenseamn\u0103 c\u0103 containerul EJB re\u00eencearc\u0103 la infinit, p\u00e2n\u0103 c\u00e2nd cronometrul are succes. Dac\u0103 valoarea este setat\u0103 la 0, containerul EJB nu re\u00eencearc\u0103 cronometrul, \u00eens\u0103 comportamentul rezultant nu este compatibil cu specifica\u0163ia EJB.

persistentExecutorRef=Executor planificat de cronometre persistente EJB
persistentExecutorRef$Ref=Referin\u0163\u0103 executor de cronometre persistente EJB
persistentExecutorRef.desc=Planific\u0103 \u015fi ruleaz\u0103 taskuri de cronometru persistent EJB

nonPersistentContextServiceRef=Propagare context metod\u0103 timer non-persistent
nonPersistentContextServiceRef$Ref=Referin\u0163\u0103 propagare context metod\u0103 timer non-persistent
nonPersistentContextServiceRef.desc=Serviciul de context este utilizat pentru gestionarea propag\u0103rii contextului la firele de execu\u0163ie ale metodei timer non-persistente.
