###############################################################################
# Copyright (c) 2014, 2020 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#CMVCPATHNAME com.ibm.ws.ejbcontainer.timer/resources/OSGI-INF/l10n/metatype.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#

# EJB Container TimerService

timerService=Servicio de temporizador EJB
timerService.desc=Define el comportamiento del servicio de temporizador EJB.

lateTimerThreshold=Umbral de aviso de temporizador con retraso
lateTimerThreshold.desc=N\u00famero de minutos despu\u00e9s de la caducidad planificada de un temporizador tras los cuales el inicio del temporizador se considerar\u00e1 retrasado. Cuando un temporizador se inicia con retraso, se registra un mensaje de aviso que indica que el temporizador se ha iniciado despu\u00e9s de lo programado. El umbral predeterminado es de 5 minutos y el valor 0 minutos desactiva la caracter\u00edstica de mensaje de aviso.

nonPersistentRetryInterval=Intervalo de tiempo entre reintentos
nonPersistentRetryInterval.desc=Cuando caduca un temporizador no persistente, se llama al m\u00e9todo de retorno de llamada de tiempo de espera. Si la transacci\u00f3n para este m\u00e9todo de retorno de llamada falla o se retrotrae, el contenedor debe reintentar el temporizador. El primer intento de reintento se produce de forma inmediata y los posteriores intentos de reintento se retardan el n\u00famero de segundos especificado. Si el valor se establece en 0, todos los reintentos se producen inmediatamente. Si no especifica ning\u00fan valor, el intervalo predeterminado es 300 segundos.

nonPersistentMaxRetries=N\u00famero m\u00e1ximo de reintentos
nonPersistentMaxRetries.desc=Cuando caduca un temporizador no persistente, se llama al m\u00e9todo de retorno de llamada de tiempo de espera. Este valor controla cu\u00e1ntas veces intenta el contenedor EJB reintentar el temporizador. Si la transacci\u00f3n para este m\u00e9todo de retorno de llamada falla o se retrotrae, el contenedor EJB debe reintentar el temporizador al menos una vez. El valor predeterminado es -1, lo que significa que el contenedor EJB lo reintenta con infinitos reintentos hasta que el temporizador se ejecute de forma satisfactoria. Si el valor est\u00e1 definido en 0, el contenedor EJB no reintenta el temporizador, esto genera un comportamiento que no es compatible con la especificaci\u00f3n EJB.

persistentExecutorRef=Ejecutor planificado de temporizadores persistentes EJB
persistentExecutorRef$Ref=Referencia de ejecutor de temporizadores persistentes EJB
persistentExecutorRef.desc=Planifica y ejecuta las tareas de temporizadores persistentes EJB.

nonPersistentContextServiceRef=Propagaci\u00f3n de contexto de hebra de temporizador no persistente
nonPersistentContextServiceRef$Ref=Referencia de propagaci\u00f3n de contexto de hebra
nonPersistentContextServiceRef.desc=El servicio de contexto se utiliza para gestionar la propagaci\u00f3n de contexto en hebras de m\u00e9todo de temporizador no persistente.

missedPersistentTimerAction=Se ha perdido acci\u00f3n de temporizador persistente
missedPersistentTimerAction.desc=Especifica la acci\u00f3n a realizar cuando se pierde la caducidad de un temporizador persistente basado en planificaci\u00f3n o intervalo. Una o varias caducidades de un temporizador persistente se han clasificado como perdidas si la caducidad actual se ha planificado antes del inicio del servidor de aplicaciones o la siguiente caducidad se ha planificado para antes de la hora actual. La acci\u00f3n predeterminada cuando se habilita la migraci\u00f3n tras error de los temporizadores persistentes es ONCE, de lo contrario la acci\u00f3n predeterminada es ALL.
missedPersistentTimerAction.ALL=El m\u00e9todo de tiempo de espera se invoca inmediatamente para todas las caducidades perdidas. Cuando se han perdido varias caducidades para el mismo temporizador, cada invocaci\u00f3n se produce s\u00edncronamente hasta que se procesan todas las caducidades perdidas y, a continuaci\u00f3n, el temporizador se reanuda con la siguiente caducidad futura. 
missedPersistentTimerAction.ONCE=El m\u00e9todo de tiempo de espera se invoca una vez inmediatamente. Todas las dem\u00e1s caducidades perdidas se saltan y el temporizador se reanuda con la siguiente caducidad futura. 
