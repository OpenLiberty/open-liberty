###############################################################################
# Copyright (c) 2014, 2020 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#CMVCPATHNAME com.ibm.ws.ejbcontainer.timer/resources/OSGI-INF/l10n/metatype.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#

# EJB Container TimerService

timerService=EJB Timer Service
timerService.desc=Defines the behavior of the EJB timer service.

lateTimerThreshold=Late timer warning threshold
lateTimerThreshold.desc=Number of minutes after the scheduled expiration of a timer that the start of the timer will be considered late. When a timer does start late, a warning message will be logged indicating that the timer has started later than scheduled. The default threshold is 5 minutes and a value of 0 minutes turns off the warning message feature.

nonPersistentRetryInterval=Time interval between retries
nonPersistentRetryInterval.desc=When a non-persistent timer expires, the timeout callback method is called. If the transaction for this callback method fails or is rolled back, the container must retry the timer. The first retry attempt occurs immediately, and subsequent retry attempts are delayed by the number of seconds specified. If the value is set to 0, then all retries occur immediately. If you do not specify a value, the default interval is 300 seconds.

nonPersistentMaxRetries=Maximum number of retries
nonPersistentMaxRetries.desc=When a non-persistent timer expires, the timeout callback method is called. This setting controls how many times the EJB container attempts to retry the timer. If the transaction for this callback method fails or is rolled back, the EJB container must retry the timer at least once. The default value is -1, which means the EJB container retries infinitely until the timer is successful. If the value is set to 0, the EJB container does not retry the timer, however, this results in behavior that is not compliant with the EJB specification.

persistentExecutorRef=EJB Persistent Timers Scheduled Executor
persistentExecutorRef$Ref=EJB persistent timers executor reference
persistentExecutorRef.desc=Schedules and runs EJB persistent timer tasks.

nonPersistentContextServiceRef=Non-persistent Timer Thread Context Propagation
nonPersistentContextServiceRef$Ref=Thread context propagation reference
nonPersistentContextServiceRef.desc=The context service is used to manage context propagation to non-persistent timer method threads.

missedPersistentTimerAction=Missed persistent timer action
missedPersistentTimerAction.desc=Specifies the action to perform when the expiration of an interval or schedule-based persistent timer is missed. One or more expirations of a persistent timer are classified as missed if the current expiration is scheduled before application server start or the next expiration is scheduled before the current time. The default action when failover of persistent timers is enabled is ONCE, otherwise the default action is ALL.
missedPersistentTimerAction.ALL=The timeout method is invoked immediately for all missed expirations. When multiple expirations are missed for the same timer, each invocation occurs synchronously until all missed expirations are processed, then the timer resumes with the next future expiration. 
missedPersistentTimerAction.ONCE=The timeout method is invoked once immediately. All other missed expirations are skipped and the timer resumes with the next future expiration. 
