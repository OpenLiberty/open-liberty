###############################################################################
# Copyright (c) 2014, 2020 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#CMVCPATHNAME com.ibm.ws.ejbcontainer.timer/resources/OSGI-INF/l10n/metatype.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#

# EJB Container TimerService

timerService=EJB-Zeitgeberservice
timerService.desc=Definiert das Verhalten des EJB-Zeitgeberservice.

lateTimerThreshold=Schwellenwert f\u00fcr Warnung \u00fcber versp\u00e4teten Zeitgeber
lateTimerThreshold.desc=Anzahl der Minuten nach dem geplanten Ablauf eines Zeitgebers, ab der der Start des Zeitgebers als versp\u00e4tet eingestuft wird. Wenn ein Zeitgeber versp\u00e4tet gestartet wird, wird eine Warnung protokolliert, die anzeigt, dass der Zeitgeber sp\u00e4ter als geplant gestartet wurde. Der Standardschwellenwert ist 5 Minuten und bei Angabe des Werts 0 wird das Warnungsfeature inaktiviert.

nonPersistentRetryInterval=Zeitintervall zwischen Wiederholungen
nonPersistentRetryInterval.desc=Wenn ein nicht persistenter Zeitgeber abl\u00e4uft, wird die Callback-Methode timeout aufgerufen. Wenn die Transaktion f\u00fcr diese Callback-Methode fehlschl\u00e4gt oder r\u00fcckg\u00e4ngig gemacht wird, muss der Container den Zeitgeber wiederholen. Die erste Wiederholung findet sofort statt, und alle nachfolgenden Wiederholungen werden um die angegebene Anzahl an Sekunden verz\u00f6gert. Wenn Sie die Einstellung auf den Wert 0 setzen, finden alle Wiederholungen sofort statt. Wenn Sie keinen Wert angeben, wird das Standardintervall von 300 Sekunden verwendet.

nonPersistentMaxRetries=Maximale Wiederholungsanzahl
nonPersistentMaxRetries.desc=Wenn ein nicht persistenter Zeitgeber abl\u00e4uft, wird die Callback-Methode timeout aufgerufen. Die Einstellung steuert, wie oft der EJB-Container den Zeitgeber wiederholt. Wenn die Transaktion f\u00fcr diese Callback-Methode fehlschl\u00e4gt oder r\u00fcckg\u00e4ngig gemacht wird, muss der Container den Zeitgeber mindestens einmal wiederholen. Der Standardwert ist -1 und bedeutet, dass der EJB-Container den Zeitgeber so oft wiederholt, bis ein Erfolg zu verzeichnen ist. Wenn Sie die Einstellung auf den Wert 0 setzen, wiederholt der EJB-Container den Zeitgeber nicht, aber dies f\u00fchrt zu einem Verhalten, das mit der EJB-Spezifikation nicht kompatibel ist.

persistentExecutorRef=Steuerprogramm f\u00fcr geplante Tasks persistenter EJB-Zeitgeber
persistentExecutorRef$Ref=Referenz des Steuerprogramms f\u00fcr persistente EJB-Zeitgeber
persistentExecutorRef.desc=Plant und f\u00fchrt Tasks der persistenten EJB-Zeitgeber aus.

nonPersistentContextServiceRef=Kontextweitergabe nicht persistenter Zeitgeberthreads
nonPersistentContextServiceRef$Ref=Referenz der Kontextweitergabe an Threads
nonPersistentContextServiceRef.desc=Der Kontextservice wird f\u00fcr die Verwaltung der Kontextweitergabe an nicht persistente Zeitgebermethodenthreads verwendet.

missedPersistentTimerAction=Aktion f\u00fcr verpassten persistenten Zeitgeber
missedPersistentTimerAction.desc=Gibt die Aktion an, die ausgef\u00fchrt werden soll, wenn der Ablauf eines persistenten intervall- oder zeitplanbasierten Zeitgebers verpasst wurde. Laufen ein oder mehrere persistente Zeitgeber ab, werden sie als verpasst klassifiziert, wenn der aktuelle Ablauf vor dem Start des Anwendungsservers oder der n\u00e4chste Ablauf vor der aktuellen Zeit geplant ist. Die Standardaktion f\u00fcr aktiviertes Failover bei persistenten Zeitgebern ist ONCE, andernfalls ist die Standardaktion ALL.
missedPersistentTimerAction.ALL=Die Zeitlimitmethode wird sofort f\u00fcr alle verpassten Abl\u00e4ufe aufgerufen. Wenn mehrere Abl\u00e4ufe f\u00fcr denselben Zeitgeber verpasst wurden, tritt jeder Aufruf synchron auf, bis alle verpassten Abl\u00e4ufe verarbeitet wurden. Anschlie\u00dfend l\u00e4uft der Zeitgeber mit dem n\u00e4chsten zuk\u00fcnftigen Ablaufdatum weiter. 
missedPersistentTimerAction.ONCE=Die Zeitlimitmethode wird sofort aufgerufen. Alle anderen verpassten Ablaufdaten werden \u00fcbersprungen und der Zeitgeber l\u00e4uft mit dem n\u00e4chsten zuk\u00fcnftigen Ablaufdatum weiter. 
