###############################################################################
# Copyright (c) 2016, 2021 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#
#ISMESSAGEFILE FALSE
# -------------------------------------------------------------------------------------------------

jwtBuilder=JWT-Builder
jwtBuilder.desc=Informationen zur Konfiguration des Builders. Die von Ihnen angegebenen Elemente und Attribute werden zur Erstellung des Tokens verwendet.

jwtBuilderId=Builder-ID
jwtBuilderId.desc=Diese ID wird f\u00fcr die Identifizierung des JWT-Builders verwendet. Wenn kein ID-Wert angegeben ist, wird der Builder nicht verarbeitet. Die ID muss eine URL-sichere Zeichenfolge sein. Die ID wird als Teil des Ausstellerwerts verwendet, wenn das Attribut f\u00fcr die Ausstellerkonfiguration nicht angegeben ist. Die API JwtBuilder verwendet diese ID, um die f\u00fcr die Erstellung von JWTs zu verwendende Builderkonfiguration zu bestimmen.

issuerIdentifier=Aussteller
issuerIdentifier.desc=Ein Aussteller ist eine URL mit Ber\u00fccksichtigung der Gro\u00df-/Kleinschreibung, die das HTTP- bzw. HTTPS-Schema verwendet, das die Komponenten Schema und Host und optional die Komponenten Portnummer und Pfad enth\u00e4lt.
jwkEnabled=JSON Web Key (JWK) aktivieren
jwkEnabled.desc=Gibt an, ob JWK f\u00fcr die Signatur des Tokens verwendet werden soll.

# the name of this in metatype.xml is "expiry"
valid=Ablaufzeit des Token in Stunden
valid.desc=Gibt die Ablaufzeit des Token in Stunden an. Sofern angegeben, hat ExpiresInSeconds Vorrang.

expiresInSeconds=Ablaufzeit des Token in Sekunden.
expiresInSeconds.desc=Gibt die Ablaufzeit des Token in Sekunden an. Hat Vorrang vor expiry.
claims=Unterst\u00fctzte Anspr\u00fcche
claims.desc=Geben Sie eine durch Kommas getrennte Liste der in das Token einzuschlie\u00dfenden Anspr\u00fcche an. Diese Anspr\u00fcche m\u00fcssen vorhandene Benutzerattribute sein, die f\u00fcr das Subjekt des JWT in der Benutzerregister definiert sind.

scope=Unterst\u00fctzte Geltungsbereiche
scope.desc=Geben Sie eine durch Leerzeichen getrennte Liste mit OAuth-Geltungsbereichen an.
jti=JTI
jti.desc=Gibt a, ob eine eindeutige ID f\u00fcr das Token generiert werden soll.
keyStoreRef=Keystore
keyStoreRef.desc=Ein Keystore, der den privaten Schl\u00fcssel enth\u00e4lt, der f\u00fcr die Signatur des Tokens mit einem asymmetrischen Algorithmus erforderlich ist.
keyAliasName=Schl\u00fcsselaliasname
keyAliasName.desc=Ein Schl\u00fcsselaliasname, mit dem der private Schl\u00fcssel f\u00fcr die Signatur des Tokens mit einem asymmetrischen Algorithmus gesucht wird.
trustedAliasName=Vertrauensw\u00fcrdiger Aliasname
trustedAliasName.desc=Ein vertrauensw\u00fcrdiger Schl\u00fcsselalias f\u00fcr den \u00f6ffentlichen Schl\u00fcssel zur Verifizierung der Tokensignatur.
trustStoreRef=Vertrauensw\u00fcrdiger Keystore
trustStoreRef.desc=Ein Keystore, der den \u00f6ffentlichen Schl\u00fcssel enth\u00e4lt, der f\u00fcr die Verifizierung der Signatur des JWT-Tokens erforderlich ist. Der Keystore muss auch den Schl\u00fcsselmanagementschl\u00fcssel enthalten, der f\u00fcr die Verschl\u00fcsselung des Content Encryption Key eines JWE-Tokens verwendet wird.

jwkRotationTime=JWK-Rotationszeit
jwkRotationTime.desc=Die Zeit, nach der ein neuer JWK generiert wird.

jwkSigningKeySize=Gr\u00f6\u00dfe des JWK-Signierschl\u00fcssels
jwkSigningKeySize.desc=Die Gr\u00f6\u00dfe des Signierschl\u00fcssels in Bit.
jwkSigningKeySize.1024=1024 Bit
jwkSigningKeySize.2048=2048 Bit
jwkSigningKeySize.4096=4096 Bit
 
#Do not translate "aud"
audiences=Vertrauensw\u00fcrdige Zielgruppen
audiences.desc=Die Liste der vertrauensw\u00fcrdigen Zielgruppen, die in den aud-Anspruch im JSON-Web-Token eingef\u00fcgt werden sollen.

signatureAlgorithm=Signaturalgorithmus f\u00fcr JWT-Token
signatureAlgorithm.desc=Gibt den Signaturalgorithmus an, der f\u00fcr das Signieren des JWT-Tokens verwendet wird.

tokenSignAlgorithm.RS256=RS256-Signaturalgorithmus zum Signieren und Pr\u00fcfen von Token verwenden
tokenSignAlgorithm.RS384=RS384-Signaturalgorithmus zum Signieren und Pr\u00fcfen von Token verwenden
tokenSignAlgorithm.RS512=RS512-Signaturalgorithmus zum Signieren und Pr\u00fcfen von Token verwenden
tokenSignAlgorithm.HS256=HS256-Signaturalgorithmus zum Signieren und Pr\u00fcfen von Token verwenden
tokenSignAlgorithm.HS384=HS384-Signaturalgorithmus zum Signieren und Pr\u00fcfen von Token verwenden
tokenSignAlgorithm.HS512=HS512-Signaturalgorithmus zum Signieren und Pr\u00fcfen von Token verwenden
tokenSignAlgorithm.ES256=ES256-Signaturalgorithmus zum Signieren und Pr\u00fcfen von Token verwenden
tokenSignAlgorithm.ES384=ES384-Signaturalgorithmus zum Signieren und Pr\u00fcfen von Token verwenden
tokenSignAlgorithm.ES512=ES512-Signaturalgorithmus zum Signieren und Pr\u00fcfen von Token verwenden

sharedKey=Shared Secret
sharedKey.desc=Gibt die Zeichenfolge an, die zum Generieren der gemeinsam genutzten Schl\u00fcssel verwendet wird. Der Wert kann in Klartext oder in einer sicheren verschl\u00fcsselten Form gespeichert werden. Verwenden Sie das Tool securityUtility mit der Option encode, um den gemeinsam genutzten Schl\u00fcssel zu verschl\u00fcsseln.

#Do not translate "amr"
amrInclude=Einzuschlie\u00dfende AMR-Werte
amrInclude.desc=Gibt die Werte aus dem Subjekt an, die als amr-Anspruch in das Token eingeschlossen werden sollen.

# JWT Consumer
jwtConsumer=JWT-Konsument
jwtConsumer.desc=Die JWT-Konsumenteninformationen f\u00fcr die Validierung des JWT-Tokens.

jwtConsumerId=Konsumenten-ID
jwtConsumerId.desc=Diese ID wird f\u00fcr die Identifizierung des JWT-Konsumenten verwendet. Wenn kein ID-Wert angegeben ist, wird der Konsument nicht verarbeitet. Die ID muss eine URL-sichere Zeichenfolge sein. Die API JwtConsumer verwendet diese ID, um die f\u00fcr die Verwendung von JWTs zu verwendende Konsumentenkonfiguration zu bestimmen.

clockSkew=Zul\u00e4ssige Zeitdifferenz zwischen Systemen
clockSkew.desc=Mit diesem Attribut wird die zul\u00e4ssige Zeitabweichung in Minuten bei der Validierung des JSON-Web-Tokens angegeben. 
sslRef=SSL-Referenz
sslRef.desc=Gibt an, dass die ID der SSL-Konfiguration verwendet wird, um eine Verbindung zum OpenID Connect-Provider herzustellen.
sslRef$Ref=SSL-Referenz

jwkEndpointUrl=JWK-Endpunkt-URL
jwkEndpointUrl.desc=Gibt die URL eines JWK-Endpunkts (JSON Web Key) an.

useSystemPropertiesForHttpClientConnections=Systemeigenschaften f\u00fcr HTTP-Clientverbindungen verwenden
useSystemPropertiesForHttpClientConnections.desc=Gibt an, ob die Java-Systemeigenschaften verwendet werden sollen, wenn der JWT-Konsument HTTP-Clientverbindungen erstellt. Setzen Sie diese Eigenschaft auf true, wenn Verbindungen http*- und javax*-Systemeigenschaften verwenden sollen.

nbfOffset=Nicht vor Anspruch - Offset
nbfOffset.desc=Gibt die Zeit an, zu der das JWT f\u00fcr die Verarbeitung akzeptiert wird. Der Wert muss ein numerisches Datum (NumericDate-Objekt) sein.

#Do not translate "amr"
amrValues=Authentifizierungsmethodenreferenzen in Zeichenfolgenarray
amrValues.desc=Gibt Authentifizierungsmethodenreferenzen (AMR-Authentication Methods References) f\u00fcr die Durchsetzung der erweiterten Authentifizierung sowie die Authentifizierungsmethode des Benutzers an. Geben Sie eine durch Kommas getrennte Liste g\u00fcltiger AMR-Anspruchswerte an.

# Do not translate "Content Encryption Key"
keyManagementKeyAlgorithm=Schl\u00fcsselalgorithmus f\u00fcr das Schl\u00fcsselmanagement
keyManagementKeyAlgorithm.desc=Gibt den Verschl\u00fcsselungsalgorithmus an, der verwendet wird, um den Content Encryption Key eines JWE-Tokens zu verschl\u00fcsseln.

keyManagementKeyAlgorithm.RSA-OAEP=Verwenden Sie den RSAES-OAEP-Algorithmus f\u00fcr die Verschl\u00fcsselung des Content Encryption Key eines JWE-Tokens.

keyManagementKeyAlias=Schl\u00fcsselalias f\u00fcr das Schl\u00fcsselmanagement
keyManagementKeyAlias.desc=Der \u00f6ffentliche Schl\u00fcsselalias f\u00fcr das Schl\u00fcsselmanagement, der f\u00fcr die Verschl\u00fcsselung des Content Encryption Key eines JWE-Tokens verwendet wird.
keyManagementKeyAlias.consumer.desc=Der private Schl\u00fcsselalias f\u00fcr das Schl\u00fcsselmanagement, der f\u00fcr die Entschl\u00fcsselung des Content Encryption Key eines JWE-Tokens verwendet wird.

contentEncryptionAlgorithm=Inhaltsverschl\u00fcsselungsalgorithmus
contentEncryptionAlgorithm.desc=Gibt den Verschl\u00fcsselungsalgorithmus an, der f\u00fcr die Verschl\u00fcsselung von JWT-Klartext verwendet wird, um den verschl\u00fcsselten JWE-Text zu generierieren.

# Do not translate "AES GCM"
contentEncryptionAlgorithm.A256GCM=Verwenden Sie den AES-GCM-Algorithmus mit einem 256-Bit-Schl\u00fcssel, um den JWT-Klartext eines JWE-Tokens zu verschl\u00fcsseln.
