###############################################################################
# Copyright (c) 2016 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#
#ISMESSAGEFILE FALSE
# -------------------------------------------------------------------------------------------------

jwtBuilder=Builder JWT
jwtBuilder.desc=Informazioni sulla configurazione del builder. Gli elementi e gli attributi specificati vengono utilizzati per creare il token.
id=ID builder
id.desc=Questo ID viene utilizzato per identificare il builder.
issuerIdentifier=Emittente
issuerIdentifier.desc=Un emittente \u00e8 un URL sensibile al maiuscolo/minuscolo che utilizza lo schema HTTP o HTTPS che contiene i componenti schema, host e, facoltativamente, numero di porta e percorso.
jwkEnabled=Abilita JWK (JSON web key)
jwkEnabled.desc=Indica se utilizzare JWK per firmare il token.

valid=Data/ora di scadenza token
valid.desc=Indica la data/ora di scadenza del token.
claims=Asserzioni supportate
claims.desc=Specificare un elenco separato da virgole di asserzioni da includere nel token.

scope=Ambiti supportati
scope.desc=Specificare un elenco separato da spazi vuoti di ambiti OAuth.
jti=JTI
jti.desc=Indica se generare un ID univoco per il token.
keyStoreRef=Keystore
keyStoreRef.desc=Un keystore contenente la chiave privata necessaria per la firma del token con un algoritmo asimmetrico.
keyAliasName=Nome alias chiave
keyAliasName.desc=Un nome alias di chiave utilizzato per individuare la chiave privata per firmare il token con un algoritmo asimmetrico.
trustedAliasName=Nome alias affidabile
trustedAliasName.desc=Un alias di chiave affidabile per utilizzare la chiave pubblica per verificare la firma del token.
trustStoreRef=Keystore affidabile
trustStoreRef.desc=Un keystore contenente la chiave pubblica necessaria per la verifica di una firma del token JWT.

jwkRotationTime=Tempo di rotazione JWK
jwkRotationTime.desc=La quantit\u00e0 di tempo dopo la quale viene generata una nuova JWK.

jwkSigningKeySize=Dimensione chiave di firma JWK
jwkSigningKeySize.desc=Dimensione misurata in bit della chiave di firma.
jwkSigningKeySize.1024=1024 bit
jwkSigningKeySize.2048=2048 bit
jwkSigningKeySize.4096=4096 bit

tokenEndpointHttpsRequired=Richiesto HTTPS per endpoint di generazione token
tokenEndpointHttpsRequired.desc=Indica se \u00e8 richiesto o meno HTTPS per la comunicazione con l'endpoint di generazione token. 
#Do not translate "aud"
audiences=Audience affidabili
audiences.desc=L'elenco di audience affidabili da includere nell'asserzione aud nel token web JSON.

signatureAlgorithm=Algoritmo di firma del token JWT
signatureAlgorithm.desc=Specifica l'algoritmo di firma che verr\u00e0 utilizzato per firmare il token JWT.

tokenSignAlgorithm.RS256=Utilizzare l'algoritmo di firma RS256 per firmare e verificare i token.
tokenSignAlgorithm.HS256=Utilizzare l'algoritmo di firma HS256 per firmare e verificare i token.

sharedKey=Segreto condiviso
sharedKey.desc=Specifica la stringa che verr\u00e0 utilizzata per generare le chiavi condivise. Il valore pu\u00f2 essere memorizzato come testo in chiaro oppure nel formato codificato pi\u00f9 sicuro. Utilizzare lo strumento securityUtility con l'opzione encode per codificare la chiave condivisa.

# JWT Consumer
jwtConsumer=Consumer JWT
jwtConsumer.desc=Le informazioni sul consumer JWT per convalidare il token JWT.

clockSkew=La differenza oraria consentita tra i sistemi
clockSkew.desc=Viene utilizzato per specificare la differenza oraria consentita in minuti quando si convalida il token web JSON.

sslRef=Riferimento SSL
sslRef.desc=Specifica un ID di configurazione SSL utilizzato per la connessione al provider OpenID Connect.
sslRef$Ref=Riferimento SSL

jwkEndpointUrl=URL endpoint JWK (JSON web key)
jwkEndpointUrl.desc=Specifica un URL endpoint di JWK.

