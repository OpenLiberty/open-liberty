###############################################################################
# Copyright (c) 2016, 2021 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#
#ISMESSAGEFILE FALSE
# -------------------------------------------------------------------------------------------------

jwtBuilder=Builder JWT
jwtBuilder.desc=Informazioni sulla configurazione del builder. Gli elementi e gli attributi specificati vengono utilizzati per creare il token.

jwtBuilderId=ID builder
jwtBuilderId.desc=Questo ID viene utilizzato per identificare il builder JWT. Se un valore ID non \u00e8 specificato, il builder non viene elaborato. L'ID deve essere una stringa URL sicuro. L'ID viene utilizzato come parte del valore emittente se non \u00e8 specificato l'attributo di configurazione emittente. L'API JwtBuilder utilizza questo ID per determinare quale configurazione builder utilizzare per costruire i JWT.

issuerIdentifier=Emittente
issuerIdentifier.desc=Un emittente \u00e8 un URL sensibile al maiuscolo/minuscolo che utilizza lo schema HTTP o HTTPS che contiene i componenti schema, host e, facoltativamente, numero di porta e percorso.
jwkEnabled=Abilita JWK (JSON web key)
jwkEnabled.desc=Indica se utilizzare JWK per firmare il token.

# the name of this in metatype.xml is "expiry"
valid=Scadenza del token in ore
valid.desc=Indica la scadenza del token in ore. ExpiresInSeconds ha la precedenza se presente.

expiresInSeconds=Scadenza del token in secondi
expiresInSeconds.desc=Indica la scadenza del token in secondi. Ha la precedenza sulla scadenza.
claims=Asserzioni supportate
claims.desc=Specificare un elenco separato da virgole di asserzioni da includere nel token. Tali asserzioni devono essere attributi utente esistenti definiti per il soggetto del JWT nel registro utente.

scope=Ambiti supportati
scope.desc=Specificare un elenco separato da spazi vuoti di ambiti OAuth.
jti=JTI
jti.desc=Indica se generare un ID univoco per il token.
keyStoreRef=Keystore
keyStoreRef.desc=Un keystore contenente la chiave privata necessaria per la firma del token con un algoritmo asimmetrico.
keyAliasName=Nome alias chiave
keyAliasName.desc=Un nome alias di chiave utilizzato per individuare la chiave privata per firmare il token con un algoritmo asimmetrico.
trustedAliasName=Nome alias affidabile
trustedAliasName.desc=Un alias di chiave affidabile per utilizzare la chiave pubblica per verificare la firma del token.
trustStoreRef=Keystore affidabile
trustStoreRef.desc=Un keystore contenente la chiave pubblica necessaria per la verifica di una firma del token JWT. Il keystore deve contenere anche la chiave di gestione chiavi utilizzata per codificare la chiave di codifica del contenuto di un JWE.

jwkRotationTime=Tempo di rotazione JWK
jwkRotationTime.desc=La quantit\u00e0 di tempo dopo la quale viene generata una nuova JWK.

jwkSigningKeySize=Dimensione chiave di firma JWK
jwkSigningKeySize.desc=Dimensione misurata in bit della chiave di firma.
jwkSigningKeySize.1024=1024 bit
jwkSigningKeySize.2048=2048 bit
jwkSigningKeySize.4096=4096 bit
 
#Do not translate "aud"
audiences=Audience affidabili
audiences.desc=L'elenco di audience affidabili da includere nell'asserzione aud nel token web JSON.

signatureAlgorithm=Algoritmo di firma del token JWT
signatureAlgorithm.desc=Specifica l'algoritmo di firma che verr\u00e0 utilizzato per firmare il token JWT.

tokenSignAlgorithm.RS256=Utilizzare l'algoritmo di firma RS256 per firmare e verificare i token.
tokenSignAlgorithm.RS384=Utilizzare l'algoritmo di firma RS384 per firmare e verificare i token.
tokenSignAlgorithm.RS512=Utilizzare l'algoritmo di firma RS512 per firmare e verificare i token.
tokenSignAlgorithm.HS256=Utilizzare l'algoritmo di firma HS256 per firmare e verificare i token.
tokenSignAlgorithm.HS384=Utilizzare l'algoritmo di firma HS384 per firmare e verificare i token.
tokenSignAlgorithm.HS512=Utilizzare l'algoritmo di firma HS512 per firmare e verificare i token.
tokenSignAlgorithm.ES256=Utilizzare l'algoritmo di firma ES256 per firmare e verificare i token.
tokenSignAlgorithm.ES384=Utilizzare l'algoritmo di firma ES384 per firmare e verificare i token.
tokenSignAlgorithm.ES512=Utilizzare l'algoritmo di firma ES512 per firmare e verificare i token.

sharedKey=Segreto condiviso
sharedKey.desc=Specifica la stringa che verr\u00e0 utilizzata per generare le chiavi condivise. Il valore pu\u00f2 essere memorizzato come testo in chiaro oppure nel formato codificato pi\u00f9 sicuro. Utilizzare lo strumento securityUtility con l'opzione encode per codificare la chiave condivisa.

#Do not translate "amr"
amrInclude=Valori AMR da includere
amrInclude.desc=Specifica i valori dal soggetto da includere come asserzione amr nel token.

# JWT Consumer
jwtConsumer=Consumer JWT
jwtConsumer.desc=Le informazioni sul consumer JWT per convalidare il token JWT.

jwtConsumerId=ID consumer
jwtConsumerId.desc=Questo ID viene utilizzato per identificare il consumer JWT. Se un valore ID non \u00e8 specificato, il consumer non viene elaborato. L'ID deve essere una stringa URL sicuro. L'API JwtConsumer utilizza questo ID per determinare quale configurazione consumer utilizzare per utilizzare i JWT.

clockSkew=La differenza oraria consentita tra i sistemi
clockSkew.desc=Viene utilizzato per specificare la differenza oraria consentita in minuti quando si convalida il token web JSON.

sslRef=Riferimento SSL
sslRef.desc=Specifica un ID di configurazione SSL utilizzato per la connessione al provider OpenID Connect.
sslRef$Ref=Riferimento SSL

jwkEndpointUrl=URL endpoint JWK (JSON web key)
jwkEndpointUrl.desc=Specifica un URL endpoint di JWK.

useSystemPropertiesForHttpClientConnections=Utilizza propriet\u00e0 di sistema per le connessioni client HTTP
useSystemPropertiesForHttpClientConnections.desc=Specifica se utilizzare le propriet\u00e0 di sistema Java quando il consumer JWT crea le connessioni client HTTP. Impostare questa propriet\u00e0 su true se si desidera che le connessioni utilizzino le propriet\u00e0 di sistema http* e javax*.

nbfOffset=Non prima dell'offset dell'asserzione
nbfOffset.desc=Identifica la data in cui JWT viene accettato per l'elaborazione. Il valore deve essere un oggetto NumericDate.

#Do not translate "amr"
amrValues=AMR (Authentication Methods References) nell'array di stringhe
amrValues.desc=Specifica l'AMR (Authentication Methods Reference) per applicare l'autenticazione step-up e indicare in che modo viene autenticato l'utente. Specificare un elenco separato da virgole di valori di asserzione amr validi.

# Do not translate "Content Encryption Key"
keyManagementKeyAlgorithm=Algoritmo chiave di gestione chiavi
keyManagementKeyAlgorithm.desc=Specifica l'algoritmo di codifica utilizzato per codificare la chiave di codifica del contenuto di un JWE.

keyManagementKeyAlgorithm.RSA-OAEP=Utilizzare l'algoritmo OAEP RSAES per codificare la chiave di codifica del contenuto di un JWE.

keyManagementKeyAlias=Alias chiave di gestione chiavi
keyManagementKeyAlias.desc=Alias chiave pubblico della chiave di gestione chiavi utilizzata per codificare la chiave di codifica del contenuto di un JWE.
keyManagementKeyAlias.consumer.desc=Alias chiave privato della chiave di gestione chiavi utilizzata per decodificare la chiave di codifica del contenuto di un JWE.

contentEncryptionAlgorithm=Algoritmo di codifica del contenuto
contentEncryptionAlgorithm.desc=Specifica l'algoritmo di codifica utilizzato per codificare il testo in chiaro JWT per generare il testo cifrato JWE.

# Do not translate "AES GCM"
contentEncryptionAlgorithm.A256GCM=Utilizzare l'algoritmo GCM AES con una chiave a 256 bit per codificare il testo in chiaro JTW di un JWE.
