<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
-->
<!--
    ** WARNING: This file was automatically generated. Do not edit it directly,
    **          or you will lose your changes.
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           version="1.0"
           xml:lang="en"
           elementFormDefault="qualified"
           targetNamespace="http://java.sun.com/jsf/html">



    <xs:annotation>
        <xs:documentation>This tag library implements the standard JSF HTML tags for Facelets.</xs:documentation>
        <xs:documentation>display-name: JSF HTML Facelets Tag Library.</xs:documentation>
        <xs:documentation>short-name: h</xs:documentation>
    </xs:annotation>

    <xs:element name="inputHidden">
        <xs:annotation>
          <xs:documentation><![CDATA[Renders as an HTML input tag with its type set to "hidden".
Unless otherwise specified, all attributes accept static values
or EL expressions.]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlInputHiddenTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="immediate" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that identifies the phase during which action events should fire.
<p>
During normal event processing, action methods and action listener methods are fired during the
"invoke application" phase of request processing. If this attribute is set to "true", these methods are fired
instead at the end of the "apply request values" phase.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="required" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether an input value is required.
<p>
If this value is true and no input value is provided by a postback operation, then the "requiredMessage" text is
registered as a FacesMessage for the request, and validation fails.
</p>
<p>
Default value: false.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converterMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when conversion of a submitted value to the target type
fails.
<p>
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="requiredMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when this component is marked as "required" but no input
data is present during a postback (ie the user left the required field blank).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validator" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method-binding EL expression which is invoked during the validation phase for this component.
<p>
The invoked method is expected to check the submitted value for this component, and if not acceptable then report
a validation error for the component.
</p>
<p>
The method is expected to have the prototype
</p>
<code>public void aMethod(FacesContext, UIComponent,Object)</code>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validatorMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text which will be shown if validation fails.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="valueChangeListener" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method which is invoked during postback processing for the current view if the submitted value for this
component is not equal to the value which the "value" expression for this component returns.
<p>
The phase in which this method is invoked can be controlled via the immediate attribute.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.event.ValueChangeEvent )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="body">
        <xs:annotation>
          <xs:documentation><![CDATA[]]></xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="onload" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the page is loaded]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onunload" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the page is unloaded]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="column">
        <xs:annotation>
          <xs:documentation><![CDATA[Creates a UIComponent that represents a single column of data within a parent UIData component.
<p>
This tag is commonly used as a child of the h:dataTable tag, to represent a column of
data within an html table. It can be decorated with nested "header" and "footer" facets
which cause the output of header and footer rows.
</p>
<p>
The non-facet child components of this column are re-rendered on each table row
to generate the content of the cell. Those child components can reference the "var"
attribute of the containing h:dataTable to generate appropriate output for each row.
</p>]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlColumnTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="headerClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS class to be used for the header.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="footerClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS class to be used for the footer.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rowHeader" >
            <xs:annotation>
              <xs:documentation><![CDATA[If true the column is rendered with "th" and scope="row" attribute,
instead "td"]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: false]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="commandButton">
        <xs:annotation>
          <xs:documentation><![CDATA[This tag renders as an HTML input element.]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlCommandButtonTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="image" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The URL of an image that renders in place of the button.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="type" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: A hint to the user agent about the content type of the linked resource.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="label" >
            <xs:annotation>
              <xs:documentation><![CDATA[A display name for this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="alt" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies alternative text that can be used by a browser that can't show this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="tabindex" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the position of this element within the tab order of the document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onblur" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element loses focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onfocus" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element receives focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="accesskey" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Sets the access key for this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onchange" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is modified.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onselect" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is selected.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabled" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, this element cannot receive focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="readonly" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, indicates that this component cannot be modified by the user.
The element may receive focus unless it has also been disabled.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="immediate" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that identifies the phase during which action events
should fire.
<p>
During normal event processing, action methods and action listener methods are fired during the
"invoke application" phase of request processing. If this attribute is set to "true", these methods
are fired instead at the end of the "apply request values" phase.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[The text to display to the user for this command component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="action" >
            <xs:annotation>
              <xs:documentation><![CDATA[The action to take when this command is invoked.
<p>
If the value is an expression, it is expected to be a method binding EL expression that identifies
an action method. An action method accepts no parameters and has a String return value, called the
action outcome, that identifies the next view displayed. The phase that this event is fired in
can be controlled via the immediate attribute.
</p>
<p> 
If the value is a string literal, it is treated as a navigation outcome for the current view. This
is functionally equivalent to a reference to an action method that returns the string literal.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: java.lang.Object myMethod(  )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="actionListener" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.event.ActionEvent )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="commandLink">
        <xs:annotation>
          <xs:documentation><![CDATA[This tag renders as an HTML a element.]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlCommandLinkTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="disabled" >
            <xs:annotation>
              <xs:documentation><![CDATA[When true, this element cannot receive focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="tabindex" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the position of this element within the tab order of the document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onblur" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element loses focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onfocus" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element receives focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="accesskey" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Sets the access key for this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="charset" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the character encoding of the linked resource.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="coords" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The coordinates of regions within a client side image map.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="hreflang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The language of the linked resource.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rel" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The relationship between the current document and
the linked resource.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rev" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The type(s) describing the reverse link for the linked
resource.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="shape" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The shape of a region in a client side image map.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="target" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Names the frame that should display content generated by invoking this action.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="type" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: A hint to the user agent about the content type of the linked resource.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="immediate" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that identifies the phase during which action events
should fire.
<p>
During normal event processing, action methods and action listener methods are fired during the
"invoke application" phase of request processing. If this attribute is set to "true", these methods
are fired instead at the end of the "apply request values" phase.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[The text to display to the user for this command component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="action" >
            <xs:annotation>
              <xs:documentation><![CDATA[The action to take when this command is invoked.
<p>
If the value is an expression, it is expected to be a method binding EL expression that identifies
an action method. An action method accepts no parameters and has a String return value, called the
action outcome, that identifies the next view displayed. The phase that this event is fired in
can be controlled via the immediate attribute.
</p>
<p> 
If the value is a string literal, it is treated as a navigation outcome for the current view. This
is functionally equivalent to a reference to an action method that returns the string literal.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: java.lang.Object myMethod(  )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="actionListener" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.event.ActionEvent )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="dataTable">
        <xs:annotation>
          <xs:documentation><![CDATA[This component renders an HTML table element.
<p>
This component may have nested facets with names "header" and "footer"
to specify header and footer rows.
</p>
<p>
The non-facet children of this component are expected to be
h:column components which describe the columns of the table.
</p>]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlDataTableTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="bgcolor" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The background color of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="bodyrows" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSV of several row index to start (and end a previous) tbody element]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="border" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the width of the border of this element, in pixels.  Deprecated in HTML 4.01.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: int]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="cellpadding" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the amount of empty space between the cell border and
its contents.  It can be either a pixel length or a percentage.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="cellspacing" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the amount of space between the cells of the table.
It can be either a pixel length or a percentage of available 
space.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="columnClasses" >
            <xs:annotation>
              <xs:documentation><![CDATA[A comma separated list of CSS class names to apply to td elements in
each column.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="footerClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class to be applied to footer cells.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="frame" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Controls what part of the frame that surrounds a table is 
visible.  Values include:  void, above, below, hsides, lhs, 
rhs, vsides, box, and border.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="headerClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class to be applied to header cells.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rowClasses" >
            <xs:annotation>
              <xs:documentation><![CDATA[A comma separated list of CSS class names to apply to td elements in
each row.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rules" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Controls how rules are rendered between cells.  Values include:
none, groups, rows, cols, and all.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="summary" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Provides a summary of the contents of the table, for
accessibility purposes.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="width" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the desired width of the table, as a pixel length or
a percentage of available space.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="captionClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[A comma separated list of CSS class names to apply to all captions.
If there are less classes than the number of rows, apply the same
sequence of classes to the remaining captions, so the pattern is repeated.
More than one class can be applied to a row by separating the classes
with a space.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="captionStyle" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The CSS class to be applied to the Caption.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[An EL expression that specifies the data model that backs this table.
<p>
The value referenced by the EL expression can be of any type.
</p>
<ul>
<li>A value of type DataModel is used directly.</li>
<li>Array-like parameters of type array-of-Object, java.util.List, java.sql.ResultSet or
javax.servlet.jsp.jstl.sql.Result are wrapped in a corresponding DataModel that knows how to iterate over the
elements.</li>
<li>Other values are wrapped in a DataModel as a single row.</li>
</ul>
<p>
Note in particular that unordered collections, eg Set are not supported. Therefore if the value expression
references such an object then the table will be considered to contain just one element - the collection itself.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="first" >
            <xs:annotation>
              <xs:documentation><![CDATA[Defines the index of the first row to be displayed, starting from 0.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: int]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rows" >
            <xs:annotation>
              <xs:documentation><![CDATA[Defines the maximum number of rows of data to be displayed.
<p>
Specify zero to display all rows from the "first" row to the end of available data.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: int]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="var" >
            <xs:annotation>
              <xs:documentation><![CDATA[Defines the name of the request-scope variable that will hold the current row during iteration.
<p>
During rendering of child components of this UIData, the variable with this name can be read to learn what the
"rowData" object for the row currently being rendered is.
</p>
<p>
This value must be a static value, ie an EL expression is not permitted.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: false]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rowStatePreserved" >
            <xs:annotation>
              <xs:documentation><![CDATA[Indicates whether the state for a component in each row should not be 
discarded before the datatable is rendered again.

This property is similar to tomahawk t:dataTable preserveRowStates

This will only work reliable if the datamodel of the 
datatable did not change either by sorting, removing or 
adding rows. Default: false]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: false]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="doctype">
        <xs:annotation>
          <xs:documentation><![CDATA[]]></xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="public" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rootElement" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="system" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="form">
        <xs:annotation>
          <xs:documentation><![CDATA[Renders an HTML form element.]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlFormTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="accept" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Provides a comma-separated list of content types that the 
server processing this form can handle.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="acceptcharset" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The list of character encodings accepted by the server for this
form.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="enctype" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The content type used to submit this form to the server.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onreset" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when this form is reset.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onsubmit" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when this form is submitted.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="target" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Names the frame that should display content generated by invoking this action.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="prependId" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="graphicImage">
        <xs:annotation>
          <xs:documentation><![CDATA[Renders an HTML img element.
<p>
The value attribute specifies the url of the image to be displayed;
see the documentation for attribute "url" for more details.
</p>]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlGraphicImageTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="height" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Overrides the natural height of this image, by specifying height in pixels.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ismap" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies server-side image map handling for this image.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="longdesc" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: A link to a long description of the image.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="usemap" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies an image map to use with this image.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="width" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Overrides the natural width of this image, by specifying width in pixels.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="library" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="name" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="alt" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies alternative text that can be used by a browser that can't show this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="url" >
            <xs:annotation>
              <xs:documentation><![CDATA[An alias for the "value" attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[The URL of the image.
<p>
If the URL starts with a '/', it is relative to the context path of the web application.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="head">
        <xs:annotation>
          <xs:documentation><![CDATA[]]></xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="inputFile">
        <xs:annotation>
          <xs:documentation><![CDATA[Renders a HTML input element.]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlInputFileTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="maxlength" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The maximum number of characters allowed to be entered.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: int]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="size" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The initial width of this control, in characters.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: int]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="autocomplete" >
            <xs:annotation>
              <xs:documentation><![CDATA[If the value of this attribute is "off", render "off" as the value of the attribute.
This indicates that the browser should disable its autocomplete feature for this component.
This is useful for components that perform autocompletion and do not want the browser interfering.
If this attribute is not set or the value is "on", render nothing.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="label" >
            <xs:annotation>
              <xs:documentation><![CDATA[A display name for this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="alt" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies alternative text that can be used by a browser that can't show this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="tabindex" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the position of this element within the tab order of the document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onblur" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element loses focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onfocus" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element receives focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="accesskey" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Sets the access key for this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onchange" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is modified.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onselect" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is selected.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabled" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, this element cannot receive focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="readonly" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, indicates that this component cannot be modified by the user.
The element may receive focus unless it has also been disabled.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="immediate" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that identifies the phase during which action events should fire.
<p>
During normal event processing, action methods and action listener methods are fired during the
"invoke application" phase of request processing. If this attribute is set to "true", these methods are fired
instead at the end of the "apply request values" phase.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="required" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether an input value is required.
<p>
If this value is true and no input value is provided by a postback operation, then the "requiredMessage" text is
registered as a FacesMessage for the request, and validation fails.
</p>
<p>
Default value: false.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converterMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when conversion of a submitted value to the target type
fails.
<p>
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="requiredMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when this component is marked as "required" but no input
data is present during a postback (ie the user left the required field blank).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validator" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method-binding EL expression which is invoked during the validation phase for this component.
<p>
The invoked method is expected to check the submitted value for this component, and if not acceptable then report
a validation error for the component.
</p>
<p>
The method is expected to have the prototype
</p>
<code>public void aMethod(FacesContext, UIComponent,Object)</code>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validatorMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text which will be shown if validation fails.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="valueChangeListener" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method which is invoked during postback processing for the current view if the submitted value for this
component is not equal to the value which the "value" expression for this component returns.
<p>
The phase in which this method is invoked can be controlled via the immediate attribute.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.event.ValueChangeEvent )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="inputSecret">
        <xs:annotation>
          <xs:documentation><![CDATA[Renders as an HTML input tag with its type set to "password".]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlInputSecretTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="maxlength" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The maximum number of characters allowed to be entered.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: int]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="redisplay" >
            <xs:annotation>
              <xs:documentation><![CDATA[If true, the value will be re-sent (in plaintext) when the form
is rerendered (see JSF.7.4.4). Default is false.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="size" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The initial width of this control, in characters.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: int]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="autocomplete" >
            <xs:annotation>
              <xs:documentation><![CDATA[If the value of this attribute is "off", render "off" as the value of the attribute.
This indicates that the browser should disable its autocomplete feature for this component.
This is useful for components that perform autocompletion and do not want the browser interfering.
If this attribute is not set or the value is "on", render nothing.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="label" >
            <xs:annotation>
              <xs:documentation><![CDATA[A display name for this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="alt" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies alternative text that can be used by a browser that can't show this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="tabindex" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the position of this element within the tab order of the document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onblur" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element loses focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onfocus" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element receives focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="accesskey" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Sets the access key for this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onchange" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is modified.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onselect" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is selected.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabled" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, this element cannot receive focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="readonly" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, indicates that this component cannot be modified by the user.
The element may receive focus unless it has also been disabled.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="immediate" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that identifies the phase during which action events should fire.
<p>
During normal event processing, action methods and action listener methods are fired during the
"invoke application" phase of request processing. If this attribute is set to "true", these methods are fired
instead at the end of the "apply request values" phase.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="required" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether an input value is required.
<p>
If this value is true and no input value is provided by a postback operation, then the "requiredMessage" text is
registered as a FacesMessage for the request, and validation fails.
</p>
<p>
Default value: false.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converterMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when conversion of a submitted value to the target type
fails.
<p>
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="requiredMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when this component is marked as "required" but no input
data is present during a postback (ie the user left the required field blank).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validator" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method-binding EL expression which is invoked during the validation phase for this component.
<p>
The invoked method is expected to check the submitted value for this component, and if not acceptable then report
a validation error for the component.
</p>
<p>
The method is expected to have the prototype
</p>
<code>public void aMethod(FacesContext, UIComponent,Object)</code>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validatorMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text which will be shown if validation fails.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="valueChangeListener" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method which is invoked during postback processing for the current view if the submitted value for this
component is not equal to the value which the "value" expression for this component returns.
<p>
The phase in which this method is invoked can be controlled via the immediate attribute.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.event.ValueChangeEvent )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="inputText">
        <xs:annotation>
          <xs:documentation><![CDATA[Renders a HTML input element.]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlInputTextTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="maxlength" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The maximum number of characters allowed to be entered.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: int]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="size" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The initial width of this control, in characters.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: int]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="autocomplete" >
            <xs:annotation>
              <xs:documentation><![CDATA[If the value of this attribute is "off", render "off" as the value of the attribute.
This indicates that the browser should disable its autocomplete feature for this component.
This is useful for components that perform autocompletion and do not want the browser interfering.
If this attribute is not set or the value is "on", render nothing.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="label" >
            <xs:annotation>
              <xs:documentation><![CDATA[A display name for this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="alt" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies alternative text that can be used by a browser that can't show this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="tabindex" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the position of this element within the tab order of the document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onblur" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element loses focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onfocus" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element receives focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="accesskey" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Sets the access key for this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onchange" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is modified.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onselect" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is selected.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabled" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, this element cannot receive focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="readonly" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, indicates that this component cannot be modified by the user.
The element may receive focus unless it has also been disabled.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="immediate" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that identifies the phase during which action events should fire.
<p>
During normal event processing, action methods and action listener methods are fired during the
"invoke application" phase of request processing. If this attribute is set to "true", these methods are fired
instead at the end of the "apply request values" phase.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="required" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether an input value is required.
<p>
If this value is true and no input value is provided by a postback operation, then the "requiredMessage" text is
registered as a FacesMessage for the request, and validation fails.
</p>
<p>
Default value: false.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converterMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when conversion of a submitted value to the target type
fails.
<p>
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="requiredMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when this component is marked as "required" but no input
data is present during a postback (ie the user left the required field blank).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validator" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method-binding EL expression which is invoked during the validation phase for this component.
<p>
The invoked method is expected to check the submitted value for this component, and if not acceptable then report
a validation error for the component.
</p>
<p>
The method is expected to have the prototype
</p>
<code>public void aMethod(FacesContext, UIComponent,Object)</code>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validatorMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text which will be shown if validation fails.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="valueChangeListener" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method which is invoked during postback processing for the current view if the submitted value for this
component is not equal to the value which the "value" expression for this component returns.
<p>
The phase in which this method is invoked can be controlled via the immediate attribute.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.event.ValueChangeEvent )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="inputTextarea">
        <xs:annotation>
          <xs:documentation><![CDATA[Renders a HTML textarea element.]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlInputTextareaTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="cols" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The width of this element, in characters.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: int]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rows" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The height of this element, in characters.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: int]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="label" >
            <xs:annotation>
              <xs:documentation><![CDATA[A display name for this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="tabindex" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the position of this element within the tab order of the document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onblur" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element loses focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onfocus" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element receives focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="accesskey" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Sets the access key for this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onchange" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is modified.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onselect" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is selected.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabled" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, this element cannot receive focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="readonly" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, indicates that this component cannot be modified by the user.
The element may receive focus unless it has also been disabled.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="immediate" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that identifies the phase during which action events should fire.
<p>
During normal event processing, action methods and action listener methods are fired during the
"invoke application" phase of request processing. If this attribute is set to "true", these methods are fired
instead at the end of the "apply request values" phase.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="required" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether an input value is required.
<p>
If this value is true and no input value is provided by a postback operation, then the "requiredMessage" text is
registered as a FacesMessage for the request, and validation fails.
</p>
<p>
Default value: false.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converterMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when conversion of a submitted value to the target type
fails.
<p>
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="requiredMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when this component is marked as "required" but no input
data is present during a postback (ie the user left the required field blank).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validator" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method-binding EL expression which is invoked during the validation phase for this component.
<p>
The invoked method is expected to check the submitted value for this component, and if not acceptable then report
a validation error for the component.
</p>
<p>
The method is expected to have the prototype
</p>
<code>public void aMethod(FacesContext, UIComponent,Object)</code>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validatorMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text which will be shown if validation fails.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="valueChangeListener" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method which is invoked during postback processing for the current view if the submitted value for this
component is not equal to the value which the "value" expression for this component returns.
<p>
The phase in which this method is invoked can be controlled via the immediate attribute.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.event.ValueChangeEvent )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="message">
        <xs:annotation>
          <xs:documentation><![CDATA[Renders text displaying information about the first FacesMessage
          that is assigned to the component referenced by the "for" attribute.]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlMessageTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="errorClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS class to be used for messages with severity "ERROR".]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="errorStyle" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS style to be used for messages with severity "ERROR".]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="fatalClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS class to be used for messages with severity "FATAL".]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="fatalStyle" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS style to be used for messages with severity "FATAL".]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="infoClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS class to be used for messages with severity "INFO".]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="infoStyle" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS style to be used for messages with severity "INFO".]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="tooltip" >
            <xs:annotation>
              <xs:documentation><![CDATA[If true, the message summary will be rendered as a tooltip (i.e. HTML title attribute).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="warnClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS class to be used for messages with severity "WARN".]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="warnStyle" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS style to be used for messages with severity "WARN".]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="for" use="required">
            <xs:annotation>
              <xs:documentation><![CDATA[The ID of the component whose attached FacesMessage object (if present) 
should be diplayed by this component.
<p>
This is a required property on the component.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="showDetail" >
            <xs:annotation>
              <xs:documentation><![CDATA[Specifies whether the detailed information from the message should be shown. 
Default to true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="showSummary" >
            <xs:annotation>
              <xs:documentation><![CDATA[Specifies whether the summary information from the message should be shown.
Defaults to false.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="messages">
        <xs:annotation>
          <xs:documentation><![CDATA[Renders all or some FacesMessages depending on the "for" and
"globalOnly" attributes.

<ul>
<li>If globalOnly = true, only global messages, that have no
associated clientId, will be displayed.</li>
<li>else if there is a "for" attribute, only messages that are
assigned to the component referenced by the "for" attribute
are displayed.</li>
<li>else all messages are displayed.</li>
</ul>]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlMessagesTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="layout" >
            <xs:annotation>
              <xs:documentation><![CDATA[The layout: "table" or "list". Default: list]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="errorClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS class to be used for messages with severity "ERROR".]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="errorStyle" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS style to be used for messages with severity "ERROR".]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="fatalClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS class to be used for messages with severity "FATAL".]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="fatalStyle" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS style to be used for messages with severity "FATAL".]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="infoClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS class to be used for messages with severity "INFO".]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="infoStyle" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS style to be used for messages with severity "INFO".]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="tooltip" >
            <xs:annotation>
              <xs:documentation><![CDATA[If true, the message summary will be rendered as a tooltip (i.e. HTML title attribute).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="warnClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS class to be used for messages with severity "WARN".]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="warnStyle" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS style to be used for messages with severity "WARN".]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="globalOnly" >
            <xs:annotation>
              <xs:documentation><![CDATA[Specifies whether only messages (FacesMessage objects) not associated with a
specific component should be displayed, ie whether messages should be ignored
if they are attached to a particular component. Defaults to false.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="showDetail" >
            <xs:annotation>
              <xs:documentation><![CDATA[Specifies whether the detailed information from the message should be shown. 
Default to false.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="showSummary" >
            <xs:annotation>
              <xs:documentation><![CDATA[Specifies whether the summary information from the message should be shown.
Defaults to true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="for" >
            <xs:annotation>
              <xs:documentation><![CDATA[The ID of the component whose attached FacesMessage object (if present) 
should be diplayed by this component. It takes precedence over globalOnly.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="button">
        <xs:annotation>
          <xs:documentation><![CDATA[]]></xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="image" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: the value to put as image attribute]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="alt" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies alternative text that can be used by a browser that can't show this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="tabindex" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the position of this element within the tab order of the document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onblur" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element loses focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onfocus" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element receives focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="accesskey" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Sets the access key for this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="outcome" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="includeViewParams" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disableClientWindow" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="link">
        <xs:annotation>
          <xs:documentation><![CDATA[]]></xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="tabindex" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the position of this element within the tab order of the document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onblur" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element loses focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onfocus" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element receives focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="accesskey" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Sets the access key for this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="charset" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the character encoding of the linked resource.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="coords" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The coordinates of regions within a client side image map.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="hreflang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The language of the linked resource.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rel" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The relationship between the current document and
the linked resource.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rev" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The type(s) describing the reverse link for the linked
resource.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="shape" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The shape of a region in a client side image map.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="target" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Names the frame that should display content generated by invoking this action.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="type" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: A hint to the user agent about the content type of the linked resource.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabled" >
            <xs:annotation>
              <xs:documentation><![CDATA[When true, this element cannot receive focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="outcome" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="includeViewParams" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disableClientWindow" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="outputFormat">
        <xs:annotation>
          <xs:documentation><![CDATA[Renders as text, applying the child f:param values to the value attribute as a MessageFormat string.

If this element has an ID or CSS style properties, the text is wrapped in a span element.]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlOutputFormatTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="escape" >
            <xs:annotation>
              <xs:documentation><![CDATA[Indicates whether rendered markup should be escaped.
Default: true]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="outputLabel">
        <xs:annotation>
          <xs:documentation><![CDATA[Renders a HTML label element.

In addition to the JSF specification, MyFaces allows it to directly give an output text via the "value" attribute.]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlOutputLabelTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="for" >
            <xs:annotation>
              <xs:documentation><![CDATA[The client ID of the target input element of this label.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="escape" >
            <xs:annotation>
              <xs:documentation><![CDATA[Indicates whether rendered markup should be escaped.
Default: true]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="tabindex" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the position of this element within the tab order of the document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onblur" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element loses focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onfocus" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element receives focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="accesskey" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Sets the access key for this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="outputLink">
        <xs:annotation>
          <xs:documentation><![CDATA[Renders a HTML a element.

Child f:param elements are added to the href attribute as query parameters.  Other children
are rendered as the link text or image.]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlOutputLinkTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="tabindex" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the position of this element within the tab order of the document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onblur" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element loses focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onfocus" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element receives focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="accesskey" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Sets the access key for this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="charset" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the character encoding of the linked resource.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="coords" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The coordinates of regions within a client side image map.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="hreflang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The language of the linked resource.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rel" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The relationship between the current document and
the linked resource.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rev" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The type(s) describing the reverse link for the linked
resource.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="shape" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The shape of a region in a client side image map.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="target" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Names the frame that should display content generated by invoking this action.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="type" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: A hint to the user agent about the content type of the linked resource.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabled" >
            <xs:annotation>
              <xs:documentation><![CDATA[When true, this element cannot receive focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="outputText">
        <xs:annotation>
          <xs:documentation><![CDATA[Renders the value of the associated UIOutput component.

If this element has an ID or CSS style properties, the text is wrapped in a span element.]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlOutputTextTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="escape" >
            <xs:annotation>
              <xs:documentation><![CDATA[Indicates whether rendered markup should be escaped.
Default: true]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="panelGrid">
        <xs:annotation>
          <xs:documentation><![CDATA[This element renders as an HTML table with specified number of columns.
<p>
Children of this element are rendered as cells in the table, filling
rows from left to right.  Facets named "header" and "footer" are optional
and specify the content of the thead and tfoot rows, respectively.
</p>]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlPanelGridTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="bgcolor" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The background color of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="bodyrows" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSV of several row index to start (and end a previous) tbody element]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="border" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the width of the border of this element, in pixels.  Deprecated in HTML 4.01.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: int]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="cellpadding" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the amount of empty space between the cell border and
its contents.  It can be either a pixel length or a percentage.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="cellspacing" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the amount of space between the cells of the table.
It can be either a pixel length or a percentage of available 
space.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="columnClasses" >
            <xs:annotation>
              <xs:documentation><![CDATA[A comma separated list of CSS class names to apply to td elements in
each column.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="columns" >
            <xs:annotation>
              <xs:documentation><![CDATA[Specifies the number of columns in the grid.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: int]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="footerClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class to be applied to footer cells.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="frame" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Controls what part of the frame that surrounds a table is 
visible.  Values include:  void, above, below, hsides, lhs, 
rhs, vsides, box, and border.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="headerClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class to be applied to header cells.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rowClasses" >
            <xs:annotation>
              <xs:documentation><![CDATA[A comma separated list of CSS class names to apply to td elements in
each row.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rules" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Controls how rules are rendered between cells.  Values include:
none, groups, rows, cols, and all.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="summary" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Provides a summary of the contents of the table, for
accessibility purposes.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="width" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the desired width of the table, as a pixel length or
a percentage of available space.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="captionClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[A comma separated list of CSS class names to apply to all captions.
If there are less classes than the number of rows, apply the same
sequence of classes to the remaining captions, so the pattern is repeated.
More than one class can be applied to a row by separating the classes
with a space.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="captionStyle" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The CSS class to be applied to the Caption.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="panelGroup">
        <xs:annotation>
          <xs:documentation><![CDATA[This element is used to group other components where the specification requires one child element.

If any of the HTML or CSS attributes are set, its content is rendered within a span element.]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlPanelGroupTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="layout" >
            <xs:annotation>
              <xs:documentation><![CDATA[The type of layout markup to use when rendering this group. If the value is "block"
the renderer must produce an HTML "div" element. Otherwise HTML "span" element must be produced.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="selectBooleanCheckbox">
        <xs:annotation>
          <xs:documentation><![CDATA[Allow the user to choose a "true" or "false" value, presented as a
checkbox.
<p>
Renders as an HTML input tag with its type set to "checkbox", and
its name attribute set to the id. The "checked" attribute is rendered
if the value of this component is true.
</p>]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlSelectBooleanCheckboxTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="label" >
            <xs:annotation>
              <xs:documentation><![CDATA[A display name for this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="tabindex" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the position of this element within the tab order of the document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onblur" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element loses focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onfocus" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element receives focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="accesskey" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Sets the access key for this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onchange" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is modified.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onselect" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is selected.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabled" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, this element cannot receive focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="readonly" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, indicates that this component cannot be modified by the user.
The element may receive focus unless it has also been disabled.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="immediate" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that identifies the phase during which action events should fire.
<p>
During normal event processing, action methods and action listener methods are fired during the
"invoke application" phase of request processing. If this attribute is set to "true", these methods are fired
instead at the end of the "apply request values" phase.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="required" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether an input value is required.
<p>
If this value is true and no input value is provided by a postback operation, then the "requiredMessage" text is
registered as a FacesMessage for the request, and validation fails.
</p>
<p>
Default value: false.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converterMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when conversion of a submitted value to the target type
fails.
<p>
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="requiredMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when this component is marked as "required" but no input
data is present during a postback (ie the user left the required field blank).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validator" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method-binding EL expression which is invoked during the validation phase for this component.
<p>
The invoked method is expected to check the submitted value for this component, and if not acceptable then report
a validation error for the component.
</p>
<p>
The method is expected to have the prototype
</p>
<code>public void aMethod(FacesContext, UIComponent,Object)</code>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validatorMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text which will be shown if validation fails.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="valueChangeListener" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method which is invoked during postback processing for the current view if the submitted value for this
component is not equal to the value which the "value" expression for this component returns.
<p>
The phase in which this method is invoked can be controlled via the immediate attribute.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.event.ValueChangeEvent )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="selectManyCheckbox">
        <xs:annotation>
          <xs:documentation><![CDATA[Allow the user to select zero or more items from a set of available options.
<p> 
This is presented as a table with one cell per available option; each cell contains a
checkbox and the option's label. The "layout" attribute determines whether the checkboxes
are laid out horizontally or vertically.
</p>
<p>
The set of available options is defined by adding child
f:selectItem or f:selectItems components to this component.
</p>
<p>
The value attribute must be a value-binding expression to a
property of type List, Object array or primitive array. That
"collection" is expected to contain objects of the same type as
SelectItem.getValue() returns for the child SelectItem objects.
On rendering, any child whose value is in the list will be
selected initially. During the update phase, the property setter
is called to replace the original collection with a completely
new collection object of the appropriate type. The new collection
object contains the value of each child SelectItem object that
is currently selected.
</p>]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlSelectManyCheckboxTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="border" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the width of the border of this element, in pixels.  Deprecated in HTML 4.01.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: int]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="layout" >
            <xs:annotation>
              <xs:documentation><![CDATA[Controls the layout direction of the child elements.  Values include:  
lineDirection (vertical) and pageDirection (horzontal).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="selectedClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS class to be applied to selected items]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="unselectedClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[CSS class to be applied to unselected items]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="label" >
            <xs:annotation>
              <xs:documentation><![CDATA[A display name for this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="tabindex" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the position of this element within the tab order of the document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onblur" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element loses focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onfocus" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element receives focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabledClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class assigned to the label element for enabled choices.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="enabledClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class assigned to the label element for enabled choices.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="accesskey" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Sets the access key for this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onchange" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is modified.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onselect" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is selected.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabled" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, this element cannot receive focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="readonly" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, indicates that this component cannot be modified by the user.
The element may receive focus unless it has also been disabled.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="hideNoSelectionOption" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="collectionType" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="immediate" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that identifies the phase during which action events should fire.
<p>
During normal event processing, action methods and action listener methods are fired during the
"invoke application" phase of request processing. If this attribute is set to "true", these methods are fired
instead at the end of the "apply request values" phase.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="required" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether an input value is required.
<p>
If this value is true and no input value is provided by a postback operation, then the "requiredMessage" text is
registered as a FacesMessage for the request, and validation fails.
</p>
<p>
Default value: false.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converterMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when conversion of a submitted value to the target type
fails.
<p>
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="requiredMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when this component is marked as "required" but no input
data is present during a postback (ie the user left the required field blank).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validator" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method-binding EL expression which is invoked during the validation phase for this component.
<p>
The invoked method is expected to check the submitted value for this component, and if not acceptable then report
a validation error for the component.
</p>
<p>
The method is expected to have the prototype
</p>
<code>public void aMethod(FacesContext, UIComponent,Object)</code>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validatorMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text which will be shown if validation fails.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="valueChangeListener" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method which is invoked during postback processing for the current view if the submitted value for this
component is not equal to the value which the "value" expression for this component returns.
<p>
The phase in which this method is invoked can be controlled via the immediate attribute.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.event.ValueChangeEvent )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="selectManyListbox">
        <xs:annotation>
          <xs:documentation><![CDATA[Allow the user to select zero or more items from a set of
available options. This is presented as a listbox which allows
multiple rows in the list to be selected simultaneously.
<p>
The set of available options is defined by adding child
f:selectItem or f:selectItems components to this component.
</p>
<p>
The list is rendered as an HTML select element. The "multiple"
attribute is set on the element and the size attribute is set to
the provided value, defaulting to the number of items in the list
if no value is provided. If the size is set to 1, then a
"drop-down" list (aka "combo-box") is presented, though if this is
the intention then a selectManyMenu should be used instead.
</p>
<p>
The value attribute must be a value-binding expression to a
property of type List, Object array or primitive array. That
"collection" is expected to contain objects of the same type as
SelectItem.getValue() returns for the child SelectItem objects.
On rendering, any child whose value is in the list will be
selected initially. During the update phase, the property is set
to contain a "collection" of values for those child SelectItem
objects that are currently selected.
</p>]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlSelectManyListboxTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="size" >
            <xs:annotation>
              <xs:documentation><![CDATA[see JSF Spec.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: int]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="label" >
            <xs:annotation>
              <xs:documentation><![CDATA[A display name for this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="tabindex" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the position of this element within the tab order of the document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onblur" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element loses focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onfocus" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element receives focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabledClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class assigned to the label element for enabled choices.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="enabledClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class assigned to the label element for enabled choices.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="accesskey" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Sets the access key for this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onchange" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is modified.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onselect" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is selected.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabled" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, this element cannot receive focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="readonly" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, indicates that this component cannot be modified by the user.
The element may receive focus unless it has also been disabled.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="hideNoSelectionOption" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="collectionType" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="immediate" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that identifies the phase during which action events should fire.
<p>
During normal event processing, action methods and action listener methods are fired during the
"invoke application" phase of request processing. If this attribute is set to "true", these methods are fired
instead at the end of the "apply request values" phase.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="required" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether an input value is required.
<p>
If this value is true and no input value is provided by a postback operation, then the "requiredMessage" text is
registered as a FacesMessage for the request, and validation fails.
</p>
<p>
Default value: false.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converterMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when conversion of a submitted value to the target type
fails.
<p>
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="requiredMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when this component is marked as "required" but no input
data is present during a postback (ie the user left the required field blank).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validator" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method-binding EL expression which is invoked during the validation phase for this component.
<p>
The invoked method is expected to check the submitted value for this component, and if not acceptable then report
a validation error for the component.
</p>
<p>
The method is expected to have the prototype
</p>
<code>public void aMethod(FacesContext, UIComponent,Object)</code>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validatorMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text which will be shown if validation fails.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="valueChangeListener" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method which is invoked during postback processing for the current view if the submitted value for this
component is not equal to the value which the "value" expression for this component returns.
<p>
The phase in which this method is invoked can be controlled via the immediate attribute.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.event.ValueChangeEvent )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="selectManyMenu">
        <xs:annotation>
          <xs:documentation><![CDATA[Allow the user to select zero or more items from a set of available
options. This is presented as a drop-down "combo-box" which allows
multiple rows in the list to be selected simultaneously.
<p>
The set of available options is defined by adding child
f:selectItem or f:selectItems components to this component.
</p>
<p>
Renders as an HTML select element, with the choices made up of
child f:selectItem or f:selectItems elements. The multiple
attribute is set and the size attribute is set to 1.
</p>
<p>
The value attribute must be a value-binding expression to a
property of type List, Object array or primitive array. That
"collection" is expected to contain objects of the same type as
SelectItem.getValue() returns for the child SelectItem objects.
On rendering, any child whose value is in the list will be
selected initially. During the update phase, the property is set
to contain a "collection" of values for those child SelectItem
objects that are currently selected.
</p>]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlSelectManyMenuTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="label" >
            <xs:annotation>
              <xs:documentation><![CDATA[A display name for this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="tabindex" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the position of this element within the tab order of the document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onblur" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element loses focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onfocus" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element receives focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabledClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class assigned to the label element for enabled choices.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="enabledClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class assigned to the label element for enabled choices.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="accesskey" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Sets the access key for this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onchange" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is modified.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onselect" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is selected.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabled" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, this element cannot receive focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="readonly" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, indicates that this component cannot be modified by the user.
The element may receive focus unless it has also been disabled.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="hideNoSelectionOption" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="collectionType" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="immediate" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that identifies the phase during which action events should fire.
<p>
During normal event processing, action methods and action listener methods are fired during the
"invoke application" phase of request processing. If this attribute is set to "true", these methods are fired
instead at the end of the "apply request values" phase.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="required" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether an input value is required.
<p>
If this value is true and no input value is provided by a postback operation, then the "requiredMessage" text is
registered as a FacesMessage for the request, and validation fails.
</p>
<p>
Default value: false.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converterMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when conversion of a submitted value to the target type
fails.
<p>
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="requiredMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when this component is marked as "required" but no input
data is present during a postback (ie the user left the required field blank).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validator" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method-binding EL expression which is invoked during the validation phase for this component.
<p>
The invoked method is expected to check the submitted value for this component, and if not acceptable then report
a validation error for the component.
</p>
<p>
The method is expected to have the prototype
</p>
<code>public void aMethod(FacesContext, UIComponent,Object)</code>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validatorMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text which will be shown if validation fails.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="valueChangeListener" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method which is invoked during postback processing for the current view if the submitted value for this
component is not equal to the value which the "value" expression for this component returns.
<p>
The phase in which this method is invoked can be controlled via the immediate attribute.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.event.ValueChangeEvent )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="selectOneListbox">
        <xs:annotation>
          <xs:documentation><![CDATA[Allow the user to choose one option from a set of options.
<p>
Rendered as a listbox with the MULTIPLE attribute set to false.
</p>
<p>
The available choices are defined via child f:selectItem or
f:selectItems elements. The size of the listbox defaults to the
number of available choices; if size is explicitly set to a
smaller value, then scrollbars will be rendered. If size is set
to 1 then a "drop-down menu" (aka "combo-box") is rendered, though
if this is the intent then selectOneMenu should be used instead.
</p>
<p>
The value attribute of this component is read to determine
which of the available options is initially selected; its value
should match the "value" property of one of the child SelectItem
objects.
</p>
<p>
On submit of the enclosing form, the value attribute's bound
property is updated to contain the "value" property from the
chosen SelectItem.
</p>]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlSelectOneListboxTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="size" >
            <xs:annotation>
              <xs:documentation><![CDATA[see JSF Spec.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: int]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="label" >
            <xs:annotation>
              <xs:documentation><![CDATA[A display name for this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="tabindex" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the position of this element within the tab order of the document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onblur" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element loses focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onfocus" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element receives focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabledClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class assigned to the label element for enabled choices.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="enabledClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class assigned to the label element for enabled choices.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="accesskey" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Sets the access key for this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onchange" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is modified.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onselect" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is selected.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabled" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, this element cannot receive focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="readonly" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, indicates that this component cannot be modified by the user.
The element may receive focus unless it has also been disabled.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="hideNoSelectionOption" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="immediate" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that identifies the phase during which action events should fire.
<p>
During normal event processing, action methods and action listener methods are fired during the
"invoke application" phase of request processing. If this attribute is set to "true", these methods are fired
instead at the end of the "apply request values" phase.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="required" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether an input value is required.
<p>
If this value is true and no input value is provided by a postback operation, then the "requiredMessage" text is
registered as a FacesMessage for the request, and validation fails.
</p>
<p>
Default value: false.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converterMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when conversion of a submitted value to the target type
fails.
<p>
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="requiredMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when this component is marked as "required" but no input
data is present during a postback (ie the user left the required field blank).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validator" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method-binding EL expression which is invoked during the validation phase for this component.
<p>
The invoked method is expected to check the submitted value for this component, and if not acceptable then report
a validation error for the component.
</p>
<p>
The method is expected to have the prototype
</p>
<code>public void aMethod(FacesContext, UIComponent,Object)</code>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validatorMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text which will be shown if validation fails.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="valueChangeListener" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method which is invoked during postback processing for the current view if the submitted value for this
component is not equal to the value which the "value" expression for this component returns.
<p>
The phase in which this method is invoked can be controlled via the immediate attribute.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.event.ValueChangeEvent )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="selectOneMenu">
        <xs:annotation>
          <xs:documentation><![CDATA[Allow the user to choose one option from a set of options.
<p>
Renders a drop-down menu (aka "combo-box") containing a set of
choices, of which only one can be chosen at a time. The available
choices are defined via child f:selectItem or f:selectItems
elements.
</p>
<p>
The value attribute of this component is read to determine
which of the available options is initially selected; its value
should match the "value" property of one of the child SelectItem
objects.
</p>
<p>
On submit of the enclosing form, the value attribute's bound property
is updated to contain the "value" property from the chosen SelectItem.
</p>]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlSelectOneMenuTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="label" >
            <xs:annotation>
              <xs:documentation><![CDATA[A display name for this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="tabindex" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the position of this element within the tab order of the document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onblur" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element loses focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onfocus" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element receives focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabledClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class assigned to the label element for enabled choices.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="enabledClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class assigned to the label element for enabled choices.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="accesskey" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Sets the access key for this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onchange" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is modified.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onselect" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is selected.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabled" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, this element cannot receive focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="readonly" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, indicates that this component cannot be modified by the user.
The element may receive focus unless it has also been disabled.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="hideNoSelectionOption" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="immediate" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that identifies the phase during which action events should fire.
<p>
During normal event processing, action methods and action listener methods are fired during the
"invoke application" phase of request processing. If this attribute is set to "true", these methods are fired
instead at the end of the "apply request values" phase.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="required" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether an input value is required.
<p>
If this value is true and no input value is provided by a postback operation, then the "requiredMessage" text is
registered as a FacesMessage for the request, and validation fails.
</p>
<p>
Default value: false.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converterMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when conversion of a submitted value to the target type
fails.
<p>
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="requiredMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when this component is marked as "required" but no input
data is present during a postback (ie the user left the required field blank).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validator" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method-binding EL expression which is invoked during the validation phase for this component.
<p>
The invoked method is expected to check the submitted value for this component, and if not acceptable then report
a validation error for the component.
</p>
<p>
The method is expected to have the prototype
</p>
<code>public void aMethod(FacesContext, UIComponent,Object)</code>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validatorMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text which will be shown if validation fails.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="valueChangeListener" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method which is invoked during postback processing for the current view if the submitted value for this
component is not equal to the value which the "value" expression for this component returns.
<p>
The phase in which this method is invoked can be controlled via the immediate attribute.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.event.ValueChangeEvent )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="selectOneRadio">
        <xs:annotation>
          <xs:documentation><![CDATA[Allow the user to choose one option from a set of options.
<p>
Renders as an HTML table element, containing an input element for
each child f:selectItem or f:selectItems elements.  The input
elements are rendered as type radio.
</p>
<p>
The value attribute of this component is read to determine
which of the available options is initially selected; its value should
match the "value" property of one of the child SelectItem objects.
</p>
<p>
On submit of the enclosing form, the value attribute's bound property
is updated to contain the "value" property from the chosen SelectItem.
</p>]]></xs:documentation>
          <xs:documentation>tag-class: org.apache.myfaces.taglib.html.HtmlSelectOneRadioTag</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>

        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>     
          <xs:attribute name="border" >
            <xs:annotation>
              <xs:documentation><![CDATA[Width in pixels of the border to be drawn around the table containing the options list.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: int]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="layout" >
            <xs:annotation>
              <xs:documentation><![CDATA[Orientation of the options list. Valid values are 
"pageDirection" for a vertical layout, or "lineDirection" for
horizontal. The default value is "lineDirection".]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="label" >
            <xs:annotation>
              <xs:documentation><![CDATA[A display name for this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="style" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: CSS styling instructions.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="styleClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class for this element.  Corresponds to the HTML 'class' attribute.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="tabindex" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies the position of this element within the tab order of the document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onblur" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element loses focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onfocus" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element receives focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabledClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class assigned to the label element for enabled choices.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="enabledClass" >
            <xs:annotation>
              <xs:documentation><![CDATA[The CSS class assigned to the label element for enabled choices.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="accesskey" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Sets the access key for this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="role" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ondblclick" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the element is double-clicked.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeydown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed down over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeypress" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onkeyup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when a key is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousedown" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is pressed over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmousemove" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved while it is in this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseout" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moves out of this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseover" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is moved into this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onmouseup" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Script to be invoked when the pointing device is released over this element.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onchange" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is modified.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="onselect" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: Specifies a script to be invoked when the element is selected.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="dir" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="lang" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: The base language of this document.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="title" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: An advisory title for this element.  Often used by the user agent as a tooltip.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="disabled" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, this element cannot receive focus.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="readonly" >
            <xs:annotation>
              <xs:documentation><![CDATA[HTML: When true, indicates that this component cannot be modified by the user.
The element may receive focus unless it has also been disabled.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="hideNoSelectionOption" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="immediate" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that identifies the phase during which action events should fire.
<p>
During normal event processing, action methods and action listener methods are fired during the
"invoke application" phase of request processing. If this attribute is set to "true", these methods are fired
instead at the end of the "apply request values" phase.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="required" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether an input value is required.
<p>
If this value is true and no input value is provided by a postback operation, then the "requiredMessage" text is
registered as a FacesMessage for the request, and validation fails.
</p>
<p>
Default value: false.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converterMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when conversion of a submitted value to the target type
fails.
<p>
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="requiredMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text to be displayed to the user as an error message when this component is marked as "required" but no input
data is present during a postback (ie the user left the required field blank).]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validator" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method-binding EL expression which is invoked during the validation phase for this component.
<p>
The invoked method is expected to check the submitted value for this component, and if not acceptable then report
a validation error for the component.
</p>
<p>
The method is expected to have the prototype
</p>
<code>public void aMethod(FacesContext, UIComponent,Object)</code>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="validatorMessage" >
            <xs:annotation>
              <xs:documentation><![CDATA[Text which will be shown if validation fails.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="valueChangeListener" >
            <xs:annotation>
              <xs:documentation><![CDATA[A method which is invoked during postback processing for the current view if the submitted value for this
component is not equal to the value which the "value" expression for this component returns.
<p>
The phase in which this method is invoked can be controlled via the immediate attribute.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Method Signature: void myMethod( javax.faces.event.ValueChangeEvent )]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="outputScript">
        <xs:annotation>
              <xs:documentation><![CDATA[TODO: DOCUMENT ME!
<p>
This tag is backed using a javax.faces.component.UIOutput component instance.
In other words, instances of this component class are created when it is resolved
a Resource annotation, so there is no concrete class or specific tag handler for it,
but there exists a concrete renderer for it.
</p><p></p>]]></xs:documentation>
              <xs:documentation>tag-class: org.apache.myfaces.view.facelets.tag.jsf.html.HtmlOutputScriptHandler</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>
       
        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>
          <xs:attribute name="library" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="name" use="required">
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="target" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>         
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="outputStylesheet">
        <xs:annotation>
              <xs:documentation><![CDATA[TODO: DOCUMENT ME! This class is just for documentation purposes
<p>
This tag is backed using a javax.faces.component.UIOutput component instance.
In other words, instances of this component class are created when it is resolved
a Resource annotation, so there is no concrete class or specific tag handler for it,
but there exists a concrete renderer for it.
</p><p></p>]]></xs:documentation>
              <xs:documentation>tag-class: org.apache.myfaces.view.facelets.tag.jsf.html.HtmlOutputStylesheetHandler</xs:documentation>
          <xs:documentation>body-content: JSP</xs:documentation>
        </xs:annotation>
       
        <xs:complexType mixed="true">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any processContents="lax"/>
          </xs:choice>
          <xs:attribute name="library" >
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="name" use="required">
            <xs:annotation>
              <xs:documentation><![CDATA[]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="value" >
            <xs:annotation>
              <xs:documentation><![CDATA[Gets The initial value of this component.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.Object]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="converter" >
            <xs:annotation>
              <xs:documentation><![CDATA[An expression that specifies the Converter for this component.
<p>
The value can either be a static value (ID) or an EL expression. When a static id is
specified, an instance of the converter type registered with that id is used. When this
is an EL expression, the result of evaluating the expression must be an object that
implements the Converter interface.
</p>]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.convert.Converter]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="id" >
            <xs:annotation>
              <xs:documentation><![CDATA[Get a string which uniquely identifies this UIComponent within the scope of the nearest ancestor NamingContainer
component. The id is not necessarily unique across all components in the current view.]]></xs:documentation>
              <xs:documentation><![CDATA[rtexprvalue: true]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: java.lang.String]]></xs:documentation>         
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="rendered" >
            <xs:annotation>
              <xs:documentation><![CDATA[A boolean value that indicates whether this component should be rendered. Default value: true.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: boolean]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binding" >
            <xs:annotation>
              <xs:documentation><![CDATA[Identifies a backing bean property (of type UIComponent or appropriate subclass) to bind " + "to this component instance. This value must be an EL expression.]]></xs:documentation>
              <xs:documentation><![CDATA[Deferred Value Type: javax.faces.component.UIComponent]]></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
    </xs:element>

</xs:schema>
