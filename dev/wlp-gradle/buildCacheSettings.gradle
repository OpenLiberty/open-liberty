/*******************************************************************************
 * Copyright (c) 2019 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-2.0/
 * 
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/

/**
 * Configure Gradle Build Cache.
 * See: https://docs.gradle.org/current/userguide/build_cache.html
 */
boolean isUsingArtifactory = 'true'.equalsIgnoreCase(gradle.userProps.getProperty('is.using.artifactory'))
if (isUsingArtifactory) {
  String artifactoryServer = gradle.userProps.getProperty('artifactory.download.server')
  boolean isCIServer = 'true'.equalsIgnoreCase(gradle.userProps.getProperty('is.continuous.build'))
  if (isCIServer) {
    // Use the upload Artifactory URL when running on a CI server.
    artifactoryServer = gradle.userProps.getProperty('artifactory.upload.server')
  }
  buildCache {
    remote(HttpBuildCache) {
      url = ('https://' + artifactoryServer + '/artifactory/wasliberty-generic-local/')
      push = isCIServer
      credentials {
        username = gradle.userProps.getProperty("artifactory.download.user")
        password = gradle.userProps.getProperty("artifactory.download.token")
      }
    }
  }
}
