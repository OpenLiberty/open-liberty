<!--
    Copyright (c) 2022 IBM Corporation and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
   
    Contributors:
        IBM Corporation - initial API and implementation
 -->
<server>

	<featureManager>
		<feature>appSecurity-3.0</feature>
		<feature>openidConnectClient-1.0</feature>
		<feature>jaxrs-2.1</feature>
	</featureManager>


	<!--
		Include common configuration. 
	 -->
	<include
		location="${shared.resource.dir}/configs/testingConfig.xml" />
	<include
		location="${shared.resource.dir}/configs/httpEndpoint1.xml" />
	<include
		location="${shared.resource.dir}/configs/basicRegistry.xml" />
	<include
		location="${shared.resource.dir}/configs/customLoginModule.xml" />
	<include
		location="${shared.resource.dir}/configs/libraries.xml" />
	<include
		location="${shared.resource.dir}/configs/appHelloWorld.xml" />

	<!-- 
		We need to generate the truststore in the test since it will need to contain
		the IDP's cert.
	 -->
	<include
		location="${shared.resource.dir}/configs/ssl.xml" />
	<ssl id="defaultSSLConfig" trustDefaultCerts="true"
		keyStoreRef="defaultKeyStore" trustStoreRef="defaultTrustStore" />
	<keyStore id="defaultTrustStore"
		location="${server.config.dir}/resources/security/truststore.p12"
		password="trustPassword" />

    <!-- 
        Configure the CachingProvider and CacheManager.
     -->
	<cacheManager id="CacheManager"
		uri="file:///${shared.resource.dir}/infinispan/infinispan_hotrod.props">

        <!-- 
             The system property can't be read from the Hotrod properties file, so define it here.
         -->
		<properties
			infinispan.client.hotrod.uri="${infinispan.client.hotrod.uri}" />

		<cachingProvider
			providerClass="org.infinispan.jcache.remote.JCachingProvider"
			libraryRef="InfinispanLib,CustomLoginLib" />

	</cacheManager>

	<!--
		Configure the JCache instances.
	 -->
	<cache id="AuthCache" name="AuthCache"
		cacheManagerRef="CacheManager" />

	<!-- 
		Configure the authentication cache to use the JCache. 
	 -->
	<authCache cacheRef="AuthCache" />

	<!--
		OIDC configuration. Some of this configuration is generated at runtime as
		it points to the Keycloak endpoints.
	 -->
	<openidConnectClient id="client01" 
               scope="openid profile"
               clientId="oidc_client"
               clientSecret="FILL ME IN"
               userNameAttribute="preferred_username" 
               discoveryEndpointUrl="FILL ME IN"
               signatureAlgorithm="RS256" />

</server>
