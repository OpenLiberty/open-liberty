/*******************************************************************************
 * Copyright (c) 2021 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/

apply from: '../wlp-gradle/subprojects/maven-central-mirror.gradle'

/*
 * The Infinispan version should match that in InfinispanContainer.
 */
def infinispanVersion = '12.1.7.Final'      

/* 
 * This is where all application JARs will be built.
 */
def appBuildDir = "${buildDir}/test-application"

configurations {
  infinispan
}

dependencies {
  requiredLibs project(':com.ibm.ws.com.meterware.httpunit.1.7'),
               project(':com.ibm.ws.org.apache.httpcomponents'),
               project(':com.ibm.ws.security.common'),
               project(':com.ibm.ws.webcontainer.security_test.servlets'),
               project(':io.openliberty.jcache.internal_fat.hazelcast'),
               project(':io.openliberty.org.apache.commons.logging'),
               project(':io.openliberty.org.apache.commons.codec'),
               'jtidy:jtidy:4aug2000r7-dev',
               'rhino:js:1.6R5'

  infinispan "org.infinispan:infinispan-jcache-remote:${infinispanVersion}"
}

addRequiredLibraries.dependsOn copyTestContainers

task addInfinispanToSharedDir(type: Copy) {
  from configurations.infinispan
  into new File(autoFvtDir, 'publish/shared/resources/infinispan')
}

/******************************************************************
 ******************************************************************
 **
 ** Assemble all of the custom build artifacts.
 **
 ******************************************************************
 ******************************************************************/
addRequiredLibraries {
  dependsOn addInfinispanToSharedDir
}


autoFVT.dependsOn ':com.ibm.ws.webcontainer.security_test.servlets:assemble'
autoFVT.dependsOn ':io.openliberty.jcache.internal_fat.hazelcast:assemble'
autoFVT.doLast {
  /*
   * Copy the basicauth.war into test servers.
   */
  def servers = [
    'io.openliberty.jcache.internal.fat.auth.cache.1',
    'io.openliberty.jcache.internal.fat.auth.cache.2',
    'io.openliberty.jcache.internal.fat.delete.auth.cache.1',
    'io.openliberty.jcache.internal.fat.delete.auth.cache.2',
    'io.openliberty.jcache.internal.fat.jwt.auth.cache.1',
    'io.openliberty.jcache.internal.fat.jwt.auth.cache.2',
  ]
  servers.each { server ->
    copy { 
      from new File(project(':com.ibm.ws.webcontainer.security_test.servlets').buildDir, 'test-application/basicauth.zip')
      into new File(autoFvtDir, 'publish/servers/' + server + '/apps')
      rename 'basicauth.zip', 'basicauth.war'
    }
  }
  
  /*
   * Copy the formlogin.war into test servers.
   */
  servers = [
    'io.openliberty.jcache.internal.fat.jwt.cookie.cache.1',
    'io.openliberty.jcache.internal.fat.jwt.cookie.cache.2',
    'io.openliberty.jcache.internal.fat.ltpa.cookie.cache.1',
    'io.openliberty.jcache.internal.fat.ltpa.cookie.cache.2'
  ]
  servers.each { server ->    copy { 
      from new File(project(':com.ibm.ws.webcontainer.security_test.servlets').buildDir, 'test-application/formlogin.zip')
      into new File(autoFvtDir, 'publish/servers/' + server + '/apps')
      rename 'formlogin.zip', 'formlogin.war'
    }
  }
  
  /*
   * Copy the subjectcast.war into test servers.
   */
  servers = [
    'io.openliberty.jcache.internal.fat.auth.cache.casting.1',
    'io.openliberty.jcache.internal.fat.auth.cache.casting.2'
  ]
  servers.each { server ->
    copy { 
      from new File(project(':io.openliberty.jcache.internal_fat.hazelcast').buildDir, 'test-application/subjectcast.war')
      into new File(autoFvtDir, 'publish/servers/' + server + '/apps')
    }
  }
  
  /*
   * Copy the CustomLoginModule.jar into the shared resources directory.
   */
  copy { 
    from new File(project(':io.openliberty.jcache.internal_fat.hazelcast').buildDir, 'test-application/CustomLoginModule.jar')
    into new File(autoFvtDir, 'publish/shared/resources/libs/')
  }
}
