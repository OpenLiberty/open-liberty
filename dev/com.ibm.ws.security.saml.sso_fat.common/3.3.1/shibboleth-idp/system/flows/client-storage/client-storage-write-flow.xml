<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd">

    <!-- Rudimentary impediment to direct execution of subflow. -->
    <input name="calledAsSubflow" type="boolean" required="true" />
    
    <decision-state id="CheckLocalStorage">
        <if test="UseLocalStorage and opensamlProfileRequestContext.getSubcontext(T(org.opensaml.storage.impl.client.ClientStorageSaveContext)).isSourceRequired(T(org.opensaml.storage.impl.client.ClientStorageService.ClientStorageSource).HTML_LOCAL_STORAGE)"
            then="LocalStorageWrite" else="SaveCookieBackedClientStorageServices" />
    </decision-state>

    <view-state id="LocalStorageWrite" view="/client-storage/client-storage-write">
        <on-render>
            <evaluate expression="environment" result="viewScope.environment" />
            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(org.opensaml.storage.impl.client.ClientStorageSaveContext))" result="viewScope.saveContext" />
            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
        </on-render>

        <transition on="proceed" to="LogLocalStorageSaveResults" />
    </view-state>
    
    <action-state id="LogLocalStorageSaveResults">
        <evaluate expression="LogLocalStorageSaveResults" />
        <evaluate expression="'proceed'" />
        
        <transition on="proceed" to="SaveCookieBackedClientStorageServices" />
    </action-state>

    <action-state id="SaveCookieBackedClientStorageServices">
        <evaluate expression="SaveCookieBackedClientStorageServices" />
        <evaluate expression="'proceed'" />
        
        <transition on="proceed" to="proceed" />
    </action-state>

    <!-- Passthrough state if an exception is thrown. -->
    <action-state id="LogRuntimeException">
        <on-entry>
            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.profile').error('Uncaught runtime exception', flowExecutionException.getCause() ?: flowExecutionException)" />
        </on-entry>
        <evaluate expression="'RuntimeException'" />
    </action-state>

    <!-- Successful completion of subflow. -->
    <end-state id="proceed" />

    <!-- Error events to reflect back from this subflow. -->
    <end-state id="InvalidProfileContext" />
    <end-state id="RuntimeException" />

    <global-transitions>
        <transition on-exception="java.lang.RuntimeException" to="LogRuntimeException" />
        <transition on="InvalidProfileContext" to="InvalidProfileContext" />
        <transition on="RuntimeException" to="RuntimeException" />
    </global-transitions>

    <bean-import resource="client-storage-write-beans.xml" />

</flow>
