# LDAP authentication configuration, see authn/ldap-authn-config.xml
# Note, this doesn't apply to the use of JAAS

## Authenticator strategy, either anonSearchAuthenticator, bindSearchAuthenticator, directAuthenticator, adAuthenticator
#idp.authn.LDAP.authenticator                   = anonSearchAuthenticator
idp.authn.LDAP.authenticator                   = bindSearchAuthenticator
#idp.authn.LDAP.authenticator                   = adAuthenticator

## Connection properties ##
#idp.authn.LDAP.ldapURL                          = ldap://${shibboleth.ldap.server.name}:${shibboleth.ldap.server.port}
idp.authn.LDAP.ldapURL                          = ldap://%{shibboleth.ldap.server.name}:%{shibboleth.ldap.server.port} ldap://%{shibboleth.ldap.server2.name}:%{shibboleth.ldap.server2.port}
idp.authn.LDAP.useStartTLS                     = false
#idp.authn.LDAP.useStartTLS                     = true
idp.authn.LDAP.useSSL                          = false
#idp.authn.LDAP.useSSL                          = false
# Increase the time that we'll wait on LDAP - have had a timeout in a continuous test run
# All of our calls are synchronous, so, we shouldn't end up blocking for too long.
# Time in milliseconds that connects will block
idp.authn.LDAP.connectTimeout                  = PT10S
# Time in milliseconds to wait for responses
idp.authn.LDAP.responseTimeout                 = PT10S

## SSL configuration, either jvmTrust, certificateTrust, or keyStoreTrust
#idp.authn.LDAP.sslConfig                       = certificateTrust
## If using certificateTrust above, set to the trusted certificate's path
idp.authn.LDAP.trustCertificates                = %{idp.home}/credentials/ldap-server.crt
## If using keyStoreTrust above, set to the truststore path
idp.authn.LDAP.trustStore                       = %{idp.home}/credentials/ldap-server.truststore

## Return attributes during authentication
idp.authn.LDAP.returnAttributes                 = passwordExpirationTime,loginGraceRemaining

## DN resolution properties ##

# Search DN resolution, used by anonSearchAuthenticator, bindSearchAuthenticator
# for AD: CN=Users,DC=example,DC=org
#idp.authn.LDAP.baseDN                           = ou=people,dc=example,dc=org
idp.authn.LDAP.baseDN                           = o=ibm,c=us
idp.authn.LDAP.subtreeSearch                   = true
idp.authn.LDAP.userFilter                       = (uid={user})
# bind search configuration
# for AD: idp.authn.LDAP.bindDN=adminuser@domain.com
#idp.authn.LDAP.bindDN                           = cn=root
idp.authn.LDAP.bindDN                           = %{shibboleth.ldap.server.bindDN}
#idp.authn.LDAP.bindDNCredential                 = rootpwd
idp.authn.LDAP.bindDNCredential                 = %{shibboleth.ldap.server.bindPassword}

# Format DN resolution, used by directAuthenticator, adAuthenticator
# for AD use idp.authn.LDAP.dnFormat=%s@domain.com
#idp.authn.LDAP.dnFormat                         = uid=%s,ou=people,dc=example,dc=org
idp.authn.LDAP.dnFormat                         = uid=%s,o=ibm,c=us

# LDAP attribute configuration, see attribute-resolver.xml
# Note, this likely won't apply to the use of legacy V2 resolver configurations
idp.attribute.resolver.LDAP.ldapURL             = %{idp.authn.LDAP.ldapURL}
# for some reason, the IDP will NOT use my idp.authn.LDAP.connectTimeout and idp.authn.LDAP.responseTimeout override
# values - I see timeouts after 3 seconds, not 10, so, changing the default 3S to 10S here too
#idp.attribute.resolver.LDAP.connectTimeout      = %{idp.authn.LDAP.connectTimeout:PT3S}
#idp.attribute.resolver.LDAP.responseTimeout     = %{idp.authn.LDAP.responseTimeout:PT3S}
idp.attribute.resolver.LDAP.connectTimeout      = %{idp.authn.LDAP.connectTimeout:PT10S}
idp.attribute.resolver.LDAP.responseTimeout     = %{idp.authn.LDAP.responseTimeout:PT10S}
#idp.attribute.resolver.LDAP.baseDN              = %{idp.authn.LDAP.baseDN:undefined}
idp.attribute.resolver.LDAP.baseDN              =o=ibm,c=us 
idp.attribute.resolver.LDAP.bindDN              = %{idp.authn.LDAP.bindDN:undefined}
idp.attribute.resolver.LDAP.bindDNCredential    = %{idp.authn.LDAP.bindDNCredential:undefined}
idp.attribute.resolver.LDAP.useStartTLS         = %{idp.authn.LDAP.useStartTLS:true}
idp.attribute.resolver.LDAP.trustCertificates   = %{idp.authn.LDAP.trustCertificates:undefined}
idp.attribute.resolver.LDAP.searchFilter        = (uid=$resolutionContext.principal)
idp.attribute.resolver.LDAP.returnAttributes    = * uid,mail

# LDAP pool configuration, used for both authn and DN resolution
#idp.pool.LDAP.minSize                          = 3
#idp.pool.LDAP.maxSize                          = 10
#idp.pool.LDAP.validateOnCheckout               = false
#idp.pool.LDAP.validatePeriodically             = true
#idp.pool.LDAP.validatePeriod                   = PT5M
#idp.pool.LDAP.prunePeriod                      = PT5M
#idp.pool.LDAP.idleTime                         = PT10M
#idp.pool.LDAP.blockWaitTime                    = PT3S
#idp.pool.LDAP.failFastInitialize               = false
