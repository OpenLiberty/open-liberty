##
## Velocity Template containing logout propagation machinery.
##
## Velocity context will contain the following properties
## flowExecutionUrl - the form action location
## flowRequestContext - the Spring Web Flow RequestContext
## flowExecutionKey - the SWF execution key (this is built into the flowExecutionUrl)
## profileRequestContext - root of context tree
## logoutContext - context with SPSession details for logout operation
## flowSelector - bean that maps an SPSession to a logout propagation flow
## multiRPContext - context with RelyingPartyContexts and possibly SP UI information from the metadata
## htmlEncoder - HTMLEncoder class
## urlEncoder - urlEncoder class
## codecUtil - CodecUtil class
## request - HttpServletRequest
## response - HttpServletResponse
## environment - Spring Environment object for property resolution
## custom - arbitrary object injected by deployer
##
## The <li> items are an enumeration of the relying parties among the sessions
## and are identified by an encoding of the name of the relying party.
##
## The iframes are bound to a single session and are associated back to the <li>
## element for the relying party of their session.
##
#if ($logoutContext and !$logoutContext.getSessionMap().isEmpty())
    <ol>
        #foreach ($sp in $logoutContext.getSessionMap().keySet())
            #set ($rpCtx = $multiRPContext.getRelyingPartyContextById($sp))
            #if ($rpCtx)
                #set ($rpUIContext = $rpCtx.getSubcontext("net.shibboleth.idp.ui.context.RelyingPartyUIContext"))
            #end
            #if ($rpUIContext and $rpUIContext.getServiceName())
                <li id="result_$codecUtil.hex($sp.getBytes())" title="Logout pending">$htmlEncoder.encodeForHTML($rpUIContext.getServiceName())</li>
            #else
                <li id="result_$codecUtil.hex($sp.getBytes())" title="Logout pending">$htmlEncoder.encodeForHTML($sp)</li>
            #end
        #end
    </ol>
    <script src="$request.getContextPath()/js/jquery-2.1.4.min.js"></script>
    <script>
    <!--
        function check_status() {
            // Check every property of the object.
            for (flag in this) {
                if (!this[flag]) {
                    return false;
                }
            }
            return true;
        }

        // Associative array keyed by SP name. Entries are an array keyed by session key.
        var sessionTracker = new Object();
        #foreach ($sp in $logoutContext.getSessionMap().keySet())
            spTracker = new Object();
            spTracker.status = check_status;
            sessionTracker['result_$codecUtil.hex($sp.getBytes())'] = spTracker;
        #end
    
        function onLoad(src, target, trackerId, sessionKey) {
            try {
                var content = src.contents().text();
                if (content && jQuery.parseJSON(content).result == "Success") {
                    sessionTracker[trackerId]['_' + sessionKey] = true;
                } else {
                    sessionTracker[trackerId]['_' + sessionKey] = false;
                }
            } catch (e) {
                sessionTracker[trackerId]['_' + sessionKey] = false;
            }
            target.removeClass("success failure");
            if (sessionTracker[trackerId].status()) {
                target.addClass("success");
                target.prop("title", "Successful logout");
            } else {
                target.addClass("failure");
                target.prop("title", "Failed logout")
            }
            if (typeof(Storage) !== "undefined" ) {
                var url = sessionStorage.getItem(sessionKey);
                if (url != null) {
                    sessionStorage.removeItem(sessionKey);
                    setTimeout(function() { src.prop("src", url) }, 1500);
                }
            }
        }
    // -->
    </script>
    #foreach ($entry in $logoutContext.getKeyedSessionMap().entrySet())
        #if ($flowSelector.apply($entry.getValue()))
            #set ($trackerId = "result_$codecUtil.hex($entry.getValue().getId().getBytes())")
            <iframe id="sender_$codecUtil.hex($entry.getKey().getBytes())"
                src="$request.contextPath/profile/PropagateLogout?SessionKey=$urlEncoder.encode($entry.getKey())"
                style="display:none" onload="onLoad($(this), $('#$trackerId'), '$trackerId', '$entry.getKey()')"></iframe>
        #end
    #end
#end

<!-- If SAML logout, complete the flow by adding a hidden iframe. -->
#if ( $profileRequestContext.getProfileId().contains("saml2/logout") )
    <iframe style="display:none" src="$flowExecutionUrl&_eventId=proceed"></iframe>
#end
