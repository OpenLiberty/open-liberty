<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
                           
       default-init-method="initialize"
       default-destroy-method="destroy">

    <bean id="shibboleth.Pair" class="net.shibboleth.utilities.java.support.collection.Pair" abstract="true" />
    
    <bean id="shibboleth.CommaDelimStringArray"
        class="org.springframework.util.StringUtils" factory-method="commaDelimitedListToStringArray" abstract="true" />
    
    <bean id="shibboleth.NonFailFastValidator"
        class="net.shibboleth.idp.attribute.resolver.dc.NonFailFastValidator" lazy-init="true" />
    
    <bean id="shibboleth.Conditions.AND"
        class="com.google.common.base.Predicates" factory-method="and" abstract="true" />
    <bean id="shibboleth.Conditions.NOT"
        class="com.google.common.base.Predicates" factory-method="not" abstract="true" />
    <bean id="shibboleth.Conditions.OR"
        class="com.google.common.base.Predicates" factory-method="or" abstract="true" />
    
    <bean id="shibboleth.Conditions.BrowserProfile"
        class="org.opensaml.profile.logic.BrowserProfilePredicate" />
    <bean id="shibboleth.Conditions.RelyingPartyId"
        class="net.shibboleth.idp.profile.logic.RelyingPartyIdPredicate" abstract="true" />
    <bean id="shibboleth.Conditions.Scripted"
        class="net.shibboleth.idp.profile.logic.ScriptedPredicate" abstract="true" />
    <bean id="shibboleth.Conditions.Expression"
        class="net.shibboleth.idp.profile.logic.SpringExpressionPredicate" abstract="true" />
    
    <!-- Parent bean for building custom predicates that act on a RP's EntityDescriptor. -->
    <bean id="shibboleth.Conditions.EntityDescriptor" abstract="true"
            class="net.shibboleth.utilities.java.support.logic.StrategyIndirectedPredicate">
        <constructor-arg name="objectStrategy">
            <bean class="com.google.common.base.Functions" factory-method="compose">
                <constructor-arg>
                    <bean class="org.opensaml.saml.common.messaging.context.navigate.EntityDescriptorLookupFunction" />
                </constructor-arg>
                <constructor-arg>
                    <bean class="net.shibboleth.idp.saml.profile.context.navigate.SAMLMetadataContextLookupFunction" />
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>

    <!-- Parent bean for building custom predicates that act on the principal name of the Subject. -->
    <bean id="shibboleth.Conditions.SubjectName" abstract="true"
            class="net.shibboleth.utilities.java.support.logic.StrategyIndirectedPredicate">
        <constructor-arg name="objectStrategy">
            <bean class="com.google.common.base.Functions" factory-method="compose"
                c:g-ref="shibboleth.PrincipalNameLookup.Subject"
                c:f-ref="shibboleth.ChildLookup.SubjectContext" />
        </constructor-arg>
    </bean>
    
    
    <bean id="shibboleth.Conditions.IssuingDelegatedAssertion"
        class="net.shibboleth.idp.saml.saml2.profile.delegation.IssuingDelegatedAssertionPredicate" />
    <bean id="shibboleth.Conditions.AllowedSAMLPresenters" abstract="true"
        class="net.shibboleth.idp.saml.profile.config.logic.AllowedSAMLPresentersPredicate" />

    <bean id="shibboleth.ContextFunctions.Scripted"
        class="net.shibboleth.idp.profile.context.navigate.ScriptedContextLookupFunction" abstract="true" />
    <bean id="shibboleth.ContextFunctions.Expression"
        class="net.shibboleth.idp.profile.context.navigate.SpringExpressionContextLookupFunction" abstract="true"
        c:_0="#{ T(org.opensaml.profile.context.ProfileRequestContext) }" />

    <bean id="shibboleth.MessageContextLookup.Inbound"
        class="org.opensaml.profile.context.navigate.InboundMessageContextLookup" />
    <bean id="shibboleth.MessageContextLookup.Outbound"
        class="org.opensaml.profile.context.navigate.OutboundMessageContextLookup" />
    <bean id="shibboleth.MessageLookup.SAMLObject"
        class="org.opensaml.messaging.context.navigate.MessageLookup"
        c:type="#{ T(org.opensaml.saml.common.SAMLObject) }" />
    <bean id="shibboleth.MessageLookup.AuthnRequest"
        class="org.opensaml.messaging.context.navigate.MessageLookup"
        c:type="#{ T(org.opensaml.saml.saml2.core.AuthnRequest) }" />

    <bean id="shibboleth.ChildLookup.RelyingParty"
        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
        c:type="#{ T(net.shibboleth.idp.profile.context.RelyingPartyContext) }" />
    <bean id="shibboleth.ChildLookup.MultiRelyingParty"
        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
        c:type="#{ T(net.shibboleth.idp.profile.context.MultiRelyingPartyContext) }" />
        
    <bean id="shibboleth.ChildLookup.SecurityParameters"
        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
        c:type="#{ T(org.opensaml.xmlsec.context.SecurityParametersContext) }" />
    <bean id="shibboleth.ChildLookup.EncryptionParameters"
        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
        c:type="#{ T(org.opensaml.saml.saml2.profile.context.EncryptionContext) }" />
    <bean id="shibboleth.ChildLookupOrCreate.SecurityParameters"
        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
        c:type="#{ T(org.opensaml.xmlsec.context.SecurityParametersContext) }"
        c:createContext="true" />

    <bean id="shibboleth.ChildLookupOrCreate.AttributeContext"
        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
        c:type="#{ T(net.shibboleth.idp.attribute.context.AttributeContext) }"
        c:createContext="true" />
    <bean id="shibboleth.ChildLookupOrCreate.AttributeFilterContext"
        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
        c:type="#{ T(net.shibboleth.idp.attribute.filter.context.AttributeFilterContext) }"
        c:createContext="true" />
    <bean id="shibboleth.ChildLookupOrCreate.RelyingPartyUIContext"
        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
        c:type="#{ T(net.shibboleth.idp.ui.context.RelyingPartyUIContext) }"
        c:createContext="true" />

    <bean id="shibboleth.ChildLookup.AuthenticationContext"
        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
        c:type="#{ T(net.shibboleth.idp.authn.context.AuthenticationContext) }" />
    <bean id="shibboleth.ChildLookup.MultiFactorAuthenticationContext"
        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
        c:type="#{ T(net.shibboleth.idp.authn.context.MultiFactorAuthenticationContext) }" />
    <bean id="shibboleth.ChildLookup.SubjectContext"
        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
        c:type="#{ T(net.shibboleth.idp.authn.context.SubjectContext) }" />
    <bean id="shibboleth.ChildLookup.SubjectCanonicalizationContext"
        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
        c:type="#{ T(net.shibboleth.idp.authn.context.SubjectCanonicalizationContext) }" />
    <bean id="shibboleth.ChildLookup.SessionContext"
        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
        c:type="#{ T(net.shibboleth.idp.session.context.SessionContext) }" />
        
    <bean id="shibboleth.ChildLookup.SAMLBindingContext"
        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
        c:type="#{ T(org.opensaml.saml.common.messaging.context.SAMLBindingContext) }" />
    <bean id="shibboleth.ChildLookup.SAMLProtocolContext"
        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
        c:type="#{ T(org.opensaml.saml.common.messaging.context.SAMLProtocolContext) }" />
    <bean id="shibboleth.ChildLookup.SAMLPeerEntityContext"
        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
        c:type="#{ T(org.opensaml.saml.common.messaging.context.SAMLPeerEntityContext) }" />
    <bean id="shibboleth.ChildLookup.SAMLMetadataContext"
        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
        c:type="#{ T(org.opensaml.saml.common.messaging.context.SAMLMetadataContext) }" />
    <bean id="shibboleth.ChildLookupOrCreate.SAMLMessageInfoContext"
        class="org.opensaml.messaging.context.navigate.ChildContextLookup"
        c:type="#{ T(org.opensaml.saml.common.messaging.context.SAMLMessageInfoContext) }"
        c:createContext="true" />

    <bean id="shibboleth.ResponderIdLookup.Simple"
        class="net.shibboleth.idp.profile.context.navigate.ResponderIdLookupFunction" />

    <bean id="shibboleth.RelyingPartyIdLookup.Simple"
        class="net.shibboleth.idp.profile.context.navigate.RelyingPartyIdLookupFunction" />

    <bean id="shibboleth.PrincipalNameLookup.Subject"
        class="net.shibboleth.idp.authn.context.navigate.SubjectContextPrincipalLookupFunction" />
    <bean id="shibboleth.PrincipalNameLookup.Session"
        class="net.shibboleth.idp.session.context.navigate.SessionContextPrincipalLookupFunction" />

    <bean id="shibboleth.SignatureValidationConfigurationLookup"
        class="net.shibboleth.idp.profile.config.navigate.SignatureValidationConfigurationLookupFunction"
        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
    <bean id="shibboleth.SignatureSigningConfigurationLookup"
        class="net.shibboleth.idp.profile.config.navigate.SignatureSigningConfigurationLookupFunction"
        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
    <bean id="shibboleth.DecryptionConfigurationLookup"
        class="net.shibboleth.idp.profile.config.navigate.DecryptionConfigurationLookupFunction"
        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
    <bean id="shibboleth.EncryptionConfigurationLookup"
        class="net.shibboleth.idp.profile.config.navigate.EncryptionConfigurationLookupFunction"
        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
    <bean id="shibboleth.ClientTLSValidationConfigurationLookup"
        class="net.shibboleth.idp.profile.config.navigate.ClientTLSValidationConfigurationLookupFunction"
        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
    <bean id="shibboleth.SelfEncryptionConfigurationLookup"
        class="net.shibboleth.idp.profile.config.navigate.SelfEncryptionConfigurationLookupFunction"
        p:selfConfiguration="#{getObject('shibboleth.SelfEncryptionConfiguration')}"
        p:includeProfileDefaultConfiguration="%{idp.encryption.self.includeProfileDefaultConfiguration:false}"
        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />

    <util:list id="shibboleth.SAML1Status.VersionMismatch">
        <util:constant static-field="org.opensaml.saml.saml1.core.StatusCode.VERSION_MISMATCH" />
    </util:list>
    
    <util:list id="shibboleth.SAML1Status.Requester">
        <util:constant static-field="org.opensaml.saml.saml1.core.StatusCode.REQUESTER" />
    </util:list>

    <util:list id="shibboleth.SAML1Status.RequestDenied">
        <util:constant static-field="org.opensaml.saml.saml1.core.StatusCode.REQUESTER" />
        <util:constant static-field="org.opensaml.saml.saml1.core.StatusCode.REQUEST_DENIED" />
    </util:list>

    <util:list id="shibboleth.SAML1Status.Responder">
        <util:constant static-field="org.opensaml.saml.saml1.core.StatusCode.RESPONDER" />
    </util:list>

    <util:list id="shibboleth.SAML2Status.VersionMismatch">
        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.VERSION_MISMATCH" />
    </util:list>

    <util:list id="shibboleth.SAML2Status.RequestDenied">
        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUEST_DENIED" />
    </util:list>

    <util:list id="shibboleth.SAML2Status.RequestUnsupported">
        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUEST_UNSUPPORTED" />
    </util:list>

    <util:list id="shibboleth.SAML2Status.UnsupportedBinding">
        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.UNSUPPORTED_BINDING" />
    </util:list>

    <util:list id="shibboleth.SAML2Status.NoAuthnContext">
        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.NO_AUTHN_CONTEXT" />
    </util:list>

    <util:list id="shibboleth.SAML2Status.AuthnFailed">
        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.AUTHN_FAILED" />
    </util:list>

    <util:list id="shibboleth.SAML2Status.NoPassive">
        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.NO_PASSIVE" />
    </util:list>

    <util:list id="shibboleth.SAML2Status.UnknownPrincipal">
        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.UNKNOWN_PRINCIPAL" />
    </util:list>

    <util:list id="shibboleth.SAML2Status.InvalidNameIDPolicy">
        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.INVALID_NAMEID_POLICY" />
    </util:list>

    <util:list id="shibboleth.SAML2Status.ChannelBindingsError">
        <util:constant static-field="org.opensaml.saml.saml2.core.StatusCode.REQUESTER" />
        <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML20CB_NS" />
    </util:list>
    
    <util:constant id="shibboleth.SOAP.Client" static-field="org.opensaml.soap.soap11.FaultCode.CLIENT"/>
    <util:constant id="shibboleth.SOAP.Server" static-field="org.opensaml.soap.soap11.FaultCode.SERVER"/>
    <util:constant id="shibboleth.SOAP.MustUnderstand" static-field="org.opensaml.soap.soap11.FaultCode.MUST_UNDERSTAND"/>
    <util:constant id="shibboleth.SOAP.VersionMismatch" static-field="org.opensaml.soap.soap11.FaultCode.VERSION_MISMATCH"/>
    
</beans>
