<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
                           
       default-init-method="initialize"
       default-destroy-method="destroy">

	<import resource="../../conf/authn/authn-comparison.xml" />
	<import resource="../../conf/authn/general-authn.xml" />

    <!-- Parent beans for custom principal types. -->
    
    <bean id="shibboleth.SAML2AuthnContextClassRef"
        class="net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal" abstract="true" />
    <bean id="shibboleth.SAML2AuthnContextDeclRef"
        class="net.shibboleth.idp.saml.authn.principal.AuthnContextDeclRefPrincipal" abstract="true" />
    <bean id="shibboleth.SAML1AuthenticationMethod"
        class="net.shibboleth.idp.saml.authn.principal.AuthenticationMethodPrincipal" abstract="true" />

    <!-- A parent bean to default some of the flow boilerplate. -->

    <bean id="shibboleth.AuthenticationFlow" abstract="true"
            class="net.shibboleth.idp.authn.AuthenticationFlowDescriptor"
            p:resultSerializer-ref="shibboleth.DefaultAuthenticationResultSerializer"
            p:passiveAuthenticationSupported="false"
            p:forcedAuthenticationSupported="false"
            p:nonBrowserSupported="true"
            p:lifetime="%{idp.authn.defaultLifetime:PT60M}"
            p:inactivityTimeout="%{idp.authn.defaultTimeout:PT30M}">
        <property name="supportedPrincipals">
            <list>
                <bean parent="shibboleth.SAML2AuthnContextClassRef"
                    c:classRef="urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport" />
                <bean parent="shibboleth.SAML2AuthnContextClassRef"
                    c:classRef="urn:oasis:names:tc:SAML:2.0:ac:classes:Password" />
                <bean parent="shibboleth.SAML1AuthenticationMethod"
                    c:method="urn:oasis:names:tc:SAML:1.0:am:password" />
            </list>
        </property>
    </bean>

    <!-- Default list of custom Principal serializers; users can define their own list and merge it with this one. -->
    <bean id="shibboleth.DefaultPrincipalSerializers"
            class="org.springframework.beans.factory.config.ListFactoryBean">
        <property name="sourceList">
            <list>
                <bean class="net.shibboleth.idp.authn.principal.impl.UsernamePrincipalSerializer" />
                <bean class="net.shibboleth.idp.authn.principal.impl.LDAPPrincipalSerializer" />
                <bean class="net.shibboleth.idp.authn.duo.impl.DuoPrincipalSerializer" />
                <bean class="net.shibboleth.idp.authn.principal.impl.IdPAttributePrincipalSerializer" />
                <bean class="net.shibboleth.idp.authn.principal.impl.PasswordPrincipalSerializer"
                    p:dataSealer="#{'%{idp.sealer.storeResource:}'.trim().length() > 0 ? getObject('shibboleth.DataSealer') : null}" />
            </list>
        </property>
    </bean>
    
    <!--
    Defining this allows us to specify symbolic text replacements that shrink the size of results
    saved to client-side storage such as cookies.
    -->
    <bean id="shibboleth.DefaultPrincipalSymbolics"
            class="org.springframework.beans.factory.config.MapFactoryBean">
        <property name="sourceMap">
            <map>
                <!-- Custom principal types. -->
                <entry key="net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal" value="1" />
                <entry key="net.shibboleth.idp.saml.authn.principal.AuthnContextDeclRefPrincipal" value="2" />
                <entry key="net.shibboleth.idp.saml.authn.principal.AuthenticationMethodPrincipal" value="3" />
                <entry key="javax.security.auth.kerberos.KerberosPrincipal" value="4" />
                
                <!-- SAML 2 authn context classes. -->
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:InternetProtocol" value="100" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:InternetProtocolPassword" value="101" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:Kerberos" value="102" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:MobileOneFactorUnregistered" value="103" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorUnregistered" value="104" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:MobileOneFactorContract" value="105" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:MobileTwoFactorContract" value="106" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:Password" value="107" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport" value="108" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:PreviousSession" value="109" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:X509" value="110" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:PGP" value="111" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:SPKI" value="112" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:XMLDSig" value="113" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:Smartcard" value="114" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:SmartcardPKI" value="115" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:SoftwarePKI" value="116" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:Telephony" value="117" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:NomadTelephony" value="118" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:PersonalTelephony" value="119" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:AuthenticatedTelephony" value="120" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:SecureRemotePassword" value="121" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:TLSClient" value="122" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:TimeSyncToken" value="123" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:unspecified" value="124" />

                <!-- SAML 1 authn methods -->
                <entry key="urn:oasis:names:tc:SAML:1.0:am:password" value="200" />
                <entry key="urn:ietf:rfc:1510" value="201" />
                <entry key="urn:oasis:names:tc:SAML:1.0:am:HardwareToken" value="202" />
                <entry key="urn:oasis:names:tc:SAML:1.0:am:X509-PKI" value="203" />
                <entry key="urn:oasis:names:tc:SAML:1.0:am:PGP" value="204" />
                <entry key="urn:oasis:names:tc:SAML:1.0:am:SPKI" value="205" />
                <entry key="urn:oasis:names:tc:SAML:1.0:am:XKMS" value="206" />
                <entry key="urn:ietf:rfc:3075" value="207" />
                <entry key="urn:ietf:rfc:2945" value="208" />
                <entry key="urn:ietf:rfc:2246" value="209" />
                <entry key="urn:oasis:names:tc:SAML:1.0:am:unspecified" value="210" />
                
                <!-- Community-defined assurance profiles. -->
                <entry key="http://id.incommon.org/assurance/silver" value="300" />
                <entry key="http://id.incommon.org/assurance/bronze" value="301" />
            </map>
        </property>
    </bean>
    
    <!-- The serializer machinery injected into authentication flows by default. -->
    <bean id="shibboleth.DefaultAuthenticationResultSerializer"
            class="net.shibboleth.idp.authn.impl.DefaultAuthenticationResultSerializer">
        <property name="principalSerializers">
            <ref bean="#{getObject('shibboleth.PrincipalSerializers') != null
                ? 'shibboleth.PrincipalSerializers' : 'shibboleth.DefaultPrincipalSerializers'}" />
        </property>
        <property name="genericPrincipalSerializer.symbolics">
            <ref bean="#{getObject('shibboleth.PrincipalSymbolics') != null
                ? 'shibboleth.PrincipalSymbolics' : 'shibboleth.DefaultPrincipalSymbolics'}" />
        </property>
    </bean>

    <!-- Registry of comparison rules configured by deployer and injected into authentication flow. -->
    <bean id="shibboleth.AuthnComparisonRegistry"
            class="net.shibboleth.idp.authn.principal.PrincipalEvalPredicateFactoryRegistry"
            c:fromMap-ref="shibboleth.AuthnComparisonRules" />

    <!-- Exact matching for SAML AC Classes and Declarations (or anything else really). -->
    <bean id="shibboleth.ExactMatchFactory"
        class="net.shibboleth.idp.authn.principal.impl.ExactPrincipalEvalPredicateFactory"/>

    <!-- Parent bean for inexact matching factories defined by deployer. -->
    <bean id="shibboleth.InexactMatchFactory" abstract="true"
        class="net.shibboleth.idp.authn.principal.impl.InexactPrincipalEvalPredicateFactory" />

    <!-- Boilerplate objects needed to key the installation of matching rules in the comparison registry. -->

    <bean id="shibboleth.SAMLAuthnMethodExact" class="net.shibboleth.utilities.java.support.collection.Pair"
        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthenticationMethodPrincipal) }" p:second="exact"/>
    
    <bean id="shibboleth.SAMLACClassRefExact" class="net.shibboleth.utilities.java.support.collection.Pair"
        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal) }" p:second="exact"/>

    <bean id="shibboleth.SAMLACDeclRefExact" class="net.shibboleth.utilities.java.support.collection.Pair"
        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextDeclRefPrincipal) }" p:second="exact"/>

    <bean id="shibboleth.SAMLACClassRefMinimum" class="net.shibboleth.utilities.java.support.collection.Pair"
        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal) }" p:second="minimum"/>

    <bean id="shibboleth.SAMLACDeclRefMinimum" class="net.shibboleth.utilities.java.support.collection.Pair"
        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextDeclRefPrincipal) }" p:second="minimum"/>

    <bean id="shibboleth.SAMLACClassRefMaximum" class="net.shibboleth.utilities.java.support.collection.Pair"
        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal) }" p:second="maximum"/>

    <bean id="shibboleth.SAMLACDeclRefMaximum" class="net.shibboleth.utilities.java.support.collection.Pair"
        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextDeclRefPrincipal) }" p:second="maximum"/>

    <bean id="shibboleth.SAMLACClassRefBetter" class="net.shibboleth.utilities.java.support.collection.Pair"
        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextClassRefPrincipal) }" p:second="better"/>

    <bean id="shibboleth.SAMLACDeclRefBetter" class="net.shibboleth.utilities.java.support.collection.Pair"
        p:first="#{ T(net.shibboleth.idp.saml.authn.principal.AuthnContextDeclRefPrincipal) }" p:second="better"/>
    
</beans>
