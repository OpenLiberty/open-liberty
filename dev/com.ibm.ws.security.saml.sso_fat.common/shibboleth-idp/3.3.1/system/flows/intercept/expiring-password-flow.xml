 <flow xmlns="http://www.springframework.org/schema/webflow"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
       parent="intercept.abstract">

    <!-- Rudimentary impediment to direct execution of subflow. -->
    <input name="calledAsSubflow" type="boolean" required="true" />

    <!-- If the condition is true, we don't need to notify, otherwise check cookie to see if we do. -->
    <decision-state id="CheckContext">
        <if test="ExpiringPasswordPredicate.apply(opensamlProfileRequestContext)"
            then="ShouldUnsetCookie" else="CheckCookie" />
    </decision-state>

    <decision-state id="ShouldUnsetCookie">
        <if test="ExpiringPasswordCookieManager.getCookieValue(ExpiringPasswordCookieName, null) != null"
            then="UnsetCookie" else="proceed" />
    </decision-state>

    <action-state id="UnsetCookie">
        <evaluate expression="ExpiringPasswordCookieManager.unsetCookie(ExpiringPasswordCookieName)" />
        <transition to="proceed" />
    </action-state>

    <decision-state id="CheckCookie">
        <if test="T(java.lang.System).currentTimeMillis() - T(java.lang.Long).parseLong(ExpiringPasswordCookieManager.getCookieValue(ExpiringPasswordCookieName, '0')) > ExpiringPasswordNotifyInterval"
            then="DisplayExpiringPasswordView" else="proceed" />
    </decision-state>

    <view-state id="DisplayExpiringPasswordView" view="#{flowRequestContext.activeFlow.id}">
        <on-render>
            <evaluate expression="ExpiringPasswordCookieManager.addCookie(ExpiringPasswordCookieName, T(java.lang.Long).toString(T(java.lang.System).currentTimeMillis()))" />
            <evaluate expression="environment" result="viewScope.environment" />
            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
            <evaluate expression="flowRequestContext.getExternalContext().getNativeRequest()" result="viewScope.request" />
            <evaluate expression="flowRequestContext.getExternalContext().getNativeResponse()" result="viewScope.response" />
            <evaluate expression="opensamlProfileRequestContext" result="viewScope.profileRequestContext" />
            <evaluate expression="T(net.shibboleth.utilities.java.support.codec.HTMLEncoder)" result="viewScope.encoder" />
            <evaluate expression="flowRequestContext.getActiveFlow().getApplicationContext().containsBean('shibboleth.CustomViewContext') ? flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.CustomViewContext') : null" result="viewScope.custom" />
        </on-render>
        
        <transition to="proceed" />
    </view-state>

    <end-state id="proceed" />

    <bean-import resource="../../../system/flows/intercept/expiring-password-beans.xml" />

</flow>
