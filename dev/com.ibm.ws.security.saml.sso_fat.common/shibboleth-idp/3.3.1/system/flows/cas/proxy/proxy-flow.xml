<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="
          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
      parent="cas.abstract">

    <on-start>
        <set name="flowScope.casProtocolErrorView" value="'proxyFailure'" />
    </on-start>

    <action-state id="InitializeProxy">
        <evaluate expression="InitializeProfileRequestContext"/>
        <evaluate expression="PopulateMetricContext" />
        <evaluate expression="InitializeProxy" />
        <evaluate expression="BuildRelyingPartyContext" />
        <evaluate expression="BuildSAMLMetadataContext" />
        <evaluate expression="SelectRelyingPartyConfiguration" />
        <evaluate expression="SelectProfileConfiguration" />
        <evaluate expression="PublishProtocolRequest" />
        <evaluate expression="PopulateInboundInterceptContext" />
        <evaluate expression="'proceed'" />
        <transition on="proceed" to="CheckInboundInterceptContext" />
    </action-state>

    <decision-state id="CheckInboundInterceptContext">
        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
            then="GrantProxyTicket"
            else="DoInboundInterceptSubflow" />
    </decision-state>

    <subflow-state id="DoInboundInterceptSubflow" subflow="intercept">
        <input name="calledAsSubflow" value="true" />
        <transition on="proceed" to="GrantProxyTicket" />
    </subflow-state>

    <action-state id="GrantProxyTicket">
        <evaluate expression="GrantProxyTicket" />
        <evaluate expression="PopulateOutboundInterceptContext" />
        <evaluate expression="'proceed'" />
        <transition on="proceed" to="CheckOutboundInterceptContext" />
    </action-state>

    <decision-state id="CheckOutboundInterceptContext">
        <if test="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.profile.context.ProfileInterceptorContext)).getAvailableFlows().isEmpty()"
            then="ProxySuccess"
            else="DoOutboundInterceptSubflow" />
    </decision-state>

    <subflow-state id="DoOutboundInterceptSubflow" subflow="intercept">
        <input name="calledAsSubflow" value="true" />
        <transition on="proceed" to="ProxySuccess" />
        <transition to="HandleError" />
    </subflow-state>

    <!-- View end states -->
    <end-state id="ProxySuccess" view="cas/proxySuccess">
        <on-entry>
            <evaluate expression="PopulateAuditContext" />
            <evaluate expression="WriteAuditLog" />
            <evaluate expression="PublishProtocolResponse" />
            <set name="flashScope.escapeUtils" value="T(org.apache.commons.lang.StringEscapeUtils)" />
        </on-entry>
    </end-state>

    <bean-import resource="proxy-beans.xml" />

</flow>