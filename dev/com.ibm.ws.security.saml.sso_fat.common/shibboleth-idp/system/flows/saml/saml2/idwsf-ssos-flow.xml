<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
      parent="saml2.sso.abstract">
      
    <!-- Bootstrap action has to be at the "top" of the flow after this flow prepends itself to parent. -->
    
    <action-state id="InitializeProfileRequestContext">
        <evaluate expression="InitializeProfileRequestContext" />
        <evaluate expression="'proceed'" />

        <transition on="proceed" to="DecodeMessage" />
    </action-state>
      
    <action-state id="DecodeMessage">
        <!-- Here we override and "splice in" PostDecodeMessage to run after the this action defined in the parent flow -->
        <transition on="proceed" to="PostDecodeMessage" />
    </action-state>

    <action-state id="PostDecodeMessage">
        <evaluate expression="PopulateInboundMessageContextWithSAMLSelf" />
        <evaluate expression="ExtractMessageIDHandler" />
        <evaluate expression="ValidateActionHandler" />
        <evaluate expression="ProcessFrameworkHandler" />
        <evaluate expression="ProcessSenderHandler" />
        
        <!-- Note: SAMLPresenterContext entityID is populated by ProcessSenderHandler, so the ordering here is important. -->
        <evaluate expression="SAMLProtocolAndRoleForPresenter" />
        <evaluate expression="SAMLMetadataLookupForPresenter" />
        
        <evaluate expression="'proceed'" />
        
        <!-- If parent DecodeMessage's transition changes on 'proceed', this needs to also change. -->
        <transition on="proceed" to="CheckInboundInterceptContext" />
    </action-state>
    
    <action-state id="OutboundContextsAndSecurityParameters">
        <!-- Here we override and "splice in" LibertyOutboundContexts to run after the this action defined in the parent flow -->
        <transition on="proceed" to="LibertyOutboundContexts" />
    </action-state>
    
    <action-state id="LibertyOutboundContexts">
        <evaluate expression="LibertyOutboundContexts" />
        
        <evaluate expression="'proceed'" />
        
        <!-- If parent OutboundContextsAndSecurityParameters' transition changes on 'proceed', this needs to also change. -->
        <transition on="proceed" to="ExtractSubject" />
    </action-state>
    
    
    
    <action-state id="DoProfileWork">
        <!-- Here we override, "splice in" actions to run after the this action defined in the parent flow.
             We also "short-circuit" the entire authN and c14N process defined in the parent flow in favor of simpler inline approach here."  -->
        <transition on="proceed" to="ProcessSAMLToken" />
    </action-state>
    
    <action-state id="ProcessSAMLToken">
        <evaluate expression="PopulateLibertyContext" />
        <evaluate expression="EvaluateDelegationPolicy" />
        <evaluate expression="DecryptDelegatedAssertionNameID" />
        <evaluate expression="ProcessDelegatedAssertion" />
        <evaluate expression="PopulateSubjectCanonicalizationContext" />
        
        <evaluate expression="'proceed'" />
        
        <transition on="proceed" to="CallSAMLSubjectCanonicalization" />
    </action-state>
    
    <subflow-state id="CallSAMLSubjectCanonicalization" subflow="c14n">
        <input name="calledAsSubflow" value="true" />
        <transition on="proceed" to="FinalizeSAMLTokenProcessing" />
    </subflow-state>
    
    <action-state id="FinalizeSAMLTokenProcessing">
        <evaluate expression="FinalizeSAMLTokenProcessing" />
        
        <evaluate expression="'proceed'" />
        
        <transition on="proceed" to="ResolveAttributes" />
    </action-state>
    
    <action-state id="EncryptAndSign">
        <!-- Here we override and "splice in" ReturnToParentFlow to run after the this action defined in the parent flow -->
        <transition on="proceed" to="ReturnToParentFlow" />
    </action-state>

    <bean-import resource="idwsf-ssos-beans.xml" />

</flow>
