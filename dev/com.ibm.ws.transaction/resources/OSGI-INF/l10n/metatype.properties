###############################################################################
# Copyright (c) 2011,2021 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#CMVCPATHNAME com.ibm.ws.transaction/resources/OSGI-INF/l10n/metatype.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#
transaction.config=Transaction Manager
transaction.config.desc=Configuration properties for the Transaction Manager service

accept.heuristic.hazard=Accept heuristic hazard
accept.heuristic.hazard.desc=Specifies whether all applications on this server accept the possibility of a heuristic hazard occurring in a two-phase transaction that contains a one-phase resource.

OnePCOptimization=Enable 1PC optimization
OnePCOptimization.desc=Specifies whether the transaction manager optimizes when all resources but one vote read only.

recover.on.startup=Recover on startup
recover.on.startup.desc=Specifies whether the server should begin transaction recovery at server startup.

wait.for.recovery=Wait for recovery
wait.for.recovery.desc=Specifies whether the server should wait for transaction recovery to complete before accepting new transactional work.

client.inactivity.timeout=Client inactivity timeout
client.inactivity.timeout.desc=Maximum duration between transactional requests from a remote client. Any period of client inactivity that exceeds this timeout results in the transaction being rolled back in this application server.

heuristic.retry.interval=Heuristic retry wait
heuristic.retry.interval.desc=Amount of time that the application server waits before retrying a completion signal, such as commit or rollback, after a transient exception from a resource manager or remote partner.

heuristic.retry.limit=Heuristic retry limit
heuristic.retry.limit.desc=The number of times that the application server retries a completion signal, such as commit or rollback. Retries occur after a transient exception from a resource manager or remote partner.

max.transaction.timeout=Maximum transaction timeout
max.transaction.timeout.desc=Upper limit of the transaction timeout for transactions that run in this server. This value should be greater than or equal to the value specified for the total transaction timeout.

totalTranLifetimeTimeout=Total transaction lifetime timeout
totalTranLifetimeTimeout.desc=Default maximum time allowed for transactions started on this server to complete. Any such transactions that do not complete before this timeout occurs are rolled back.

transaction.log.directory=Transaction log directory
transaction.log.directory.desc=A directory for this server where the transaction service stores log files for recovery.

transaction.log.size=Transaction log size
transaction.log.size.desc=Specifies the size of transaction log files in Kilobytes.

recovery.identity=Identity of server for tran peer recovery
recovery.identity.desc=Unique identity of this server for transaction peer recovery.

recovery.group=Name of the recovery group
recovery.group.desc=Name of the recovery group that this server belongs too. Members of a recovery group can recover the transaction logs of other servers in the group.

logging.for.heuristic.reporting.enabled=Enable logging for heuristic reporting
logging.for.heuristic.reporting.enabled.desc=Specifies whether the application server logs about-to-commit-one-phase-resource events from transactions that involve both a one-phase commit resource and two-phase commit resources.

transaction.log.dbtablesuffix=Transaction log database table suffix
transaction.log.dbtablesuffix.desc=When recovery logs are stored in an RDBMS table, this property allows the table name to be post-pended with a string to make it unique for this Server.

timeout.grace.period.enabled=Enable transaction timeout grace period
timeout.grace.period.enabled.desc=Specifies whether there is a delay between a transaction timeout and the abnormal ending of the servant region that was running the transaction.

heuristic.completion.direction=Heuristic completion direction
heuristic.completion.direction.desc=Specifies the direction that is used to complete a transaction that has a heuristic outcome; either the application server commits or rolls back the transaction, or depends on manual completion by the administrator.  Allowed values are: COMMIT, ROLLBACK and MANUAL

dataSourceRef=Non-transactional Data Source 
dataSourceRef$Ref=Non-transactional data source reference 
dataSourceRef.desc=This is an optional property. By default the transaction service stores its recovery logs in a file. As an alternative it is possible to store the logs in an RDBMS. This is achieved by setting this property which defines a non-transactional data source where the transaction logs will be stored.

commit=Commit
rollback=Rollback
manual=Manual

default.max.shutdown.delay=Default maximum shutdown delay
default.max.shutdown.delay.desc=Default maximum shutdown delay

lease.check.strategy=Lease check strategy
lease.check.strategy.desc=The algorithm that is used by the recovery service to check the recovery lease log

lease.check.interval=Lease check interval
lease.check.interval.desc=The interval after which the lease check strategy is implemented

lease.length=Lease length
lease.length.desc=The length of time before a recovery log lease expires

lease.renewal.threshold=Lease Renewal Time
lease.renewal.threshold.desc=The percentage of the duration of the recovery log lease that passes before the lease is renewed
