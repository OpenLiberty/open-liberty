###############################################################################
# Copyright (c) 2011, 2020 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#CMVCPATHNAME com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#

onError.name=En caso de error
onError.desc=Acci\u00f3n a realizar despu\u00e9s de una anomal\u00eda para iniciar un punto final.
onError.warn=El servidor emitir\u00e1 mensajes de aviso y error si no se puede iniciar un punto final.
onError.fail=El servidor emitir\u00e1 mensajes de aviso y error si no se puede iniciar un punto final y despu\u00e9s se detendr\u00e1.
onError.ignore=El servidor no emitir\u00e1 mensajes de aviso y error cuando no se pueda iniciar un punto final.

virtualHost.name=Host virtual
virtualHost.desc=Un host virtual proporciona un agrupamiento l\u00f3gico para configurar aplicaciones web para un nombre de host en particular. El host virtual por omisi\u00f3n (default_host) es adecuado para la mayor\u00eda de las configuraciones simples.

virtualHost.enabled=Habilitado
virtualHost.enabled.desc=Habilita este host virtual.

virtualHost.hostAlias=Alias de host virtual
virtualHost.hostAlias.desc=Asocie un host y puerto con este host virtual, utilizando la sintaxis host:puerto. \
El host especificado puede ser una direcci\u00f3n IP, un nombre de host de servidor de nombres de dominio (DNS) con un sufijo de nombre de dominio, el nombre de host DNS, o * como comod\u00edn de coincidencia para todos los nombres de host. \
Tenga en cuenta que las direcciones IPv6 deben ir entre [].

virtualHost.allowFromEndpoint=Permitir desde puntos finales
virtualHost.allowFromEndpoint$Ref=Permitir desde puntos finales
virtualHost.allowFromEndpoint.desc=Especifique el identificador de uno o m\u00e1s puntos finales HTTP para restringir el tr\u00e1fico de entrada de este host virtual a los puntos finales especificados.

http.endpoint=Punto final HTTP
http.endpoint.desc=Propiedades de configuraci\u00f3n para un punto final HTTP.

endpoint.host=Host
endpoint.host.desc=Direcci\u00f3n IP, servidor de nombres de dominio (DNS), nombre de host con sufijo de nombre de dominio o s\u00f3lo el nombre de host DNS utilizados por un cliente para solicitar un recurso. Utilice '*' para todas las interfaces de red disponibles.

endpoint.enabled=Habilitado
endpoint.enabled.desc=Conmuta la disponibilidad de un punto final. Si tiene el valor true, el asignador activar\u00e1 este punto final para manejar las solicitudes HTTP.

endpoint.httpPort=Puerto
endpoint.httpPort.desc=Puerto utilizado para las solicitudes HTTP de cliente. Utilice -1 para inhabilitar este puerto.

endpoint.httpsPort=Puerto seguro
endpoint.httpsPort.desc=Puerto utilizado para las solicitudes HTTP de cliente con SSL (https). Utilice -1 para inhabilitar este puerto.

endpoint.virtualHost=Host virtual
endpoint.virtualHost.desc=ID de un host virtual configurado. Todos los puntos finales se asocian con el host virtual 'default_host' por omisi\u00f3n.

endpoint.protocolVersion=Versi\u00f3n de protocolo
endpoint.protocolVersion.desc=Cuando una API de Servlet 4.0 est\u00e1 habilitada como caracter\u00edstica, establezca este atributo en http/1.1 para inhabilitar el proceso de HTTP/2 para los puertos que se han definido para el elemento httpEndpoint. Cuando la API de Servlet 3.1 est\u00e1 habilitada como una caracter\u00edstica, establezca este atributo en http/2 para habilitar el proceso de HTTP/2 para los puertos que est\u00e1n definidos para el elemento httpEndpoint.

endpoint.tcpOptions=Opciones TCP
endpoint.tcpOptions$Ref=Referencia de opciones TCP
endpoint.tcpOptions.desc=Opciones del protocolo TCP para el punto final.

endpoint.sslOptions=Opciones SSL
endpoint.sslOptions$Ref=Referencia de opciones SSL
endpoint.sslOptions.desc=Opciones del protocolo SSL para el punto final.

endpoint.httpOptions=Opciones HTTP
endpoint.httpOptions$Ref=Referencia de opciones HTTP
endpoint.httpOptions.desc=Opciones del protocolo HTTP para el punto final.

endpoint.remoteIp=Opciones IP remotas
endpoint.remoteIp$Ref=Referencia de opciones IP remotas
endpoint.remoteIp.desc=Opciones IP remotas para el punto final.

endpoint.compression=Opciones de compresi\u00f3n
endpoint.compression$Ref=Referencia de opciones Compression
endpoint.compression.desc=Opciones de compresi\u00f3n para el punto final.

endpoint.samesite=Opciones de SameSite
endpoint.samesite$Ref=Referencia de opciones de SameSite
endpoint.samesite.desc=Opciones de SameSite para el punto final.

endpoint.accessLog=Registro de acceso HTTP
endpoint.accessLog$Ref=Referencia de registro de acceso HTTP
endpoint.accessLog.desc=Configuraci\u00f3n de registro de acceso HTTP para el punto final.

http.remoteip=Opciones IP remotas
http.remoteip.desc=Un elemento configurado en el elemento httpEndpoint de modo que el canal HTTP asociado est\u00e9 habilitado para considerar las cabeceras de solicitud X-Forwarded-* o Forwarded.

http.remoteip.proxies=Expresi\u00f3n regular de proxies
http.remoteip.proxies.desc=Expresi\u00f3n regular que define proxies de confianza.

http.remoteip.useRemoteIpInAccessLog=Utilizar IP remota en el registro de acceso
http.remoteip.useRemoteIpInAccessLog.desc=Si esta propiedad se establece en true y el canal HTTP verific\u00f3 la informaci\u00f3n del cliente remoto, el registro de acceso NCSA refleja las cabeceras Rewarded o X-Forwarded-*. Estas cabeceras se reflejan cuando se registra uno o m\u00e1s de los elementos siguientes: la IP del cliente remoto, el host o el protocolo de solicitud.

http.compression=Opciones de compresi\u00f3n
http.compression.desc=Un elemento configurado en el elemento httpEndpoint de modo que el canal HTTP asociado pueda tener en cuenta la compresi\u00f3n de cuerpos de respuesta bas\u00e1ndose en la cabecera Accept-Encoding del cliente.

http.samesite=Opciones de SameSite
http.samesite.desc=Un elemento configurado en el elemento httpEndpoint de modo que el canal HTTP asociado pueda tener en cuenta las configuraciones de SameSite.

http.options=Opciones HTTP
http.options.desc=Configuraci\u00f3n de protocolo HTTP.

http.keepAlive=Habilitar conexiones persistentes
http.keepAlive.desc=Habilita las conexiones persistentes (estado activo HTTP). Si tienen el valor true, las conexiones se mantendr\u00e1n activas para ser reutilizadas por varias solicitudes y respuestas secuenciales. Si tienen el valor false, las conexiones se cierran despu\u00e9s de enviarse la respuesta.

http.maxKeepAliveRequests=M\u00e1ximo de solicitudes persistentes por conexi\u00f3n
http.maxKeepAliveRequests.desc=N\u00famero m\u00e1ximo de solicitudes persistentes que se permiten en una \u00fanica conexi\u00f3n HTTP si est\u00e1n habilitadas las conexiones persistentes. El valor -1 indica ilimitado. Esta opci\u00f3n admite aplicaciones de alto rendimiento o baja latencia y conexiones SSL para utilizarlas en situaciones donde la creaci\u00f3n de una nueva conexi\u00f3n puede ser muy costosa.  

http.noCacheCookiesControl=No hay control de cookies de memoria cach\u00e9
http.noCacheCookiesControl.desc=Permite al usuario controlar cuando se debe modificar la presencia de una cabecera Set-Cookie con un valor de no-cache coincidente. Tambi\u00e9n se a\u00f1ade la cabecera Expires.

http.persistTimeout=Tiempo de espera de conexi\u00f3n persistente
http.persistTimeout.desc=Cantidad de tiempo que un socket puede permanecer desocupado entre solicitudes. Este valor s\u00f3lo se aplica si est\u00e1n habilitadas las conexiones persistentes.

http.readTimeout=Tiempo de espera de lectura
http.readTimeout.desc=Cantidad de tiempo que se debe esperar en un socket hasta que se complete una solicitud de lectura despu\u00e9s de la primera lectura.

http.writeTimeout=Tiempo de espera de escritura
http.writeTimeout.desc=Cantidad de tiempo que se debe esperar en un socket hasta que se transmita cada parte de los datos de respuesta.

http.removeServerHeader=Eliminar cabecera de servidor
http.removeServerHeader.desc=Elimina informaci\u00f3n de implementaci\u00f3n del servidor de las cabeceras HTTP.

http.limitNumHeaders=Limitar n\u00famero de cabeceras
http.limitNumHeaders.desc=Limita el n\u00famero de cabeceras HTTP que pueden existir en un mensaje entrante. Si se supera este l\u00edmite, se devuelve un error al cliente remoto.

http.limitFieldSize=Limitar tama\u00f1o de campo de cabecera
http.limitFieldSize.desc=Impone los l\u00edmites de tama\u00f1o en diversos campos HTTP, como los URL de solicitud o nombres o valores de cabeceras individuales. Aplicar los l\u00edmites de tama\u00f1o de estos campos impide posibles ataques de denegaci\u00f3n de servicio. Se devuelve un error al cliente remoto, si un campo excede el tama\u00f1o permitido.

http.doNotAllowDuplicateSetCookies=No permitir duplicar cookies definidas
http.doNotAllowDuplicateSetCookies.desc=Impide que el canal HTTP env\u00ede varias cabeceras Set-Cookie con el mismo nombre.

http.messageSizeLimit=L\u00edmite de tama\u00f1o de mensaje
http.messageSizeLimit.desc= Limita el tama\u00f1o aceptable de un mensaje entrante. Si el mensaje llega con un tama\u00f1o mayor que este valor, se devuelve un mensaje al cliente remoto.

http.incomingBodyBufferSize=Tama\u00f1o del almacenamiento intermedio de cuerpo entrante
http.incomingBodyBufferSize.desc=Especifica el tama\u00f1o de cada almacenamiento intermedio utilizado al leer el cuerpo de un mensaje HTTP entrante.

http.throwIOEForInboundConnections=Generar excepci\u00f3n de E/S para conexiones de entrada
http.throwIOEForInboundConnections.desc=Especifica si el canal HTTP crea una excepci\u00f3n de E/S cuando se cierra una conexi\u00f3n de entrada mientras el servlet todav\u00eda la est\u00e1 utilizando. El valor predeterminado se establece en funci\u00f3n de la caracter\u00edstica de servlet configurada. Antes de Servlet 4.0, el valor predeterminado es false; a partir de Servlet 4.0, el valor predeterminado es true.

http2.connectionIdleTimeout=Tiempo de espera inactivo de conexi\u00f3n HTTP/2
http2.connectionIdleTimeout.desc=Especifica la cantidad de tiempo, en segundos, que se permitir\u00e1 que una conexi\u00f3n HTTP/2 permanezca inactiva entre operaciones de E/S de socket. Si no se especifica, o se establece en un valor de 0, no hay ning\u00fan tiempo de espera de conexi\u00f3n establecido.

http2.maxConcurrentStreams=M\u00e1ximo de corrientes simult\u00e1neas
http2.maxConcurrentStreams.desc=Especifica el n\u00famero m\u00e1ximo de corrientes que una conexi\u00f3n HTTP/2 puede tener activas en cualquier punto determinado. La apertura de corrientes por encima del l\u00edmite producir\u00e1 un REFUSED_STREAM (0x7). Si no se especifica, el valor predeterminado de corrientes simult\u00e1neas se establecer\u00e1 en 200.

http2.maxFrameSize=Tama\u00f1o m\u00e1ximo de trama
http2.maxFrameSize.desc=Especifica el tama\u00f1o m\u00e1ximo permitido de una carga \u00fatil de trama que el servidor anunciar\u00e1 en la trama de valores SETTINGS_MAS_FRAME_SIZE HTTP/2. Esto se puede configurar en cualquier tama\u00f1o dentro del rango de 16.384 a 16.777.215 bytes, inclusive. Si no se especifica, el valor predeterminado se establece en 57.344 bytes.

log.access=Registro de acceso HTTP
log.access.desc=Los registros de acceso HTTP contienen un registro de todas las solicitudes de cliente HTTP de entrada.

log.access.enabled=Habilitado
log.access.enabled.desc=Permite el registro de acceso cuando se define el elemento de configuraci\u00f3n accessLogging. Nota: Se debe configurar el registro de acceso para que este atributo entre en vigor.

log.access.filePath=V\u00eda de acceso del archivo de registro
log.access.filePath.desc=V\u00eda de acceso y nombre de directorio del archivo de registro de acceso. Las sustituciones de variables est\u00e1ndar, como ${server.output.dir}, se pueden utilizar al especificar la v\u00eda de acceso del directorio.

log.access.logFormat=Formato
log.access.logFormat.desc=Especifica el formato de registro que se utiliza al registrar la informaci\u00f3n de acceso del cliente.

log.access.max.file.size=Tama\u00f1o m\u00e1ximo del archivo de registro
log.access.max.file.size.desc=Tama\u00f1o m\u00e1ximo de un archivo de registro, en megabytes, antes de que se retrotraiga; un valor 0 significa que no hay ning\u00fan l\u00edmite.

log.access.max.files=M\u00e1ximo de archivos de registro
log.access.max.files.desc=N\u00famero m\u00e1ximo que se mantendr\u00e1 de archivos de registro, antes de que se elimine el archivo m\u00e1s antiguo; un valor 0 significa que no hay ning\u00fan l\u00edmite.

http.dispatcher=Asignador HTTP
http.dispatcher.desc=Configuraci\u00f3n del asignador HTTP

dispatcher.trustedHeaderOrigin=Origen de cabecera privada de confianza
dispatcher.trustedHeaderOrigin.desc=El plug-in de servidor web utiliza cabeceras privadas para proporcionar informaci\u00f3n acerca de la solicitud original. Estas cabeceras tienen prioridad sobre la cabecera de host HTTP y se utilizan para seleccionar un host virtual para dar servicio a una solicitud. El valor predeterminado es '*', que conf\u00eda en las cabeceras privadas de entrada procedentes de cualquier origen. Para inhabilitar las cabeceras privadas y confiar solo en la cabecera de host http, especifique 'none'. Para restringir el proceso de cabeceras privadas a or\u00edgenes de confianza espec\u00edficos, especifique una lista de direcciones IP y nombres de host separados por comas. Esta lista admite caracteres comod\u00edn '*', con las siguientes restricciones: las direcciones IP no se pueden abreviar y deben contener un valor para cada campo, por ejemplo "127.0.0.*" o "0:0:0:0:0:ffff:*:*", y los nombres de host deben empezar por "*.", por ejemplo "*.ibm.com". En el ejemplo siguiente se muestra una lista v\u00e1lida que incluye caracteres comod\u00edn: "localhost, 127.0.0.1, 192.168.*.*, 0:0:0:0:0:ffff:*:*, *.ibm.com".

dispatcher.trustedSensitiveHeaderOrigin=Origen de cabecera privada confidencial de confianza
dispatcher.trustedSensitiveHeaderOrigin.desc=El plug-in de servidor web utiliza cabeceras privadas para proporcionar informaci\u00f3n acerca de la solicitud original. Un subconjunto de estas cabeceras se considera confidencial. El valor predeterminado de esta propiedad es 'none'. Las cabeceras privadas entrantes confidenciales no son de confianza desde ning\u00fan origen. Para permitir el proceso de cabeceras privadas para or\u00edgenes de confianza espec\u00edficos, especifique una lista de direcciones IP y nombres de host separados por comas. Para confiar en las cabeceras privadas confidenciales de entrada procedentes de cualquier origen, especifique '*'. Esta lista admite caracteres comod\u00edn '*', con las siguientes restricciones: las direcciones IP no se pueden abreviar y deben contener un valor para cada campo, por ejemplo "127.0.0.*" o "0:0:0:0:0:ffff:*:*", y los nombres de host deben empezar por "*.", por ejemplo "*.ibm.com". En el ejemplo siguiente se muestra una lista v\u00e1lida que incluye caracteres comod\u00edn: "localhost, 127.0.0.1, 192.168.*.*, 0:0:0:0:0:ffff:*:*, *.ibm.com".

appOrContextRootMissingMessage=Mensaje si no se encuentra la aplicaci\u00f3n
appOrContextRootMissingMessage.desc=Mensaje que se devuelve al cliente si no se encuentra la aplicaci\u00f3n en el URI solicitado.

padAppOrContextRootMissingMessage=Cuando no se encuentra una aplicaci\u00f3n, rellenar la salida del mensaje hasta 512 bytes.
padAppOrContextRootMissingMessage.desc=Si el mensaje que se devuelve al cliente cuando no se encuentra la aplicaci\u00f3n en el URI solicitado tiene menos de 512 bytes, se a\u00f1ade un comentario al final del mensaje para que tenga al menos 512 bytes.

enableWelcomePage=Habilitar p\u00e1gina de bienvenida
enableWelcomePage.desc=Habilita la p\u00e1gina de bienvenida del perfil Liberty por omisi\u00f3n cuando no hay ninguna aplicaci\u00f3n enlazada a una ra\u00edz de contexto de "/".  El valor por omisi\u00f3n es true.
#HttpProxyRedirect
http.proxyredirect=Redirecci\u00f3n de proxy HTTP
http.proxyredirect.desc=Configura la redirecci\u00f3n de puertos. La redirecci\u00f3n de proxy HTTP se utiliza cuando se redireccionan solicitudes HTTP desde un puerto no seguro (por ejemplo, 80) a un puerto seguro habilitado con SSL (por ejemplo, 443).

http.proxyredirect.enabled=Habilitado
http.proxyredirect.enabled.desc=Este atributo determina si el servidor deber\u00eda redirigir o no los puertos que est\u00e1n especificados en este elemento de configuraci\u00f3n. El valor predeterminado es true.

http.proxyredirect.host=Host
http.proxyredirect.host.desc=El nombre de host utilizado para esta redirecci\u00f3n de proxy. El servidor redirecciona las solicitudes HTTP s\u00f3lo si la solicitud entrante especifica un nombre de host que coincide con este valor. El valor predeterminado es * (todos los hosts).

http.proxyredirect.httpPort=Puerto HTTP
http.proxyredirect.httpPort.desc=El puerto (no seguro) desde el que se redirecciona. Las solicitudes HTTP que entran por este puerto se redireccionan al puerto HTTPS especificado.

http.proxyredirect.httpsPort=Puerto HTTPS
http.proxyredirect.httpsPort.desc=El puerto (seguro) al que se redirecciona. Las solicitudes HTTP entrantes que utilizan el puerto HTTP se redireccionan a este puerto.

http.autoDecompression=Descompresi\u00f3n autom\u00e1tica
http.autoDecompression.desc=Especifica si el canal HTTP descomprime autom\u00e1ticamente los datos del cuerpo de solicitud entrantes.

http.decompressionRatioLimit=L\u00edmite de proporci\u00f3n de descompresi\u00f3n
http.decompressionRatioLimit.desc=Especifica la proporci\u00f3n m\u00e1xima de carga \u00fatil de cuerpo de solicitud descomprimido a comprimido. El canal HTTP lee el cuerpo de solicitud y verifica la proporci\u00f3n a medida que el cuerpo se descomprime. El canal detiene la descompresi\u00f3n del cuerpo de solicitud si la proporci\u00f3n de descompresi\u00f3n permanece por encima del valor configurado y se alcanza la tolerancia de descompresi\u00f3n.

http.decompressionTolerance=Tolerancia de descompresi\u00f3n
http.decompressionTolerance.desc=Especifica el n\u00famero m\u00e1ximo de veces que el canal HTTP tolera una proporci\u00f3n de descompresi\u00f3n por encima de la proporci\u00f3n configurada, indicada por el atributo decompressionRatioLimit de httpOption. Si se alcanza este n\u00famero y el siguiente ciclo de descompresi\u00f3n a\u00fan contiene una proporci\u00f3n de descompresi\u00f3n por encima del l\u00edmite de proporci\u00f3n, el canal HTTP deja de descomprimir el cuerpo de solicitud.

http.compression.types=Lista de tipos de contenido para compresi\u00f3n de respuesta
http.compression.types.desc=Para incluir un tipo de contenido adem\u00e1s de los valores predeterminados, fije el car\u00e1cter de adici\u00f3n (+) como prefijo para dicho tipo de contenido. Para excluir un tipo de contenido para compresi\u00f3n, fije el car\u00e1cter de eliminaci\u00f3n (-) como prefijo para dicho tipo de contenido. Nota: El car\u00e1cter comod\u00edn (*) s\u00f3lo se soporta como subtipo de contenido, por ejemplo text/*.

http.compression.serverPreferredAlgorithm=Algoritmo preferido de servidor para compresi\u00f3n
http.compression.serverPreferredAlgorithm.desc=El algoritmo de compresi\u00f3n configurado se utiliza para comprimir el cuerpo de respuestas cuando se especifica con un valor de calidad no cero en la cabecera Accept-Encoding de la solicitud. Los algoritmos de compresi\u00f3n v\u00e1lidos incluyen: deflate, gzip, x-gzip, zlib e identity.

http.samesite.lax=Lista de cookies lax de samesite
http.samesite.lax.desc=Lista de nombres de cookie o patrones para los que el atributo de SameSite se ha establecido en un valor de Lax, si a\u00fan no se ha definido. Se soporta un car\u00e1cter comod\u00edn \u00fanico (*) como valor aut\u00f3nomo o a continuaci\u00f3n de los prefijos de nombre de cookie. Cualquier nombre de cookie o patr\u00f3n definido por esta lista debe ser exclusivo y no debe estar presente en las configuraciones 'none' ni 'strict'.

http.samesite.none=Lista de cookies none de samesite
http.samesite.none.desc=Lista de nombres de cookie o patrones para los que el atributo de SameSite se ha establecido en un valor de None, si a\u00fan no se ha definido. Se soporta un car\u00e1cter comod\u00edn \u00fanico (*) como valor aut\u00f3nomo o a continuaci\u00f3n de los prefijos de nombre de cookie. Cualquier nombre de cookie o patr\u00f3n definido por esta lista debe ser exclusivo y no debe estar presente en las configuraciones 'lax' ni 'strict'. Cada cookie modificado para contener un valor de SameSite de None como resultado de esta configuraci\u00f3n tambi\u00e9n est\u00e1 establecido en Secure.

http.samesite.strict=Lista de cookies strict de samesite
http.samesite.strict.desc=Lista de nombres de cookie o patrones para los que el atributo de SameSite se ha establecido en un valor de Strict, si a\u00fan no se ha definido. Se soporta un car\u00e1cter comod\u00edn \u00fanico (*) como valor aut\u00f3nomo o a continuaci\u00f3n de los prefijos de nombre de cookie. Cualquier nombre de cookie o patr\u00f3n definido por esta lista debe ser exclusivo y no debe estar presente en las configuraciones 'lax' ni 'none'.
