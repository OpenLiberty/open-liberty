###############################################################################
# Copyright (c) 2011, 2018 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#CMVCPATHNAME com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#

onError.name=Bei Fehler
onError.desc=Aktion, die ausgef\u00fchrt werden soll, wenn ein Endpunkt nicht gestartet werden konnte. 
onError.warn=Der Server gibt Warnungen und Fehlernachrichten aus, wenn ein Endpunkt nicht gestartet werden kann. 
onError.fail=Der Server gibt Warnungen und Fehlernachrichten aus, wenn ein Endpunkt nicht gestartet werden kann, und wird dann gestoppt.
onError.ignore=Der Server gibt keine Warnungen und Fehlernachrichten aus, wenn ein Endpunkt nicht gestartet werden kann.

virtualHost.name=Virtueller Host
virtualHost.desc=Ein virtueller Host stellt eine logische Gruppierung f\u00fcr die Konfiguration von Webanwendungen auf einem bestimmten Host dar. Der virtuelle Standardhost (default_host) ist f\u00fcr die meisten einfachen Konfigurationen geeignet.

virtualHost.enabled=Aktiviert
virtualHost.enabled.desc=Aktiviert diesen virtuellen Host.

virtualHost.hostAlias=Alias f\u00fcr virtuellen Host
virtualHost.hostAlias.desc=Ordnen Sie diesem virtuellen Host einen Hostnamen und einen Port mit der Syntax Host:Port zu. \
Sie k\u00f6nnen eine IP-Adresse, den Hostnamen eines Dom\u00e4nennamensservers (DNS) mit einem Dom\u00e4nennamenssuffix, den DNS-Hostnamen oder * f\u00fcr eine Platzhaltersuche in allen Hostnamen angeben. \
IPv6-Adressen m\u00fcssen in [] eingeschlossen werden.

virtualHost.allowFromEndpoint=Daten von folgenden Endpunkten zulassen
virtualHost.allowFromEndpoint$Ref=Daten von folgenden Endpunkten zulassen
virtualHost.allowFromEndpoint.desc=Geben Sie die IDs der HTTP-Endpunkte an, auf die Sie den eingehenden Datenverkehr f\u00fcr diesen virtuellen Hosts beschr\u00e4nken m\u00f6chten.

http.endpoint=HTTP-Endpunkt
http.endpoint.desc=Konfigurationseigenschaften f\u00fcr einen HTTP-Endpunkt.

endpoint.host=Host
endpoint.host.desc=Die IP-Adresse, der DNS-Hostname mit dem Dom\u00e4nennamenssuffix oder nur der DNS-Hostname der von einem Client f\u00fcr die Anforderung einer Ressource verwendet wird. Verwenden Sie '*' f\u00fcr alle verf\u00fcgbaren Netzschnittstellen.

endpoint.enabled=Aktiviert
endpoint.enabled.desc=Aktiviert bzw. inaktiviert einen Endpunkt. Wenn Sie diese Option ausw\u00e4hlen, wird dieser Endpunkt vom Dispatcher f\u00fcr die Verarbeitung von HTTP-Anforderungen aktiviert.

endpoint.httpPort=Port
endpoint.httpPort.desc=Der f\u00fcr HTTP-Clientanforderungen verwendete Port. Verwenden Sie -1, um diesen Port zu inaktivieren.

endpoint.httpsPort=Sicherer Port
endpoint.httpsPort.desc=Der f\u00fcr HTTP-Clientanforderungen, die mit SSL (https) gesichert sind, verwendete Port. Verwenden Sie -1, um diesen Port zu inaktivieren.

endpoint.virtualHost=Virtueller Host
endpoint.virtualHost.desc=ID eines konfigurierten virtuellen Hosts. Alle Endpunkte werden standardm\u00e4\u00dfig dem virtuellen Host 'default_host' zugeordnet. 

endpoint.tcpOptions=TCP-Optionen
endpoint.tcpOptions$Ref=Referenz der TCP-Optionen
endpoint.tcpOptions.desc=TCP-Protokolloptionen f\u00fcr den Endpunkt. 

endpoint.sslOptions=SSL-Optionen 
endpoint.sslOptions$Ref=Referenz der SSL-Optionen
endpoint.sslOptions.desc=SSL-Protokolloptionen f\u00fcr den Endpunkt.

endpoint.httpOptions=HTTP-Optionen
endpoint.httpOptions$Ref=Referenz der HTTP-Optionen
endpoint.httpOptions.desc=HTTP-Protokolloptionen f\u00fcr den Endpunkt. 

endpoint.remoteIp=Optionen f\u00fcr ferne IP
endpoint.remoteIp$Ref=Optionsverweis f\u00fcr ferne IP
endpoint.remoteIp.desc=Optionen f\u00fcr die ferne IP f\u00fcr den Endpunkt.

endpoint.accessLog=HTTP-Zugriffsprotokollierung
endpoint.accessLog$Ref=Referenz der HTTP-Zugriffsprotokollierung
endpoint.accessLog.desc=Konfiguration der HTTP-Zugriffsprotokollierung f\u00fcr den Endpunkt.

http.remoteip=Optionen f\u00fcr ferne IP
http.remoteip.desc=Ein innerhalb des httpEndpoint-Elements konfiguriertes Element, das daf\u00fcr sorgt, dass der zugeh\u00f6rige HTTP-Kanal so aktiviert ist, dass X-Forwarded-*- oder Forwarded-Anforderungsheader ber\u00fccksichtigt werden k\u00f6nnen.

http.remoteip.proxies=Regul\u00e4rer Ausdruck f\u00fcr Proxys
http.remoteip.proxies.desc=Ein regul\u00e4rer Ausdruck, der vertrauensw\u00fcrdige Proxys definiert.

http.remoteip.useRemoteIpInAccessLog=Ferne IP im Zugriffsprotokoll verwenden
http.remoteip.useRemoteIpInAccessLog.desc=Wenn diese Eigenschaft auf true gesetzt ist und die Informationen des fernen Clients \u00fcber den HTTP-Kanal gepr\u00fcft wurden, bildet das NCSA-Zugriffsprotokoll die Forwarded- oder X-Forwarded-*-Header ab. Diese Header werden abgebildet, wenn eines der folgenden Element aufgezeichnet werden: die ferne Client-IP, der Host oder das Anforderungsprotokoll.

http.options=HTTP-Optionen
http.options.desc=HTTP-Protokollkonfiguration.

http.keepAlive=Persistente Verbindungen aktivieren
http.keepAlive.desc=Aktiviert persistente Verbindungen (HTTP-Keepalive). Wenn Sie diese Option ausw\u00e4hlen, bleiben Verbindungen f\u00fcr die Wiederverwendung durch mehrere aufeinanderfolgende Anforderungen und Antworten aktiv. Wenn Sie diese Option nicht ausw\u00e4hlen, werden Verbindungen nach dem Senden der Antwort geschlossen. 

http.maxKeepAliveRequests=Maximale Anzahl persistenter Anforderungen pro Verbindung
http.maxKeepAliveRequests.desc=Gibt die maximal zul\u00e4ssige Anzahl persistenter Anforderungen in einer einzelnen HTTP-Verbindung an, wenn persistente Verbindungen aktiviert sind. Ein Wert von -1 bedeutet uneingeschr\u00e4nkt. 

http.noCacheCookiesControl=Keine Cache-Cookie-Steuerung
http.noCacheCookiesControl.desc=Erm\u00f6glicht dem Benutzer festzulegen, ob beim Vorhandensein eines Headers Set-Cookie der Header Cache-Control mit einem \u00fcbereinstimmenden Wert f\u00fcr no-cache aktualisiert wird. Damit wird auch der Header Expires hinzugef\u00fcgt.

http.persistTimeout=Zeitlimit f\u00fcr persistente Verbindungen
http.persistTimeout.desc=Gibt an, wie lange ein Socket zwischen Anforderungen inaktiv bleiben darf. Diese Einstellung gilt nur wenn persistente Verbindungen aktiviert sind.

http.readTimeout=Lesezeitlimit
http.readTimeout.desc=Gibt an, wie lange auf den Abschluss einer Leseanforderung an einem Socket nach Abschluss der ersten Leseanforderung gewartet wird. 

http.writeTimeout=Schreibzeitlimit
http.writeTimeout.desc=Gibt an, wie lange an einem Socket auf die \u00dcbertragung jedes Teils der Antwortdaten gewartet wird.

http.removeServerHeader=Server-Header entfernen
http.removeServerHeader.desc=Entfernt die Informationen zur Serverimplementierung aus HTTP-Headern und inaktiviert die Standardeinf\u00fchrungsseite des Liberty-Profils.

http.limitNumHeaders=Headeranzahl begrenzen
http.limitNumHeaders.desc=Begrenzt die zul\u00e4ssige Anzahl von HTTP-Headern in einer eingehenden Nachricht. Bei einer \u00dcberschreitung dieses Grenzwerts wird ein Fehler an den fernen Client zur\u00fcckgegeben.

http.limitFieldSize=Gr\u00f6\u00dfe von Headerfeldern begrenzen
http.limitFieldSize.desc=Erzwingt die Gr\u00f6\u00dfenbegrenzung f\u00fcr verschiedene HTTP-Felder, wie z. B. Anforderungs-URLs, oder einzelne Headernamen oder -werte. Die Durchsetzung der Gr\u00f6\u00dfenbegrenzungen f\u00fcr diese Felder bietet einen Schutz vor potenziellen Denial-of-Service-Attacken. Es wird ein Fehler an den fernen Client zur\u00fcckgegeben, wenn ein Feld die zul\u00e4ssige Gr\u00f6\u00dfe \u00fcberschreitet.

http.doNotAllowDuplicateSetCookies=Doppelte Set-Cookie-Header nicht zulassen
http.doNotAllowDuplicateSetCookies.desc=Verhindert, dass der HTTP-Kanal mehrere Set-Cookie-Header mit demselben Namen sendet.

http.messageSizeLimit=Grenzwert f\u00fcr Nachrichtengr\u00f6\u00dfe
http.messageSizeLimit.desc= Begrenzt die zul\u00e4ssige Gr\u00f6\u00dfe einer eingehenden Nachricht. Wenn eine Nachricht eingeht, deren Gr\u00f6\u00dfe diesen Wert \u00fcberschreitet, wird ein Fehler an den fernen Client zur\u00fcckgegeben.

http.incomingBodyBufferSize=Puffergr\u00f6\u00dfe f\u00fcr eingehende Nachrichtenhauptteile
http.incomingBodyBufferSize.desc=Legt die Gr\u00f6\u00dfe der einzelnen Puffer an, die zum Lesen des Hauptteils eingehender HTTP-Nachrichten verwendet werden.

http2.connectionIdleTimeout=Inaktivit\u00e4tszeitlimit f\u00fcr HTTP/2-Verbindungen
http2.connectionIdleTimeout.desc=Gibt an, wie lange (in Sekunden) eine HTTP/2-Verbindung zwischen E/A-Socketoperationen inaktiv bleiben darf. Wenn kein Zeitlimit oder der Wert 0 angegeben wird, wird kein Zeitlimit gesetzt.

http2.maxConcurrentStreams=Max. gleichzeitige Datenstr\u00f6me
http2.maxConcurrentStreams.desc=Gibt die maximale Anzahl an Datenstr\u00f6men an, die in einer HTTP/2-Verbindung jeweils gleichzeitig aktiv sein k\u00f6nnen. Wenn beim \u00d6ffnen eines Datenstroms dieser Grenzwert \u00fcberschritten wird, f\u00fchrt dies zu REFUSED_STREAM (0x7). Wenn Sie keinen Grenzwert festlegen, wird der Standardwert von 200 gleichzeitigen Datenstr\u00f6men verwendet.

http2.maxFrameSize=Max. Rahmengr\u00f6\u00dfe
http2.maxFrameSize.desc=Gibt die maximal zul\u00e4ssige Gr\u00f6\u00dfe von Rahmennutzdaten an, die der Server im HTTP/2-Einstellungsrahmen SETTINGS_MAS_FRAME_SIZE bereitstellt. Der g\u00fcltige Wertebereich f\u00fcr diese Einstellung ist 16.384 bis 16.777.215 Byte einschlie\u00dflich. Wenn Sie keinen Wert festlegen, wird der Standardwert von 57.344 Byte verwendet.

log.access=HTTP-Zugriffsprotokollierung
log.access.desc=Die HTTP-Zugriffsprotokolle enthalten eine Aufzeichnung aller eingehenden HTTP-Clientanforderungen.

log.access.enabled=Aktiviert
log.access.enabled.desc=Aktiviert die Zugriffsprotokollierung.

log.access.filePath=Protokolldateipfad
log.access.filePath.desc=Der Verzeichnispfad und der Name der Zugriffsprotokolldatei. Bei der Angabe des Verzeichnispfads k\u00f6nnen Standardvariablensubstitutionen wie ${server.output.dir} verwendet werden.

log.access.logFormat=Format
log.access.logFormat.desc=Gibt das Protokollformat an, das f\u00fcr die Protokollierung von Clientzugriffsinformationen verwendet wird.

log.access.max.file.size=Maximale Protokolldateigr\u00f6\u00dfe
log.access.max.file.size.desc=Die maximale Gr\u00f6\u00dfe in MB, die eine Protokolldatei annehmen kann, bevor sie von vorn \u00fcberschrieben wird. Der Wert 0 bedeutet, dass die Gr\u00f6\u00dfe nicht begrenzt ist.

log.access.max.files=Maximale Anzahl an Protokolldateien
log.access.max.files.desc=Die maximale Anzahl an Protokolldateien, die erstellt werden k\u00f6nnen, bevor die \u00e4lteste entfernt wird. Der Wert 0 bedeutet, dass die Anzahl nicht begrenzt ist.

http.dispatcher=HTTP-Dispatcher
http.dispatcher.desc=HTTP-Dispatcher-Konfiguration.

dispatcher.trustedHeaderOrigin=Ursprung des anerkannten privaten Headers
dispatcher.trustedHeaderOrigin.desc=Private Header werden vom Web-Server-Plug-in verwendet, um Informationen zur urspr\u00fcnglichen Anforderung bereitzustellen. \
Diese Header haben Vorrang vor dem Host-Header http und werden verwendet, um einen virtuellen Host f\u00fcr die Verarbeitung einer Anforderung auszuw\u00e4hlen. \
Der Standardwert ist '*'. Dieser Wert erkennt eingehende private Header von jeder Quelle an. \
Geben Sie 'none' an, um private Header zu inaktivieren und sich nur auf den Host-Header http zu verlassen, oder geben Sie eine Liste mit IP-Adressen an, um die Verarbeitung privater Header auf bestimmte anerkannte Quellen zu beschr\u00e4nken.

dispatcher.trustedSensitiveHeaderOrigin=Ursprung des anerkannten sensiblen privaten Headers
dispatcher.trustedSensitiveHeaderOrigin.desc=Private Header werden vom Web-Server-Plug-in verwendet, um Informationen zur urspr\u00fcnglichen Anforderung bereitzustellen. \
Ein Subset dieser Header wird als sensibel eingestuft. \
Standardm\u00e4\u00dfig ist der Wert f\u00fcr diese Eigenschaft 'none'. \
Eingehende, sensible private Header werden von keiner Quelle anerkannt. \
Geben Sie eine durch Kommas getrennte Liste mit IP-Adressen, wie z. B. {1.1.2.2, F:FF:FFF:FFFF:1:11:111:1111} an, damit sensible private Header f\u00fcr bestimmte anerkannte Quellen verarbeitet werden k\u00f6nnen, oder geben Sie '*' an, damit eingehende, sensible private Header von einer beliebigen Quelle anerkannt werden.

appOrContextRootMissingMessage=Nachricht, die ausgegeben werden soll, wenn die Anwendung nicht gefunden wird
appOrContextRootMissingMessage.desc=Nachricht, die an den Client zur\u00fcckgegeben werden soll, wenn die Anwendung im angeforderten URI nicht gefunden wird.

padAppOrContextRootMissingMessage=Wenn eine Anwendung nicht gefunden werden kann, wird die Nachrichtenausgabe auf 512 Bytes erweitert.
padAppOrContextRootMissingMessage.desc=Wenn die Nachricht, die an den Client zur\u00fcckgegeben wird, wenn die Anwendung im angeforderten URI nicht gefunden wird, kleiner ist als 512 Bytes, wird am Ende der Nachricht ein Kommentar hinzugef\u00fcgt, damit sie mindestens 512 Bytes hat.

enableWelcomePage=Einf\u00fchrungsseite aktivieren
enableWelcomePage.desc=Aktiviert die Standardeinf\u00fchrungsseite des Liberty-Profils, wenn keine Anwendung an das Kontextstammverzeichnis "/" gebunden ist. Der Standardwert ist true.
#HttpProxyRedirect
http.proxyredirect=HTTP-Proxy-Umleitung
http.proxyredirect.desc=Konfiguriert die Portumleitung. HTTP-Proxy-Umleitung wird verwendet, wenn HTTP-Anforderungen von einem nicht sicheren Port (z. B. 80) an einen sicheren Port mit SSL-Unterst\u00fctzung (z. B. 443) umgeleitet werden.

http.proxyredirect.enabled=Aktiviert
http.proxyredirect.enabled.desc=Dieses Attribut bestimmt, ob der Server Port, die in diesem Konfigurationselement angegeben sind, umleiten soll. Der Standardwert ist true.

http.proxyredirect.host=Host
http.proxyredirect.host.desc=Der f\u00fcr diese Proxy-Umleitung verwendete Hostname. Der Server leitet HTTP-Anforderungen nur um, wenn in der eingehenden Anforderung ein Hostname angegeben ist, der diesem Wert entspricht. Der Standardwert ist * (alle Hosts).

http.proxyredirect.httpPort=HTTP-Port
http.proxyredirect.httpPort.desc=Der (nicht sichere) Port, von dem die Anforderungen umgeleitet werden sollen. Eingehende HTTP-Anforderungen an diesem Port werden an den angegebenen HTTPS-Port umgeleitet.

http.proxyredirect.httpsPort=HTTPS-Port
http.proxyredirect.httpsPort.desc=Der (sichere) Port, an den Anforderungen umgeleitet werden sollen. Eingehende HTTP-Anforderungen, die den HTTP-Port verwenden, werden an diesen Port umgeleitet.

http.autoDecompression=Automatische Dekomprimierung
http.autoDecompression.desc=Gibt an, ob der HTTP-Kanal die Daten im Hauptteil eingehender Anforderungen automatisch dekomprimiert.
