###############################################################################
# Copyright (c) 2011, 2013 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#CMVCPATHNAME com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#

onError.name=Al verificarsi dell'errore
onError.desc=Azione da eseguire dopo un errore di avvio di un endpoint. 
onError.warn=Il server emetter\u00e0 messaggi di avvertenza e di errore se non riesce ad avviare un endpoint. 
onError.fail=Il server emetter\u00e0 messaggi di avvertenza e di errore se non riesce ad avviare un endpoint e proceder\u00e0 quindi all'arresto.
onError.ignore=Il server non emetter\u00e0 alcun messaggio di avvertenza o di errore quando l'avvio di un endpoint non riesce.

virtualHost.name=Host virtuale
virtualHost.desc=Un host virtuale fornisce un raggruppamento logico per configurare le applicazioni web su uno specifico nome host. L'host virtuale predefinito (default_host) \u00e8 adatto per le configurazioni pi\u00f9 semplici.

virtualHost.enabled=Abilitato
virtualHost.enabled.desc=Abilitare questo host virtuale.

virtualHost.hostAlias=Alias host virtuale
virtualHost.hostAlias.desc=Associare un host e una porta a questo host virtuale utilizzando la sintassi host:porta. \
L'host specificato pu\u00f2 essere un indirizzo IP, un nome host DNS (domain name server) con un suffisso di nome dominio, il nome host DNS oppure * per una corrispondenza di carattere jolly su tutti i nomi host. \
Nota: gli indirizzi IPv6 devono essere racchiusi tra [].

virtualHost.allowFromEndpoint=Consenti da endpoint
virtualHost.allowFromEndpoint$Ref=Consenti da endpoint
virtualHost.allowFromEndpoint.desc=Specificare l'identificativo di uno o pi\u00f9 endpoint HTTP per limitare il traffico in entrata per questo host virtuale agli endpoint specificati.

http.endpoint=Endpoint HTTP
http.endpoint.desc=Propriet\u00e0 di configurazione per un endpoint HTTP.

endpoint.host=Host
endpoint.host.desc=L'indirizzo IP, il nome host DNS (domain name server) con il suffisso del nome del dominio, o solo il nome host DNS, utilizzato da un client per richiedere una risorsa. Utilizzare '*' per tutte le interfacce di rete disponibili.

endpoint.enabled=Abilitato
endpoint.enabled.desc=Attivare/disattivare la disponibilit\u00e0 di un endpoint. Quando questa opzione \u00e8 impostata su true, questo endpoint verr\u00e0 attivato dal dispatcher per gestire le richieste HTTP.

endpoint.httpPort=Porta
endpoint.httpPort.desc=La porta utilizzata per le richieste HTTP del client. Utilizzare -1 per disabilitare questa porta.

endpoint.httpsPort=Porta sicura
endpoint.httpsPort.desc=La porta utilizzata per le richieste HTTP del client resa sicura con SSL (https). Utilizzare -1 per disabilitare questa porta.

endpoint.virtualHost=Host virtuale
endpoint.virtualHost.desc=ID di un host virtuale configurato. Per impostazione predefinita, tutti gli endpoint sono associati all'host virtuale 'default_host'. 

endpoint.tcpOptions=Opzioni TCP
endpoint.tcpOptions$Ref=Riferimento opzioni TCP
endpoint.tcpOptions.desc=Le opzioni del protocollo TCP per l'endpoint. 

endpoint.sslOptions=Opzioni SSL 
endpoint.sslOptions$Ref=Riferimento opzioni SSL
endpoint.sslOptions.desc=Le opzioni del protocollo SSL per l'endpoint.

endpoint.httpOptions=Opzioni HTTP
endpoint.httpOptions$Ref=Riferimento opzioni
endpoint.httpOptions.desc=Le opzioni del protocollo HTTP per l'endpoint.

endpoint.accessLog=Registrazione accessi HTTP
endpoint.accessLog$Ref=Riferimento registrazione accessi HTTP
endpoint.accessLog.desc=Configurazione della registrazione accessi HTTP per l'endpoint.

http.options=Opzioni HTTP
http.options.desc=Configurazione del protocollo HTTP.

http.keepAlive=Abilita connessioni persistenti
http.keepAlive.desc=Abilita le connessioni persistenti (keepalive HTTP). Se l'opzione \u00e8 impostata su true, le connessioni vengono mantenute attive in modo da essere riutilizzate da pi\u00f9 richieste e risposte in sequenza. Se l'opzione \u00e8 impostata su false, le connessioni vengono chiuse una volta inviata la risposta.    

http.maxKeepAliveRequests=Numero massimo di richieste persistenti per connessione
http.maxKeepAliveRequests.desc=Il numero massimo di richieste persistenti consentite su una singola connessione HTTP, se le connessioni persistenti sono abilitate. Un valore -1 indica un numero illimitato.  

http.noCacheCookiesControl=Nessun controllo cookie cache
http.noCacheCookiesControl.desc=Permette all'utente di controllare se la presenza di un'intestazione Set-Cookie deve o meno aggiornare l'intestazione Cache-Control con un valore no-cache corrispondente. Ci\u00f2 aggiunge anche l'intestazione Scadenza.

http.persistTimeout=Timeout connessione persistente
http.persistTimeout.desc=L'intervallo di tempo durante il quale un socket pu\u00f2 rimanere inattivo tra le richieste. Questa impostazione viene applicata solo se le connessioni persistenti sono abilitate. 

http.readTimeout=Timeout di lettura
http.readTimeout.desc=L'intervallo di tempo di attesa del completamento di una richiesta di lettura su un socket dopo che si \u00e8 verificata la prima lettura. 

http.writeTimeout=Timeout di scrittura
http.writeTimeout.desc=L'intervallo di tempo di attesa su un socket per la trasmissione di ciascuna porzione dei dati della risposta. 

http.removeServerHeader=Rimuovi intestazione del server
http.removeServerHeader.desc=Rimuove le informazioni di implementazione del server dalle intestazioni HTTP e disabilita anche la pagina di benvenuto del Liberty Profile predefinito.

http.limitNumHeaders=Limita numero di intestazioni
http.limitNumHeaders.desc=Limita il numero di intestazioni HTTP che possono esistere in un messaggio in entrata. Quando questo limite viene superato, viene restituito un errore al client remoto.

http.limitFieldSize=Limite dimensione campo intestazione
http.limitFieldSize.desc=Applica i limiti di dimensione su vari campi HTTP, come ad esempio gli URL di richiesta o nomi o valori di intestazione individuali. Applicando i limiti di dimensione di questi campi, ci si difende contro possibili attacchi DoS (Denial of Service). Se un campo supera la dimensione consentita, viene restituito un errore al client remoto.

http.doNotAllowDuplicateSetCookies=Non consentire set-cookie duplicati
http.doNotAllowDuplicateSetCookies.desc=Impedisce al canale HTTP di inviare pi\u00f9 intestazioni Set-Cookie con lo stesso nome.

http.messageSizeLimit=Limite dimensione messaggio
http.messageSizeLimit.desc= Limita la dimensione accettabile di un messaggio in entrata. Se arriva un messaggio con una dimensione superiore a questo valore, viene restituito un errore al client remoto.

http.incomingBodyBufferSize=Dimensione buffer corpo in entrata
http.incomingBodyBufferSize.desc=Specifica la dimensione di ogni buffer utilizzato durante la lettura del corpo di un messaggio HTTP in entrata.

http2.connectionIdleTimeout=Timeout di connessione HTTP/2 inattiva
http2.connectionIdleTimeout.desc=Specifica la quantit\u00e0 di tempo, in secondi, per cui a una connessione HTTP/2 sar\u00e0 consentito rimanere inattiva tra le operazioni IO del socket. Se non viene specificato, o \u00e8 impostato su un valore di 0, non \u00e8 impostato alcun timeout di connessione.

http2.maxConcurrentStreams=Numero massimo di flussi simultanei
http2.maxConcurrentStreams.desc=Specifica il numero massimo di flussi che una connessione HTTP/2 pu\u00f2 avere attivi in un dato momento. Aprire dei flussi oltre il limite consentito, causer\u00e0 un  REFUSED_STREAM (0x7). Se non specificato, il valore predefinito dei flussi simultanei verr\u00e0 impostato su 200.

http2.maxFrameSize=Dimensione massima frame
http2.maxFrameSize.desc=Specifica la dimensione massima consentita di un payload del frame che il server notificher\u00e0 nel frame delle impostazioni SETTINGS_MAS_FRAME_SIZE HTTP/2. \u00c8 possibile configurare qualsiasi dimensione compresa nell'intervallo da 16.384 a 16.777.215 byte, inclusi. Se non specificato, il valore predefinito \u00e8 impostato su 57.344 byte.

log.access=Registrazione accessi HTTP
log.access.desc=I log di accesso HTTP contengono un record di tutte le richieste del client HTTP in entrata.

log.access.enabled=Abilitato
log.access.enabled.desc=Abilita la registrazione degli accessi.

log.access.filePath=Percorso file di log
log.access.filePath.desc=Percorso di directory e nome del file di log di accesso. Quando si specifica il percorso di directory, \u00e8 possibile utilizzare le sostituzioni della variabile standard, ad esempio ${server.output.dir}.

log.access.logFormat=Formato
log.access.logFormat.desc=Specifica il formato del log che viene utilizzato durante la registrazione delle informazioni di accesso al client.

log.access.max.file.size=Dimensione massima file di log
log.access.max.file.size.desc=La dimensione massima di un file di log, in megabyte, prima che ne venga eseguito il rollover; un valore 0 indica nessun limite.

log.access.max.files=Dimensione massima file di log
log.access.max.files.desc=Il numero massimo di file di log che verr\u00e0 conservato prima che venga rimosso il file meno recente; un valore 0 indica nessun limite.

http.dispatcher=Dispatcher HTTP
http.dispatcher.desc=Configurazione del dispatcher HTTP.

dispatcher.trustedHeaderOrigin=Origine intestazioni private ritenute attendibili
dispatcher.trustedHeaderOrigin.desc=Le intestazioni private sono utilizzate dal plug-in del server web per fornire informazioni sulla richiesta originale. \
Queste intestazioni hanno la precedenza sull'intestazione Host http e sono utilizzate per selezionare un host virtuale per soddisfare una richiesta. \
Il valore predefinito \u00e8 '*', che riterr\u00e0 attendibili le intestazioni private in entrata da qualsiasi origine. \
Specificare 'none' per disabilitare le intestazioni private e utilizzare solo l'intestazione Host http oppure specificare un elenco di indirizzi IP per limitare l'elaborazione delle intestazioni private a specifiche origini ritenute attendibili.

appOrContextRootMissingMessage=Messaggio visualizzato quando l'applicazione non viene trovata
appOrContextRootMissingMessage.desc=Messaggio da restituire al client quando l'applicazione nell'URI richiesto non viene trovata.

padAppOrContextRootMissingMessage=Quando non \u00e8 possibile trovare un'applicazione, riempire l'output di messaggio a 512 byte.
padAppOrContextRootMissingMessage.desc=Se il messaggio restituito al client quando non \u00e8 possibile trovare l'applicazione nell'URI richiesto \u00e8 inferiore ai 512 byte, viene aggiunto un commento alla fine del messaggio per renderlo di almeno 512 byte.

enableWelcomePage=Abilita pagina di benvenuto
enableWelcomePage.desc=Abilita la pagina di benvenuto del Liberty Profile predefinito quando nessuna applicazione \u00e8 collegata ad una root di contesto di "/".  Il valore predefinito \u00e8 true.
#HttpProxyRedirect
http.proxyredirect=Reindirizzamento proxy HTTP
http.proxyredirect.desc=Configura il reindirizzamento della porta. Reindirizzamento proxy HTTP viene utilizzato durante il reindirizzamento delle richieste HTTP da una porta non sicura (ad esempio, 80) a una porta protetta con SSL abilitato (ad esempio, 443).

http.proxyredirect.enabled=Abilitato
http.proxyredirect.enabled.desc=Questo attributo determina se il server deve o meno reindirizzare le porte specificate in questo elemento di configurazione. Il valore predefinito \u00e8 true.

http.proxyredirect.host=Host
http.proxyredirect.host.desc=Il nome host utilizzato per questo reindirizzamento proxy. Il server reindirizza le richieste HTTP solo se la richiesta in entrata specifica un nome host che corrisponde a questo valore. Il valore predefinito \u00e8 * (tutti gli host).

http.proxyredirect.httpPort=Porta HTTP
http.proxyredirect.httpPort.desc=La porta (non sicura) da cui reindirizzare. Le richieste HTTP in entrata su questa porta sono reindirizzate alla porta HTTPS specificata.

http.proxyredirect.httpsPort=Porta HTTPS
http.proxyredirect.httpsPort.desc=La porta (sicura) verso cui reindirizzare. Le richieste HTTP in entrata che utilizzano la porta HTTP sono reindirizzate a questa porta.

http.autoDecompression=Decompressione automatica
http.autoDecompression.desc=Specifica se il canale HTTP decomprime automaticamente i dati del corpo richiesta in entrata.
