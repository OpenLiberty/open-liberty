###############################################################################
# Copyright (c) 2011, 2013 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#CMVCPATHNAME com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#

onError.name=En cas d'erreur
onError.desc=Action \u00e0 entreprendre apr\u00e8s une erreur lors du d\u00e9marrage d'un noeud final. 
onError.warn=Le serveur \u00e9met des messages d'avertissement et d'erreur s'il ne parvient pas d\u00e9marrer un noeud final. 
onError.fail=Le serveur \u00e9met des messages d'avertissement et d'erreur s'il ne parvient pas d\u00e9marrer un noeud final et s'arr\u00eate.
onError.ignore=Le serveur n'\u00e9met pas de message d'avertissement et d'erreur lorsqu'un noeud final ne parvient pas \u00e0 d\u00e9marrer.

virtualHost.name=H\u00f4te virtuel
virtualHost.desc=Un h\u00f4te virtuel fournit un regroupement\u00a0logique pour la configuration d'applications Web sur un nom d'h\u00f4te donn\u00e9. L'h\u00f4te virtuel par d\u00e9faut (default_host) est appropri\u00e9 pour les configurations les plus simples.

virtualHost.enabled=Activ\u00e9
virtualHost.enabled.desc=Activer cet h\u00f4te virtuel.

virtualHost.hostAlias=Alias d'h\u00f4te virtuel
virtualHost.hostAlias.desc=Associez un h\u00f4te et un port \u00e0 cet h\u00f4te virtuel, \u00e0 l'aide de la syntaxe host:port. \
L'h\u00f4te sp\u00e9cifi\u00e9 peut \u00eatre une adresse IP, un nom d'h\u00f4te du serveur DNS (Domain Name Server) avec suffixe de nom de domaine, un nom d'h\u00f4te DNS ou une concordance de caract\u00e8re g\u00e9n\u00e9rique sur tous les noms d'h\u00f4te. \
Notez que les adresses IPv6 doivent \u00eatre plac\u00e9es entre crochets, [].

virtualHost.allowFromEndpoint=Autoriser \u00e0 partir des noeuds finaux
virtualHost.allowFromEndpoint$Ref=Autoriser \u00e0 partir des noeuds finaux
virtualHost.allowFromEndpoint.desc=Sp\u00e9cifiez l'identificateur d'un ou de plusieurs noeuds finaux HTTP pour limiter le trafic entrant de cet h\u00f4te virtuel aux noeuds finaux sp\u00e9cifi\u00e9s.

http.endpoint=Point d'extr\u00e9mit\u00e9 HTTP
http.endpoint.desc=Propri\u00e9t\u00e9s de configuration pour un noeud final HTTP.

endpoint.host=H\u00f4te
endpoint.host.desc=Adresse IP, nom d'h\u00f4te du serveur DNS (Domain Name Server) avec suffixe de nom de domaine ou nom d'h\u00f4te DNS seul, utilis\u00e9 par un client pour demander une ressource. Utilisez '*' pour d\u00e9signer toutes les interfaces r\u00e9seau disponibles.

endpoint.enabled=Activ\u00e9
endpoint.enabled.desc=D\u00e9termine la disponibilit\u00e9 d'un noeud final. Lorsque cette propri\u00e9t\u00e9 a la valeur true, le noeud final est activ\u00e9 par le r\u00e9partiteur afin de pouvoir prendre en charge des demandes HTTP.

endpoint.httpPort=Port
endpoint.httpPort.desc=Le port utilis\u00e9 par les demandes HTTP des clients. Utilisez -1 pour d\u00e9sactiver ce port.

endpoint.httpsPort=Port s\u00e9curis\u00e9
endpoint.httpsPort.desc=Le port utilis\u00e9 par les demandes HTTP des clients lorsqu'elles sont \u00e9mises sur la couche s\u00e9curis\u00e9e SSL (https). Utilisez -1 pour d\u00e9sactiver ce port.

endpoint.virtualHost=H\u00f4te virtuel
endpoint.virtualHost.desc=ID d'un h\u00f4te virtuel configur\u00e9. Par d\u00e9faut, tous les points d'extr\u00e9mit\u00e9 sont associ\u00e9s \u00e0 l'h\u00f4te virtuel 'default_host'. 

endpoint.tcpOptions=Options TCP
endpoint.tcpOptions$Ref=R\u00e9f\u00e9rence des options TCP
endpoint.tcpOptions.desc=Options de protocole TCP pour le noeud final. 

endpoint.sslOptions=Options SSL 
endpoint.sslOptions$Ref=R\u00e9f\u00e9rence des options SSL
endpoint.sslOptions.desc=Options de protocole SSL pour le noeud final.

endpoint.httpOptions=Options HTTP
endpoint.httpOptions$Ref=R\u00e9f\u00e9rence des options HTTP
endpoint.httpOptions.desc=Options de protocole HTTP pour le noeud final.

endpoint.accessLog=Journalisation des acc\u00e8s HTTP
endpoint.accessLog$Ref=R\u00e9f\u00e9rence de la journalisation des acc\u00e8s HTTP
endpoint.accessLog.desc=Configuration de la journalisation des acc\u00e8s HTTP pour le noeud final

http.options=Options HTTP
http.options.desc=Configuration du protocole HTTP.

http.keepAlive=Activer les connexions persistantes
http.keepAlive.desc=Active les connexions persistantes (HTTP keepalive). Si cette propri\u00e9t\u00e9 est true, les connexions sont maintenues en vie et r\u00e9utilis\u00e9es par plusieurs demandes et r\u00e9ponses cons\u00e9cutives. Si la valeur est false, les connexions sont ferm\u00e9es une fois la r\u00e9ponse envoy\u00e9e.    

http.maxKeepAliveRequests=Nombre maximal de demandes persistantes par connexion
http.maxKeepAliveRequests.desc=Nombre maximal de demandes admises sur une m\u00eame connexion HTTP, lorsque les connexions persistantes sont activ\u00e9es. La valeur -1 correspond \u00e0 un nombre illimit\u00e9.  

http.noCacheCookiesControl=Pas de contr\u00f4le des cookies en cache
http.noCacheCookiesControl.desc=Permet \u00e0 l'utilisateur de contr\u00f4ler si la pr\u00e9sence, ou non, d'un en-t\u00eate Set-Cookie doit mettre \u00e0 jour l'en-t\u00eate Cache-Control avec la valeur no-cache correspondante. Cette option ajoute \u00e9galement l'en-t\u00eate Expires.

http.persistTimeout=D\u00e9lai d'expiration des connexions persistantes
http.persistTimeout.desc=Dur\u00e9e pendant laquelle un socket peut rester au repos entre deux demandes. Cette propri\u00e9t\u00e9 s'applique uniquement si les connexions persistantes sont activ\u00e9es. 

http.readTimeout=D\u00e9lai de lecture
http.readTimeout.desc=D\u00e9lai maximal, accord\u00e9 \u00e0 l'ex\u00e9cution d'une demande de lecture sur un socket une fois que la premi\u00e8re lecture a eu lieu. 

http.writeTimeout=D\u00e9lai d'\u00e9criture
http.writeTimeout.desc=Dur\u00e9e accord\u00e9e \u00e0 l'attente sur un socket de chaque partie des donn\u00e9es de r\u00e9ponse \u00e0 transmettre. 

http.removeServerHeader=Retirer en-t\u00eate de serveur
http.removeServerHeader.desc=Retire les informations d'impl\u00e9mentation de serveur des en-t\u00eates HTTP et d\u00e9sactive \u00e9galement la page d'accueil par d\u00e9faut du profil Liberty.

http.limitNumHeaders=Nombre limite d'en-t\u00eates
http.limitNumHeaders.desc=Limite le nombre d'en-t\u00eates HTTP qui peuvent figurer dans un message entrant. En cas de franchissement de cette limite, une erreur est renvoy\u00e9e au client distant.

http.limitFieldSize=Limiter la taille des champs d'en-t\u00eate
http.limitFieldSize.desc=Impose des limites de taille aux diff\u00e9rents champs HTTP, tels que les URL des demandes, ou aux noms ou valeurs des en-t\u00eates. Le fait de fixer des limites \u00e0 la taille de ces champs permet de se prot\u00e9ger contre les attaques DoS (d\u00e9ni de service). Si un champ d\u00e9passe la taille autoris\u00e9e, une erreur est retourn\u00e9e au client distant.

http.doNotAllowDuplicateSetCookies=Ne pas autoriser les en-t\u00eates Set-Cookie en double
http.doNotAllowDuplicateSetCookies.desc=Emp\u00eache le canal HTTP d'envoyer plusieurs en-t\u00eates Set-Cookie avec le m\u00eame nom.

http.messageSizeLimit=Taille limite pour les messages
http.messageSizeLimit.desc= Limite la taille d'un message entrant. Si un message arrive avec une taille d\u00e9passant cette limite, une erreur sera retourn\u00e9e au client distant.

http.incomingBodyBufferSize=Taille du tampon de lecture du corps des messages entrants
http.incomingBodyBufferSize.desc=Indique la taille de chaque tampon utilis\u00e9 pour lire le corps d'un message HTTP entrant.

http2.connectionIdleTimeout=D\u00e9lai en veille des connexions HTTP/2
http2.connectionIdleTimeout.desc=Sp\u00e9cifie la dur\u00e9e, en secondes, \
pendant laquelle une connexion HTTP/2 peut rester en veille entre des op\u00e9rations \
d'E-S de socket. \
S'il n'est pas sp\u00e9cifi\u00e9 ou si sa valeur est 0, aucun d\u00e9lai de connexion n'est \
d\u00e9fini pour les connexions.

http2.maxConcurrentStreams=Nombre maximal de flux simultan\u00e9s
http2.maxConcurrentStreams.desc=Sp\u00e9cifie le nombre maximal de \
flux pouvant \u00eatre actifs pour une connexion HTTP/2 \u00e0 tout moment. L'ouverture de flux \
alors que le nombre maximal est d\u00e9j\u00e0 atteint g\u00e9n\u00e8re l'erreur REFUSED_STREAM (0x7). Si ce \
nombre n'est pas sp\u00e9cifi\u00e9, la valeur par d\u00e9faut pour le nombre de flux simultan\u00e9s est \
200.

http2.maxFrameSize=Taille maximale de la trame
http2.maxFrameSize.desc=Sp\u00e9cifie la taille maximale admise pour \
le contenu d'une trame que le serveur pr\u00e9sente dans la trame des param\u00e8tres \
SETTINGS_MAS_FRAME_SIZE HTTP/2. Il peut s'agir de toute taille comprise entre 16 384 et \
16 777 215 octets inclus. Si la taille n'est pas sp\u00e9cifi\u00e9e, la valeur par d\u00e9faut est 57 \
344 octets.

log.access=Journalisation des acc\u00e8s HTTP
log.access.desc=Les journaux des acc\u00e8s HTTP contiennent un enregistrement de toutes les demandes client HTTP entrantes.

log.access.enabled=Activ\u00e9
log.access.enabled.desc=Activation de la journalisation des acc\u00e8s.

log.access.filePath=Chemin de fichier journal
log.access.filePath.desc=Chemin de r\u00e9pertoire et nom du fichier journal des acc\u00e8s. Des substitutions de variable standard telles que ${server.output.dir} peuvent \u00eatre utilis\u00e9es pour sp\u00e9cifier le chemin de r\u00e9pertoire.

log.access.logFormat=Format
log.access.logFormat.desc=Indique le format de journal utilis\u00e9 lors de la journalisation des informations d'acc\u00e8s des clients.

log.access.max.file.size=Taille maximale de fichier journal
log.access.max.file.size.desc=Taille maximale d'un fichier journal, en m\u00e9gaoctets, avant sa cl\u00f4ture. La valeur 0 (z\u00e9ro) signifie l'absence de limite de taille.

log.access.max.files=Nombre maximal de fichiers journaux
log.access.max.files.desc=Nombre maximal de fichiers journaux qui seront conserv\u00e9s avant que le fichier le plus ancien ne soit supprim\u00e9. La valeur 0 (z\u00e9ro) signifie qu'il n'existe aucune limite.

http.dispatcher=R\u00e9partiteur HTTP
http.dispatcher.desc=Configuration du r\u00e9partiteur HTTP.

dispatcher.trustedHeaderOrigin=Origine d'en-t\u00eate priv\u00e9 s\u00e9curis\u00e9
dispatcher.trustedHeaderOrigin.desc=Les en-t\u00eates priv\u00e9s sont utilis\u00e9s par le plug-in du serveur Web pour fournir des informations sur la requ\u00eate d'origine. \
Ces en-t\u00eates sont prioritaires sur l'en-t\u00eate d'h\u00f4te HTTP et sont utilis\u00e9s pour s\u00e9lectionner un h\u00f4te virtuel pour traiter une requ\u00eate. \
La valeur par d\u00e9faut est '*' qui va accepter les en-t\u00eates priv\u00e9s entrants de n'importe quelle source. \
Indiquez 'none' pour d\u00e9sactiver les en-t\u00eates priv\u00e9s et utiliser uniquement l'en-t\u00eate d'h\u00f4te HTTP ou sp\u00e9cifiez une liste d'adresses IP pour limiter le traitement d'en-t\u00eates priv\u00e9s \u00e0 des sources s\u00e9curis\u00e9es sp\u00e9cifiques.

appOrContextRootMissingMessage=Message qui s'affiche lorsqu'une application est introuvable
appOrContextRootMissingMessage.desc=Message a renvoyer au client lorsque l'application dans l'URI demand\u00e9e est introuvable.

padAppOrContextRootMissingMessage=Lorsqu'une application est introuvable, remplissez la sortie de message jusqu'\u00e0 512 octets.
padAppOrContextRootMissingMessage.desc=Si le message renvoy\u00e9 au client lorsque l'application est introuvable dans l'URI demand\u00e9e est inf\u00e9rieur \u00e0 512 octets, un commentaire est ajout\u00e9 \u00e0 la fin du message afin qu'il atteigne au moins les 512 octets.

enableWelcomePage=Activer la page d'accueil
enableWelcomePage.desc=Active la page d'accueil par d\u00e9faut du profil Liberty lorsqu'aucune application n'est li\u00e9e \u00e0 une racine de contexte "/".  La valeur par d\u00e9faut est true.
#HttpProxyRedirect
http.proxyredirect=Redirection proxy HTTP
http.proxyredirect.desc=Configure la redirection du port. La redirection proxy HTTP est utilis\u00e9e lorsque des demandes HTTP sont redirig\u00e9es d'un port non s\u00e9curis\u00e9 (par exemple, le port 80) vers un port s\u00e9curis\u00e9 via SSL (par exemple le port 443).

http.proxyredirect.enabled=Activ\u00e9
http.proxyredirect.enabled.desc=Cet attribut d\u00e9termine si le serveur doit ou non rediriger les ports sp\u00e9cifi\u00e9s dans cet \u00e9l\u00e9ment de configuration. La valeur par d\u00e9faut est "true".

http.proxyredirect.host=H\u00f4te
http.proxyredirect.host.desc=Nom d'h\u00f4te utilis\u00e9 pour cette redirection proxy. Le serveur redirige les demandes HTTP uniquement si la demande entrante sp\u00e9cifie un nom d'h\u00f4te correspondant \u00e0 cette valeur. La valeur par d\u00e9faut est * (tous les h\u00f4tes).

http.proxyredirect.httpPort=Port HTTP
http.proxyredirect.httpPort.desc=Port (non s\u00e9curis\u00e9) depuis lequel la redirection doit \u00eatre effectu\u00e9e. Les demandes HTTP entrantes sur ce port sont redirig\u00e9es vers le port HTTPS sp\u00e9cifi\u00e9.

http.proxyredirect.httpsPort=Port HTTPS
http.proxyredirect.httpsPort.desc=Port (s\u00e9curis\u00e9) vers lequel la redirection doit \u00eatre effectu\u00e9e. Les demandes HTTP qui utilisent le port HTTP sont redirig\u00e9es vers ce port.

http.autoDecompression=D\u00e9compression automatique
http.autoDecompression.desc=Sp\u00e9cifie si le canal HTTP doit d\u00e9compresser automatiquement les donn\u00e9es de corps de demande entrante.
