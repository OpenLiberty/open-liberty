#*******************************************************************************
# Copyright (c) 2017, 2023 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License 2.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-2.0/
# 
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#     IBM Corporation - initial API and implementation
#*******************************************************************************
-include= ~../cnf/resources/bnd/bundle.props

-sub: *.bnd

-nouses=true
bVersion=1.0
bSymbolicName=com.ibm.ws.wsoc

app-resources= \
  META-INF/services/javax.websocket.server.ServerEndpointConfig$Configurator | \
  META-INF/services/javax.websocket.ContainerProvider

Export-Package: \
  com.ibm.ws.wsoc.external, \
  com.ibm.ws.wsoc.outbound, \
  com.ibm.ws.wsoc.injection, \
  com.ibm.ws.wsoc, \
  com.ibm.ws.wsoc.servercontainer, \
  com.ibm.websphere.wsoc, \
  com.ibm.ws.wsoc.configurator.*;thread-context=true

Import-Package: \
  !*.internal.*, \
  !com.ibm.ws.kernel.boot.cmdline, \
  io.openliberty.wsoc.speclevel, \
  io.openliberty.wsoc.ssl, \
  io.openliberty.netty.internal*, \
  *

Private-Package: \
  com.ibm.ws.wsoc, \
  com.ibm.ws.wsoc.impl, \
  com.ibm.ws.wsoc.util, \
  com.ibm.ws.wsoc.internal.resources,\
  com.ibm.ws.wsoc.servercontainer.v10;

Service-Component: \
  com.ibm.ws.wsock.initializer; \
    implementation:=com.ibm.ws.wsoc.WebSocketServletContainerInitializer; \
    provide:=javax.servlet.ServletContainerInitializer; \
    immediate:=true; \
    properties:="service.vendor=IBM,service.ranking:Integer=150", \
  com.ibm.ws.wsoc.manager;\
    implementation:=com.ibm.ws.wsoc.ServiceManager; \
    nettyBundle=io.openliberty.netty.internal.NettyFramework;\
    chfwBundle=com.ibm.websphere.channelfw.osgi.CHFWBundle; \
    configuration-policy:=ignore;\
    immediate:=true;\
    scheduledExecutorService='java.util.concurrent.ScheduledExecutorService(service.vendor=IBM)'; \
    executorService='java.util.concurrent.ExecutorService(service.vendor=IBM)'; \
    injectionEngine=com.ibm.wsspi.injectionengine.InjectionEngine; \
    injectionService=com.ibm.ws.wsoc.injection.InjectionService; \
    injectionService12=com.ibm.ws.wsoc.injection.InjectionService12; \
    optional:='injectionEngine,injectionService,injectionService12'; \
    dynamic:='injectionEngine,injectionService,injectionService12'; \
    properties:="service.vendor=IBM", \
  com.ibm.ws.wsoc.version;\
    implementation:=com.ibm.ws.wsoc.WebSocketVersionServiceManager; \
    configuration-policy:=ignore;\
    immediate:=true;\
    websocketFactoryService='com.ibm.ws.wsoc.external.WebSocketFactory(service.vendor=IBM)'; \
    servletContainerFactoryService='com.ibm.ws.wsoc.servercontainer.ServletContainerFactory(service.vendor=IBM)'; \
    httpRequestorFactoryService='com.ibm.ws.wsoc.outbound.HttpRequestorFactory(service.vendor=IBM)'; \
    clientEndpointConfigCopyFactoryService='com.ibm.ws.wsoc.ClientEndpointConfigCopyFactory(service.vendor=IBM)'; \
    dynamic:='websocketFactoryService,servletContainerFactoryService,httpRequestorFactoryService,clientEndpointConfigCopyFactoryService'; \
    optional:='websocketFactoryService,servletContainerFactoryService,httpRequestorFactoryService,clientEndpointConfigCopyFactoryService'; \
    properties:="service.vendor=IBM", \
  com.ibm.ws.wsoc.outbound.wsocOutbound;\
    implementation:=com.ibm.ws.wsoc.outbound.WsocOutboundChain;\
    nettyBundle=io.openliberty.netty.internal.NettyFramework;\
    chfwBundle=com.ibm.websphere.channelfw.osgi.CHFWBundle; \
    tcpOptions=com.ibm.wsspi.channelfw.ChannelConfiguration;\
    httpOptions=com.ibm.wsspi.channelfw.ChannelConfiguration;\
    sslOptions=com.ibm.wsspi.channelfw.ChannelConfiguration;\
    configuration-policy:=require;\
    dynamic:='tcpOptions,httpOptions,sslOptions';\
    modified:='modified'; \
    optional:='sslOptions,sslSupport';\
    greedy:='tcpOptions,httpOptions,sslOptions'; \
    properties:='service.vendor=IBM', \
  ${bSymbolicName}_${replace;${bVersion};\\.;_}.ResourceProvider; \
    implementation:=com.ibm.wsspi.classloading.ResourceProvider; \
    provide:=com.ibm.wsspi.classloading.ResourceProvider; \
    configuration-policy:=ignore; \
    properties:= "resources=${app-resources}"

Include-Resource: \
  OSGI-INF=resources/OSGI-INF, \
  META-INF=resources/META-INF


instrument.classesExcludes: \
  com.ibm.ws.wsoc.Utils.class, \
  com/ibm/ws/wsoc/internal/resources/*.class

-buildpath: \
	com.ibm.websphere.javaee.websocket.1.0;version=latest,\
	com.ibm.ws.channelfw;version=latest,\
	com.ibm.websphere.appserver.spi.kernel.service;version=latest,\
	com.ibm.websphere.org.osgi.core;version=latest,\
	com.ibm.websphere.org.osgi.service.component;version=latest,\
	com.ibm.ws.kernel.service;version=latest,\
	com.ibm.ws.container.service;version=latest,\
	com.ibm.ws.injection.core;version=latest,\
	com.ibm.ws.logging;version=latest,\
	com.ibm.ws.transport.http;version=latest,\
	com.ibm.ws.webcontainer.servlet.3.1;version=latest,\
	com.ibm.ws.webcontainer;version=latest,\
	com.ibm.websphere.javaee.servlet.3.1;version=latest,\
	com.ibm.wsspi.org.osgi.service.component.annotations;version=latest,\
	com.ibm.ws.org.osgi.annotation.versioning;version=latest,\
	io.openliberty.wsoc.ssl.internal;version=latest,\
	io.openliberty.io.netty;version=latest,\
	io.openliberty.io.netty.ssl,\
	io.openliberty.netty.internal;version=latest,\
	io.openliberty.netty.internal.impl;version=latest,\
	com.ibm.ws.kernel.service,\
	com.ibm.ws.kernel.boot
	
-testpath: \
	../build.sharedResources/lib/junit/old/junit.jar;version=file, \
	com.ibm.ws.junit.extensions;version=latest, \
	org.hamcrest:hamcrest-all;version=1.3, \
	com.ibm.ws.kernel.boot;version=latest
