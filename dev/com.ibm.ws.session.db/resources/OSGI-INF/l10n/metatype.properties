###############################################################################
# Copyright (c) 2013 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
################################################################################
#
#CMVCPATHNAME com.ibm.ws.session.db/resources/OSGI-INF/l10n/metatype.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#
session.db.config=HTTP Session Database
session.db.config.desc=Controls how HTTP sessions are persisted to a database.

data.source.ref=Data source
data.source.ref.desc=The identifier of the data source the session manager should use to persist HTTP session data.

db2.row.size.name=DB2 row size
db2.row.size.desc=Table space page size configured for the sessions table, if using a DB2 database. Increasing this value can improve database performance in some environments.
db2.row.size.4KB=Use the default table space page size of 4 KB. You do not need to create a DB2 buffer pool or table space, and you do not need to specify a table space name.
db2.row.size.8KB=Use a table space page size of 8 KB. You must additionally create a DB2 buffer pool and table space, and specify 8KB as the page size for both. You must also specify the name of the table space you created.
db2.row.size.16KB=Use a table space page size of 16 KB. You must additionally create a DB2 buffer pool and table space, and specify 16KB as the page size for both. You must also specify the name of the table space you created.
db2.row.size.32KB=Use a table space page size of 32 KB. You must additionally create a DB2 buffer pool and table space, and specify 32KB as the page size for both. You must also specify the name of the table space you created.

table.space.name.name=Table space name
table.space.name.desc=Table space to be used for the sessions table. This value is only required when the DB2 Row Size is greater than 4KB.

use.multi.row.schema.name=Use multi row schema
use.multi.row.schema.desc=When enabled, each session data attribute is placed in a separate row in the database, allowing larger amounts of data to be stored for each session. This configuration can yield better performance when session attributes are very large and few changes are required to the session attributes. When disabled, all session data attributes are placed in the same row for each session.

schedule.invalidation.name=Schedule invalidation
schedule.invalidation.desc=Enable this option to reduce the number of database updates required to keep the HTTP sessions alive. Specify the two hours of a day when there is the least activity in the application server. When this option is disabled, the invalidator process runs every few minutes to remove invalidated HTTP sessions.

schedule.invalidation.first.hour.name=First hour of day
schedule.invalidation.first.hour.desc=Indicates the first hour during which the invalidated sessions are cleared from the persistent store. Specify this value as an integer between 0 and 23. This value is valid only when schedule invalidation is enabled.

schedule.invalidation.second.hour.name=Second hour of day
schedule.invalidation.second.hour.desc=Indicates the second hour during which the invalidated sessions are cleared from the persistent store. Specify this value as an integer between 0 and 23. This value is valid only when schedule invalidation is enabled.

write.frequency.name=Write frequency
write.frequency.desc=Specifies when session data is written to the persistent store. By default, session data is written to the persistent store after the servlet completes execution. Changing this value can improve performance in some environments.
write.frequency.eos=Session data is written to the persistent store after the servlet completes execution.
write.frequency.tbw=Session data is written to the persistent store based on the specified write interval value.
write.frequency.mu=A programmatic sync on the IBMSession object is required to write the session data to the persistent store.

write.interval.name=Write interval
write.interval.desc=Number of seconds that should pass before writing session data to the persistent store. The default is 120 seconds. This value is only used when a time based write frequency is enabled.

write.contents.name=Write contents
write.contents.desc=Specifies how much session data should be written to the persistent store.  By default, only updated attributes are written, but all attributes can be written instead (regardless of whether or not they changed).
write.contents.updated=Only updated attributes are written to the persistent store.
write.contents.all=All attributes are written to the persistent store.

no.affinity.switchBack=No affinity switchBack
no.affinity.switchBack.desc=Set this property to "true" to maintain affinity to the new member even after original one comes back up. When a cluster member fails, its requests routed to a different cluster member, and sessions are activated in that other member. Thus, session affinity is maintained to the new member, and when failed cluster member comes back up, the requests for sessions that were created in the original cluster member are routed back to it. Allowed values are true or false, with the default being false. Set this property to true when you have distributed sessions configured with time-based write. Note that this property has no affect on the behavior when distributed sessions are not enabled.

only.check.in.cache.during.pre.invoke=Only check in cache during pre invoke
only.check.in.cache.during.pre.invoke.desc=A value of true indicates that the last access time of a session should only be updated if a request gets the session. A value of false indicates that the last access time of a session should be updated upon every request. Changing this value can improve performance in some environments.

optimize.cache.id.increments=Optimize cache identifier increments
optimize.cache.id.increments.desc=If the user's browser session is moving back and forth across multiple web applications, you might see extra persistent store activity as the in-memory sessions for a web module are refreshed from the persistent store. As a result, the cache identifiers are continually increasing and the in-memory session attributes are overwritten by those of the persistent copy.  Set this property to true if you want to prevent the cache identifiers from continually increasing. A value of true indicates that the session manager should assess whether the in-memory session for a web module is older than the copy in persistent store. If the configuration is a cluster, ensure that the system times of each cluster member are as identical as possible.

table.name=Table name
table.name.desc=The database table name.

use.invalidated.id=Use invalidated identifier
use.invalidated.id.desc=Set this property to "true" to reuse the incoming identifier if the session with that identifier was recently invalidated. This is a performance optimization because it prevents checking the persistent store.

use.oracle.blob=Use Binary Large Object (BLOB) for medium column
use.oracle.blob.desc=Set this property to "true" to create the database table using the Binary Large Object (BLOB) data type for the medium column. This value increases performance of persistent sessions when Oracle databases are used. Due to an Oracle restriction, BLOB support requires use of the Oracle Call Interface (OCI) database driver for more than 4000 bytes of data. You must also ensure that a new sessions table is created before the server is restarted by dropping your old sessions table or by changing the datasource definition to reference a database that does not contain a sessions table.

skip.index.creation=Skip index creation
skip.index.creation.desc=Set this property to "true" to disable index creation on server startup. This custom property should only be used if you want to manually create your own database indices for session persistence. However, it is recommended that you let session manager create database indices. Before enabling this property, make sure that the correct index does exist on your session database.

using.custom.schema.name=Use custom schema name
using.custom.schema.name.desc=Set this property to "true" if you are using DB2 for session persistence and the currentSchema property is set in the data source.

performance.name=Performance
performance.description=Changing these settings may enhance performance.

advanced.performance.name=Advanced Performance
advanced.performance.description=Changing these settings may enhance performance, but the default values work for most environments.

db2.name=DB2 Only
db2.description=These optional settings are only applicable to DB2 databases.

oracle.name=Oracle Only
oracle.description=These optional settings are only applicable to Oracle databases.

extraProperties.name=Additional properties
extraProperties.description=Additional properties related to session persistence.
