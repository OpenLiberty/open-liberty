-include= ~../cnf/resources/bnd/rejar.props
bVersion=1.0

Bundle-SymbolicName: com.ibm.ws.org.apache.cxf.cxf.core.3.2
Bundle-Activator:  com.ibm.ws.cxf.core.NoOpActivator

# This needs to stay at 3.2.4 even though the bundle version is 3.4.3.
# The reason is that the feature checker in WS-CD-Open has an ignore rule
# for the case where org.apache.cxf.databinding is exported by both the
# JAX-WS and JAX-RS features - it is correct to ignore this problem since
# both features correctly guard using OSGi versioning semantics. However,
# the feature checker ignore rule is specific to the version. The only
# way to upgrade the version here would be to change the version in the
# WS-CD-Open repo, but that will fail because it would require changing
# from 3.2.4 to 3.3.0 there. During the time where that was changed, the
# WS-CD-Open build would fail twice - once because OpenLiberty still
# exports at 3.2.4, and again because the ignore rule for 3.3.0 is unused
# (yes, unused rules cause failures...). So, without a co-delivery
# (changing the OL code at the same time we change the WS-CD-Open code),
# it is not possible to update the export version.
exportVer=3.2.4

#Export-Package: org.apache.cxf,\
#  org.apache.cxf.attachment,\
#  org.apache.cxf.common.classloader,
#  org.apache.cxf.common.i18n

Export-Package: \
  org.apache.cxf;version=${exportVer},\
  org.apache.cxf.annotations;version=${exportVer},\
  org.apache.cxf.attachment;version=${exportVer},\
  org.apache.cxf.binding;version=${exportVer},\
  org.apache.cxf.bus;version=${exportVer},\
  org.apache.cxf.bus.blueprint;version=${exportVer},\
  org.apache.cxf.bus.extension;version=${exportVer},\
  org.apache.cxf.bus.managers;version=${exportVer},\
  org.apache.cxf.bus.osgi;version=${exportVer},\
  org.apache.cxf.bus.resource;version=${exportVer},\
  org.apache.cxf.bus.spring;version=${exportVer},\
  org.apache.cxf.buslifecycle;version=${exportVer},\
  org.apache.cxf.catalog;version=${exportVer},\
  org.apache.cxf.common;version=${exportVer},\
  org.apache.cxf.common.annotation;version=${exportVer},\
  org.apache.cxf.common.classloader;version=${exportVer},\
  org.apache.cxf.common.i18n;version=${exportVer},\
  org.apache.cxf.common.injection;version=${exportVer},\
  org.apache.cxf.common.jaxb;version=${exportVer},\
  org.apache.cxf.common.logging;version=${exportVer},\
  org.apache.cxf.common.security;version=${exportVer},\
  org.apache.cxf.common.util;version=${exportVer},\
  org.apache.cxf.common.xmlschema;version=${exportVer},\
  org.apache.cxf.configuration;version=${exportVer},\
  org.apache.cxf.configuration.blueprint;version=${exportVer},\
  org.apache.cxf.configuration.jsse;version=${exportVer},\
  org.apache.cxf.configuration.security;version=${exportVer},\
  org.apache.cxf.configuration.spring;version=${exportVer},\
  org.apache.cxf.continuations;version=${exportVer},\
  org.apache.cxf.databinding;version=${exportVer},\
  org.apache.cxf.databinding.source;version=${exportVer},\
  org.apache.cxf.databinding.source.mime;version=${exportVer},\
  org.apache.cxf.databinding.stax;version=${exportVer},\
  org.apache.cxf.endpoint;version=${exportVer},\
  org.apache.cxf.extension;version=${exportVer},\
  org.apache.cxf.feature;version=${exportVer},\
  org.apache.cxf.feature.transform;version=${exportVer},\
  org.apache.cxf.feature.validation;version=${exportVer},\
  org.apache.cxf.headers;version=${exportVer},\
  org.apache.cxf.helpers;version=${exportVer},\
  org.apache.cxf.interceptor;version=${exportVer},\
  org.apache.cxf.interceptor.security;version=${exportVer},\
  org.apache.cxf.interceptor.security.callback;version=${exportVer},\
  org.apache.cxf.interceptor.transform;version=${exportVer},\
  org.apache.cxf.io;version=${exportVer},\
  org.apache.cxf.logging;version=${exportVer},\
  org.apache.cxf.management;version=${exportVer},\
  org.apache.cxf.management.annotation;version=${exportVer},\
  org.apache.cxf.message;version=${exportVer},\
  org.apache.cxf.phase;version=${exportVer},\
  org.apache.cxf.policy;version=${exportVer},\
  org.apache.cxf.resource;version=${exportVer},\
  org.apache.cxf.security;version=${exportVer},\
  org.apache.cxf.security.claims.authorization;version=${exportVer},\
  org.apache.cxf.security.transport;version=${exportVer},\
  org.apache.cxf.service;version=${exportVer},\
  org.apache.cxf.service.factory;version=${exportVer},\
  org.apache.cxf.service.invoker;version=${exportVer},\
  org.apache.cxf.service.invoker.spring;version=${exportVer},\
  org.apache.cxf.service.model;version=${exportVer},\
  org.apache.cxf.staxutils;version=${exportVer},\
  org.apache.cxf.staxutils.transform;version=${exportVer},\
  org.apache.cxf.staxutils.validation;version=${exportVer},\
  org.apache.cxf.transport;version=${exportVer},\
  org.apache.cxf.transport.common.gzip;version=${exportVer},\
  org.apache.cxf.validation;version=${exportVer},\
  org.apache.cxf.version;version=${exportVer},\
  org.apache.cxf.workqueue;version=${exportVer},\
  org.apache.cxf.ws.addressing;version=${exportVer},\
  org.apache.cxf.ws.addressing.v200403;version=${exportVer},\
  org.apache.cxf.ws.addressing.v200408;version=${exportVer},\
  org.apache.cxf.ws.addressing.wsdl;version=${exportVer},\
  org.apache.cxf.wsdl.http;version=${exportVer}

Private-Package: \
  com.ibm.ws.cxf.core

# Using version=! in order to not have a version attached to the import for packages that were removed
# from Java after Java 8.  Doing this keeps the import like before Java 11 support. It will get the
# packages from Java when using Java 8 or earlier and from the new shipped bundles for Java 9 and later.
Import-Package: \
  !java.*, \
  !com.sun.codemodel.writer, \
  !com.sun.tools.internal.xjc.api, \
  !com.sun.tools.xjc.api, \
  !com.sun.xml.bind.api, \
  !org.apache.karaf.jaas.boot.principal, \
  !sun.misc, \
  !com.ctc.wstx.*, \
  !com.sun.xml.fastinfoset.*;resolution:=optional, \
  !org.codehaus.stax2.*, \
  !com.sun.msv.*, \
  !com.sun.xml.bind.marshaller, \
  !org.apache.log4j.*, \
  !net.sf.cglib.proxy.*, \
  !org.springframework.*, \
  !javax.validation.*, \
  !org.apache.aries.*, \
  !org.apache.cxf.transport.https, \
  !org.osgi.service.blueprint.*, \
  javax.xml.bind;version=!, \
  javax.xml.bind.annotation;version=!, \
  javax.xml.bind.annotation.adapters;version=!, \
  javax.xml.bind.attachment;version=!, \
  !javax.xml.ws.*, \
  *

DynamicImport-Package: \
  com.ctc.wstx.*,\
  javax.xml.ws,\
  org.apache.cxf.bus,\
  org.apache.cxf.*
