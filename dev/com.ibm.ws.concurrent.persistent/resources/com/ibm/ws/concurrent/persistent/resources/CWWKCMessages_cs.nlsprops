###############################################################################
# Copyright (c) 2014, 2015 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#CMVCPATHNAME com.ibm.ws.concurrent.persistent/resources/com/ibm/ws/concurrent/persistent/resources/CWWKCMessages.nlsprops
#ISMESSAGEFILE TRUE
#NLS_ENCODING=UNICODE
#
#COMPONENTPREFIX CWWKC
#COMPONENTNAMEFOR CWWKC Persistent Scheduled Executor
#
# NLS_MESSAGEFORMAT_VAR
#
#   Strings in this file which contain replacement variables are processed by the MessageFormat 
#   class (single quote must be coded as 2 consecutive single quotes ''). Strings in this file 
#   which do NOT contain replacement variables are NOT processed by the MessageFormat class 
#   (single quote must be coded as one single quote '). 

# All messages must use the range CWWCK1500 to CWWCK1999 except those specifically identified as moved

# Java class and method names that should not be translated:
# Future, get, getDelay, getResult, getNextExecutionTime, isCancelled, isDone, ScheduledFuture, TaskStatus

CWWKC1500.task.rollback.retry=CWWKC1500W: Trval\u00fd prov\u00e1d\u011bc\u00ed modul {0} odvolal \u00falohu {1}. Opakov\u00e1n\u00ed \u00falohy je napl\u00e1nov\u00e1no za {2} sekundy.
CWWKC1500.task.rollback.retry.explanation=Proveden\u00ed \u00falohy bylo ozna\u010deno k odvol\u00e1n\u00ed. Po zadan\u00e9m po\u010dtu sekund dojde k opakov\u00e1n\u00ed \u00falohy.
CWWKC1500.task.rollback.retry.useraction=Po\u010dkejte na zopakov\u00e1n\u00ed \u00falohy.

CWWKC1501.task.failure.retry=CWWKC1501W: Trval\u00fd prov\u00e1d\u011bc\u00ed modul {0} odvolal \u00falohu {1} v d\u016fsledku selh\u00e1n\u00ed {2}. Opakov\u00e1n\u00ed \u00falohy je napl\u00e1nov\u00e1no za {3} sekundy.
CWWKC1501.task.failure.retry.explanation=Proveden\u00ed \u00falohy se nezda\u0159ilo a bylo odvol\u00e1no. Po zadan\u00e9m po\u010dtu sekund dojde k opakov\u00e1n\u00ed \u00falohy.
CWWKC1501.task.failure.retry.useraction=Pokud je selh\u00e1n\u00ed do\u010dasn\u00e9, po\u010dkejte na zopakov\u00e1n\u00ed \u00falohy. Jinak opravte p\u0159\u00ed\u010dinu selh\u00e1n\u00ed, pokud se jedn\u00e1 o neo\u010dek\u00e1van\u00e9 selh\u00e1n\u00ed.

CWWKC1502.task.rollback=CWWKC1502W: Trval\u00fd prov\u00e1d\u011bc\u00ed modul {0} odvolal \u00falohu {1}.
CWWKC1502.task.rollback.explanation=Proveden\u00ed \u00falohy bylo ozna\u010deno k odvol\u00e1n\u00ed.
CWWKC1502.task.rollback.useraction=Pokud je toto odvol\u00e1n\u00ed neo\u010dek\u00e1van\u00e9, p\u0159epl\u00e1nujte \u00falohu.

CWWKC1503.task.failure=CWWKC1503W: Trval\u00fd prov\u00e1d\u011bc\u00ed modul {0} odvolal \u00falohu {1} v d\u016fsledku selh\u00e1n\u00ed {2}.
CWWKC1503.task.failure.explanation=Proveden\u00ed \u00falohy se nezda\u0159ilo a bylo odvol\u00e1no.
CWWKC1503.task.failure.useraction=Pokud se jedn\u00e1 o neo\u010dek\u00e1van\u00e9 selh\u00e1n\u00ed, opravte p\u0159\u00ed\u010dinu selh\u00e1n\u00ed a p\u0159epl\u00e1nujte \u00falohu.

CWWKC1510.retry.limit.reached.rollback=CWWKC1510W: Trval\u00fd prov\u00e1d\u011bc\u00ed modul {0} p\u0159ed\u010dasn\u011b ukon\u010dil \u00falohu {1}, proto\u017ee byla odvol\u00e1na nebo se nezda\u0159ila {2}kr\u00e1t po sob\u011b.
CWWKC1510.retry.limit.reached.rollback.explanation=\u00daloha dos\u00e1hla limitu n\u00e1sledn\u00fdch opakovan\u00fdch pokus\u016f a nebude d\u00e1le opakov\u00e1na.
CWWKC1510.retry.limit.reached.rollback.useraction=Pokud jsou tato odvol\u00e1n\u00ed nebo selh\u00e1n\u00ed neo\u010dek\u00e1van\u00e1, ur\u010dete p\u0159\u00ed\u010dinu a p\u0159epl\u00e1nujte \u00falohu. Jsou-li tato odvol\u00e1n\u00ed a selh\u00e1n\u00ed ob\u010dasn\u00e1, zva\u017ete zv\u00fd\u0161en\u00ed limitu opakov\u00e1n\u00ed. 

CWWKC1511.retry.limit.reached.failed=CWWKC1511W: Trval\u00fd prov\u00e1d\u011bc\u00ed modul {0} p\u0159ed\u010dasn\u011b ukon\u010dil \u00falohu {1}, proto\u017ee byla odvol\u00e1na nebo se nezda\u0159ila {2}kr\u00e1t po sob\u011b. Posledn\u00ed selh\u00e1n\u00ed je {3}.
CWWKC1511.retry.limit.reached.failed.explanation=\u00daloha dos\u00e1hla limitu n\u00e1sledn\u00fdch opakovan\u00fdch pokus\u016f a nebude d\u00e1le opakov\u00e1na.
CWWKC1511.retry.limit.reached.failed.useraction=Pokud jsou tato selh\u00e1n\u00ed nebo odvol\u00e1n\u00ed neo\u010dek\u00e1van\u00e1, ur\u010dete p\u0159\u00ed\u010dinu a p\u0159epl\u00e1nujte \u00falohu. Jsou-li tato odvol\u00e1n\u00ed a selh\u00e1n\u00ed ob\u010dasn\u00e1, zva\u017ete zv\u00fd\u0161en\u00ed limitu opakov\u00e1n\u00ed. 

CWWKC1540.thread.cannot.submit.tasks=CWWKC1540E: Z kontextu aktu\u00e1ln\u00edho podprocesu nem\u016f\u017eete napl\u00e1novat trval\u00e9 \u00falohy.
CWWKC1540.thread.cannot.submit.tasks.explanation=Trval\u00e9 \u00falohy pl\u00e1nujte pouze z takov\u00e9ho podprocesu, kter\u00fd je p\u0159idru\u017een k aplikaci, nebo funkce s identitou zavad\u011b\u010de serializovateln\u00e9 t\u0159\u00eddy.
CWWKC1540.thread.cannot.submit.tasks.useraction=Ujist\u011bte se, \u017ee kontext aplikace nebo funkce je p\u0159i pl\u00e1nov\u00e1n\u00ed \u00faloh p\u0159\u00edtomen v podprocesu.

# {0} method name: either isDone or isCancelled
CWWKC1550.status.unavailable.until.ended=CWWKC1550E: Metodu {0} m\u016f\u017eete vyvolat pouze ve stavu TaskStatus, kter\u00fd jste z\u00edskali po ukon\u010den\u00ed \u00falohy. Ur\u010dete, zda byla \u00faloha ukon\u010dena v \u010dase, kdy byla instance TaskStatus z\u00edsk\u00e1na, tak, \u017ee ov\u011b\u0159\u00edte, \u017ee getNextExecutionTime m\u00e1 hodnotu null.
CWWKC1550.status.unavailable.until.ended.explanation=TaskStatus je nem\u011bniteln\u00fdm sn\u00edmkem stavu \u00falohy. V\u0161echny hodnoty vr\u00e1cen\u00e9 z metod isDone nebo isCancelled p\u0159ed ukon\u010den\u00edm dan\u00e9 \u00falohy budou po ukon\u010den\u00ed \u00falohy neplatn\u00e9. P\u0159i pokusu o proveden\u00ed p\u0159ed ukon\u010den\u00edm \u00falohy obdr\u017e\u00edte chybu, aby se zabr\u00e1nilo n\u00e1vratu nespolehliv\u00e9 hodnoty.
CWWKC1550.status.unavailable.until.ended.useraction=Pomoc\u00ed metody getNextExecutionTime ur\u010dete, zda \u00faloha skon\u010dila. Metody isDone a isCancelled pou\u017e\u00edvejte pouze v p\u0159\u00edpad\u011b, \u017ee \u00faloha ji\u017e skon\u010dila.

CWWKC1551.result.unavailable.until.ended=CWWKC1551E: Metodu get m\u016f\u017eete vyvolat pouze ve stavu TaskStatus, kter\u00fd jste z\u00edskali po ukon\u010den\u00ed \u00falohy. Pomoc\u00ed metody getResult z\u00edskejte v\u00fdsledek posledn\u00edho proveden\u00ed pro okam\u017eik, kdy byla z\u00edsk\u00e1na instance TaskStatus.
CWWKC1551.result.unavailable.until.ended.explanation=TaskStatus je nem\u011bniteln\u00fdm sn\u00edmkem stavu \u00falohy. V\u0161echny hodnoty vr\u00e1cen\u00e9 z metody get p\u0159ed ukon\u010den\u00edm t\u00e9to \u00falohy budou po dokon\u010den\u00ed dal\u0161\u00edho pokusu o proveden\u00ed nebo po ukon\u010den\u00ed \u00falohy neplatn\u00e9. P\u0159i pokusu o proveden\u00ed p\u0159ed ukon\u010den\u00edm \u00falohy obdr\u017e\u00edte chybu, aby se zabr\u00e1nilo n\u00e1vratu nespolehliv\u00e9 hodnoty.
CWWKC1551.result.unavailable.until.ended.useraction=Pomoc\u00ed metody getResult z\u00edskejte v\u00fdsledek posledn\u00edho pokusu o proveden\u00ed pro okam\u017eik, kdy byla z\u00edsk\u00e1na instance TaskStatus. 

CWWKC1552.delay.unavailable=CWWKC1552E: Metodu getDelay m\u016f\u017eete vyvolat pouze v p\u0159\u00edpad\u011b, \u017ee m\u00e1te instanci TaskStatus pro jednosn\u00edmkov\u00e9 \u00falohy. V p\u0159\u00edpad\u011b opakovateln\u00fdch \u00faloh a \u00faloh napl\u00e1novan\u00fdch pomoc\u00ed spou\u0161t\u011b\u010de pou\u017e\u00edvejte k z\u00edsk\u00e1n\u00ed \u010dasu o\u010dek\u00e1van\u00e9ho dal\u0161\u00edho proveden\u00ed, kter\u00e9 bude n\u00e1sledovat po proveden\u00ed, je\u017e bylo v okam\u017eiku z\u00edsk\u00e1n\u00ed instance TaskStatus posledn\u00ed, metodu getNextExecutionTime.
CWWKC1552.delay.unavailable.explanation=TaskStatus je nem\u011bniteln\u00fdm sn\u00edmkem stavu \u00falohy. V\u0161echny hodnoty vr\u00e1cen\u00e9 z metody getDelay p\u0159ed ukon\u010den\u00edm t\u00e9to \u00falohy budou po dokon\u010den\u00ed dal\u0161\u00edho proveden\u00ed neplatn\u00e9. P\u0159i pokusu o proveden\u00ed p\u0159ed ukon\u010den\u00edm \u00falohy obdr\u017e\u00edte chybu, aby se zabr\u00e1nilo n\u00e1vratu nespolehliv\u00e9 hodnoty.
CWWKC1552.delay.unavailable.useraction=Chcete-li z\u00edskat \u010das o\u010dek\u00e1van\u00e9ho dal\u0161\u00edho proveden\u00ed odpov\u00eddaj\u00edc\u00ed \u010dasu, kdy byla z\u00edsk\u00e1na instance TaskStatus, pou\u017eijte metodu getNextExecutionTime.

# {0} persistent executor id
# {1} task id (and name in parenthesis if any)
CWWKC1553.result.inaccessible=CWWKC1553E: Trval\u00fd prov\u00e1d\u011bc\u00ed modul {0} nez\u00edskal v\u00fdsledek \u00falohy {1}. Viz p\u0159\u00ed\u010dinn\u00e1 v\u00fdjimka.
CWWKC1553.result.inaccessible.explanation=Do\u0161lo k chyb\u011b, kter\u00e1 zabr\u00e1nila z\u00edsk\u00e1n\u00ed v\u00fdsledku \u00falohy.
CWWKC1553.result.inaccessible.useraction=Chcete-li opravit probl\u00e9m, projd\u011bte si p\u0159\u00ed\u010dinnou v\u00fdjimku. Pak p\u0159epl\u00e1nujte \u00falohu.

# {0} task id (and name in parenthesis if any)
CWWKC1554.general.task.failure=CWWKC1554E: \u00dalohu {0} se nezda\u0159ilo spustit. Viz p\u0159\u00ed\u010dinn\u00e1 v\u00fdjimka.
CWWKC1554.general.task.failure.explanation=\u00dalohu se nezda\u0159ilo spustit kv\u016fli uveden\u00e9 v\u00fdjimce.
CWWKC1554.general.task.failure.useraction=Chcete-li opravit probl\u00e9m, projd\u011bte si p\u0159\u00ed\u010dinnou v\u00fdjimku. Pak p\u0159epl\u00e1nujte \u00falohu.

# {0} task id (and name in parenthesis if any)
# {1} number of consecutive failures/rollbacks
CWWKC1555.retry.limit.reached=CWWKC1555E: \u00daloha {0} byla p\u0159ed\u010dasn\u011b ukon\u010dena, proto\u017ee byla odvol\u00e1na nebo se nezda\u0159ila {1}kr\u00e1t po sob\u011b.
CWWKC1555.retry.limit.reached.explanation=\u00daloha dos\u00e1hla limitu n\u00e1sledn\u00fdch opakovan\u00fdch pokus\u016f a nebude d\u00e1le opakov\u00e1na.
CWWKC1555.retry.limit.reached.useraction=Chcete-li opravit probl\u00e9m, projd\u011bte si p\u0159\u00ed\u010dinnou v\u00fdjimku. Pak p\u0159epl\u00e1nujte \u00falohu. Je-li probl\u00e9m ob\u010dasn\u00fd, zva\u017ete zv\u00fd\u0161en\u00ed limitu opakov\u00e1n\u00ed.

# {0} name of application that scheduled the task
CWWKC1556.task.exec.deferred=CWWKC1556W: Prov\u00e1d\u011bn\u00ed \u00faloh z aplikace {0} je odlo\u017eeno a\u017e do okam\u017eiku, kdy aplikace a moduly, je\u017e napl\u00e1novaly \u00falohy, jsou k dispozici.
CWWKC1556.task.exec.deferred.explanation=Aplikace a modul, je\u017e napl\u00e1novaly \u00falohu, mus\u00ed b\u00fdt k dispozici, aby se mohla dan\u00e1 \u00faloha spustit.
CWWKC1556.task.exec.deferred.useraction=Ujist\u011bte se, \u017ee aplikace a modul, je\u017e napl\u00e1novaly \u00falohu, jsou k dispozici. Alternativn\u011b \u00falohu zru\u0161te, pokud ji\u017e nen\u00ed zapot\u0159eb\u00ed.

# {0} request id
# {1} stack trace
CWWKC1559.mbean.operation.failure=CWWKC1559E:  Do\u0161lo k chyb\u011b. Po\u017eadavek {0}. {1}
CWWKC1559.mbean.operation.failure.explanation=Do\u0161lo k chyb\u011b p\u0159i pokusu o proveden\u00ed po\u017eadovan\u00e9 operace.
CWWKC1559.mbean.operation.failure.useraction=Podrobnosti o chyb\u011b operace naleznete v protokolech serveru.
