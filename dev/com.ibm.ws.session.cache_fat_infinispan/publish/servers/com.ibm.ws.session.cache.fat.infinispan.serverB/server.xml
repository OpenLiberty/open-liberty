<server>

    <featureManager>
        <feature>bells-1.0</feature>
        <feature>cdi-2.0</feature>
        <feature>servlet-4.0</feature>
        <feature>componenttest-1.0</feature>
        <feature>sessionCache-1.0</feature>
        <feature>timedexit-1.0</feature>
    </featureManager>
    
    <include location="../fatTestCommon.xml"/>

    <!-- This server runs at the same time as com.ibm.ws.session.cache.fat.infinispan.serverA, so use a different set of ports -->    
    <httpEndpoint id="defaultHttpEndpoint"
                  httpPort="${bvt.prop.HTTP_secondary}"
                  httpsPort="${bvt.prop.HTTP_secondary.secure}"/>
    
    <httpSession maxInMemorySessionCount="1" allowOverflow="false" hideSessionValues="false" invalidationTimeout="10m"/>
    
    <httpSessionCache libraryRef="InfinispanLib" uri="file:${shared.resource.dir}/infinispan/infinispan.xml" />
    
    <!--  TODO: How to configure a non local cache with a bell and infinispan?
    <bell libraryRef="InfinispanLib" service="javax.cache.spi.CachingProvider"/> -->

    <library id="InfinispanLib">
        <fileset dir="${shared.resource.dir}/infinispan" includes="*.jar"/>
    </library>
    
    <!-- Perms needed because the application uses Hazelcast directly   -->
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="java.io.FilePermission" actions="read" name="${shared.resource.dir}/hazelcast/*"/>
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="java.lang.RuntimePermission" name="accessClassInPackage.sun.management"/>
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="java.lang.RuntimePermission" name="accessClassInPackage.sun.misc"/>
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="java.lang.RuntimePermission" name="accessClassInPackage.sun.nio.ch"/>
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="java.lang.RuntimePermission" name="accessDeclaredMembers"/>
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="java.lang.RuntimePermission" name="enableContextClassLoaderOverride"/>
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="java.lang.RuntimePermission" name="getClassLoader"/>
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="java.lang.RuntimePermission" name="getenv.HZ_PHONE_HOME_ENABLED"/>
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="java.lang.RuntimePermission" name="setContextClassLoader"/>
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="java.lang.RuntimePermission" name="shutdownHooks"/>
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="java.lang.reflect.ReflectPermission" name="suppressAccessChecks"/>
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="java.net.NetPermission" name="getNetworkInformation"/>
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="java.net.SocketPermission" actions="accept,connect,listen,resolve" name="*"/>
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="java.net.URLPermission" actions="GET:User-Agent" name="http://phonehome.hazelcast.com/ping"/>
    
    <!-- Needed for missing doPriv in JCache 1.1 API (see https://github.com/jsr107/jsr107spec/issues/398) -->
    <javaPermission className="java.util.PropertyPermission" actions="read,write" name="*"/>
    <!-- Needed for hazelcast JVM shutdown hook -->
    <javaPermission className="java.lang.RuntimePermission" name="accessClassInPackage.sun.net.www.protocol.wsjar"/>
    
    <javaPermission codebase="${shared.resource.dir}/hazelcast/hazelcast.jar" className="java.security.AllPermission"/>
    <javaPermission codebase="${shared.resource.dir}/infinispan/*" className="java.security.AllPermission"/>

    <!--  Permissions for application to access mbeans -->
    <javaPermission codebase="${server.config.dir}/dropins/sessionCacheApp.war" className="javax.management.MBeanServerPermission" name="createMBeanServer"/>

</server>