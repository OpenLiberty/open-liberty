###############################################################################
# Copyright (c) 2019 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#CMVCPATHNAME com.ibm.ws.concurrent/resources/com/ibm/ws/concurrent/resources/CWWKCMessages.nlsprops
#ISMESSAGEFILE TRUE
#NLS_ENCODING=UNICODE
#
#COMPONENTPREFIX CWWKC
#COMPONENTNAMEFOR CWWKC CDI integration for MicroProfile Concurrency
#
# NLS_MESSAGEFORMAT_VAR
#
#   Strings in this file which contain replacement variables are processed by the MessageFormat 
#   class (single quote must be coded as 2 consecutive single quotes ''). Strings in this file 
#   which do NOT contain replacement variables are NOT processed by the MessageFormat class 
#   (single quote must be coded as one single quote '). 

# All messages must use the range CWWCK1190 to CWWCK1199 except those specifically identified as moved

CWWKC1190.duplicate.namedinstance=CWWKC1190E: Multiple injections points produce a {0} that is qualified by @NamedInstance("{1}"). The conflicting injection points are: {2}
CWWKC1190.duplicate.namedinstance.explanation=For any given NamedInstance value N, the combination of @NamedInstance("N") with @ManagedExecutorConfig or @ThreadContextConfig is allowed for one injection point only.
CWWKC1190.duplicate.namedinstance.useraction=Remove the @ManagedExecutorConfig or @ThreadContextConfig annotation from one of the injection points so that it shares the instance produced by the other injection point. Alternatively, choose a different NamedInstance value for one of the injection points so that separate instances are produced for each.
