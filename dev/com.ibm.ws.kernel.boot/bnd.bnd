#*******************************************************************************
# Copyright (c) 2017, 2019 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
#*******************************************************************************
#
# The kernel boot bundle has an extra include: it brings in the default
# values for the kernel/os extensions/log provider versions.
#
-include= ~../cnf/resources/bnd/bundle.props
-nouses=true
bVersion=1.0

javac.source: 1.7
javac.target: 1.7

Require-Capability: osgi.ee; filter:="(&(osgi.ee=JavaSE)(version=1.7))"

# We're going to create a bad bundle here: don't want imports
# or anything else for the launcher. So just swallow the errors.
-failok=true

Bundle-Name: WebSphere Liberty kernel bootstrap
Bundle-SymbolicName: com.ibm.ws.kernel.boot; singleton:=true
Bundle-Description: WebSphere Liberty kernel launcher, version ${bVersion}

Main-Class: com.ibm.ws.kernel.boot.cmdline.EnvCheck

# This bundle emits messages before the OSGi runtime is fully started,
# and so it needs to be able to load message translations from other
# jar files using the jar manifest Class-Path attribute
Class-Path: com.ibm.ws.kernel.boot.nls_${bFullVersion}.jar

# Export-Package is used to generate extra system packages when preparing 
# framework launch and to ensure bnd picks up platform/injected services
# For each exported package, create (in that package) a package-info.java
# file, and place an @version javadoc tag in package-level javadoc. 
# Append ";provide:=true" if this bundle also provides an implementation
# for the exported API.
#
# NOTE: ODDNESS. we're including com.ibm.ws.kernel.security.thread 
# and com.ibm.ws.kernel.provisioning.packages as exported
# packages. The contents of these packages are provided by src.kernel/classes in the
# com.ibm.ws.logging project! Dependency-wise, it's better to leave the classes
# in the com.ibm.ws.logging project (since logging itself depends on them). However it's 
# not really a logging package (obviously) and so we package it with kernel.boot.
#
Export-Package: com.ibm.ws.kernel.launch.service;provide:=true, \
  com.ibm.ws.kernel;provide:=true, \
  com.ibm.ws.kernel.boot.classloader.*;provide:=true, \
  com.ibm.ws.kernel.boot.delegated.*;provide:=true, \
  com.ibm.ws.kernel.boot.jmx.service;provide:=true, \
  com.ibm.ws.kernel.boot.security.*;thread-context=true, \
  com.ibm.ws.kernel.productinfo.*;provide:=true, \
  com.ibm.ws.kernel.provisioning;provide:=true, \
  com.ibm.ws.kernel.security.thread;provide:=true, \
  com.ibm.ws.kernel.provisioning.packages;provide:=true, \
  com.ibm.ws.kernel.boot.utils,\
  com.ibm.wsspi.kernel.security.thread;provide:=true
 
Import-Package: !org.omg.CORBA*, *

#
# NOTE: ODDNESS. we're including com.ibm.ws.kernel.boot.logging as a private
# package. The contents of that package are provided by src/classes in the
# com.ibm.ws.logging project! Dependency-wise, it's better to leave the WsLogManager
# in the com.ibm.ws.logging project. It has to be packaged with the launcher to make
# sure it is accessible to the system classpath at runtime
#
Private-Package: \
 com.ibm.ws.kernel.boot.logging.*;-split-package:=merge-last, \
 com.ibm.ws.kernel.boot.cmdline.*;-split-package:=merge-last, \
 com.ibm.ws.kernel.boot.*, \
 com.ibm.ws.kernel.launch.*, \
 com.ibm.ws.kernel.internal.*, \
 com.ibm.wsspi.kernel.embeddable.*

# security.policy file is pre-processed: the ${osgi-jar} variable in it will be replaced
# with the name of the osgi jar specified above.
-includeresource: \
    OSGI-OPT=resources/OSGI-OPT, \
    OSGI-OPT/websphere/bin/tools/ws-server.jar=${repo;com.ibm.ws.kernel.boot.ws-server}, \
    {OSGI-OPT/websphere/autopd-collection-environment-v2.xml=resources/OSGI-OPT/websphere/autopd-collection-environment-v2.xml}, \
    @${repo;com.ibm.websphere.org.osgi.core}!/org/osgi/framework/Version*, \
    @${repo;com.ibm.ws.kernel.boot.core}!/!com/ibm/ws/kernel/boot/resources/, \
    @${repo;com.ibm.ws.kernel.boot.nested}!/!com/ibm/ws/kernel/boot/resources/, \
    @${repo;com.ibm.ws.kernel.boot.cmdline}!/!com/ibm/ws/kernel/boot/resources/, \
    @${repo;com.ibm.ws.kernel.boot.common}, \
    @${repo;com.ibm.ws.kernel.boot.logging}

-dependson: \
    com.ibm.ws.kernel.boot.ws-server

instrument.disabled: true

-buildpath: \
	com.ibm.ws.kernel.boot.cmdline;version=latest,\
	com.ibm.ws.kernel.boot.common;version=latest,\
	com.ibm.ws.kernel.boot.core;version=latest,\
	com.ibm.ws.kernel.boot.logging;version=latest,\
	com.ibm.ws.kernel.boot.nested;version=latest,\
	com.ibm.ws.kernel.security.thread;version=latest,\
	com.ibm.websphere.org.osgi.core;version=latest,\
	com.ibm.ws.logging.core;version=latest,\
	com.ibm.ws.ras.instrument;version=latest
