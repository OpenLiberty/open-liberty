###############################################################################
# Copyright (c) 2010 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#CMVCPATHNAME com.ibm.ws.kernel.boot/resources/com/ibm/ws/kernel/boot/resources/LauncherOptions.nlsprops
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
# NLS_MESSAGEFORMAT_VAR

#------------------------------\n at 72 chars -- leading tab-----------\n\#
briefUsage=\
Usage: java [JVM options] -javaagent:bin/tools/ws-javaagent.jar \\        \n\
\t-jar bin/tools/ws-server.jar serverName {0} [options]  
scriptUsage=\
Usage: {0} {1} serverName [options] [JVM options]

use.actions=Actions:
use.options=Options:
use.options.gen.desc=\ \ \ \ Use help [actionName] for detailed option information of each action.
use.jvmarg=JVM options:
category-key.lifecycle=Server Lifecycle
category-key.win=Windows
category-key.service=Problem Determination
category-key.help=Information
category-key.misc=Miscellaneous

# -------- OPTIONS ----------------------------------------------------#
# List of descriptive text for options. Use "\n\" for line continuations.
# The code provides no whitespace: begin keys with "\ \ \ \ " for leading
# whitespace, and begin descripions with \t 
#------------------------------\n at 72 chars -- leading tab-----------\n\#
# ServerName
processName.key=\
\ \ \ \ serverName
processName.desc=\
\tA locally unique name for the server; the name can be constructed    \n\
\tusing Unicode alphanumeric characters (for example, A-Za-z0-9), the  \n\
\tunderscore (_), dash (-), plus (+) and period (.). A server name     \n\
\tcannot begin with a dash (-) or period (.).
#------------------------------\n at 72 chars -- leading tab-----------\n\#
# JavaAgent 
javaAgent.key=\
\ \ \ \ -javaagent:bin/tools/ws-javaagent.jar
javaAgent.desc=\
\tThis is a JVM option used to specify an agent for instrumentation.   \n\
\tThe runtime uses instrumentation for gathering trace and other debug \n\
\tinformation. The bootstrap-agent.jar is be in the same directory as  \n\
\tthe jar used to launch the runtime.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
# Actions: create, stop, version, package, dump
action-key.create=\
\ \ \ \ --create
action-desc.create=\
\tCreate a new server if the specified server does not exist. The      \n\
\t--template option can be used to specify a template to use when      \n\
\tcreating a new server.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
action-key.list=\
\ \ \ \ --list
action-desc.list=\
\tList the Liberty profile application servers that are defined.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
action-key.start=\
\ \ \ \ --start
action-desc.start=\
\tStart the named server.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
action-key.run=\
\ \ \ \ --run
action-desc.run=\
\tRun the named server in the console foreground.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
action-key.debug=\
\ \ \ \ --debug
action-desc.debug=\
\tRun the named server in the console foreground after a debugger      \n\
\tconnects to the debug port (default: 7777).
#------------------------------\n at 72 chars -- leading tab-----------\n\#
action-key.status=\
\ \ \ \ --status
action-desc.status=\
\tCheck the status of the named server.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
action-key.stop=\
\ \ \ \ --stop
action-desc.stop=\
\tStop the running instance of the named server.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
action-key.version=\
\ \ \ \ --version
action-desc.version=\
\tShow server version information and exit.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
action-key.package=\
\ \ \ \ --package
action-desc.package=\
\tPackage a server to an archive. The --archive option can be used.    \n\
\tThe --include option can be used with values "all", "usr", "minify", \n\
\t"wlp", "runnable", "all,runnable", and "minify,runnable". The values \n\
\t"runnable" and "all,runnable" are equivalent. The "runnable" value   \n\
\tworks with "jar" type archives only. The --server-root option can be \n\
\tused to specify the root folder in the package archive.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
action-key.dump=\
\ \ \ \ --dump
action-desc.dump=\
\tDump diagnostic information from the server into an archive. The     \n\
\t--archive option can be used.  The --include option can be used with \n\
\tthe "heap", "system" and "thread" values.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
action-key.javadump=\
\ \ \ \ --javadump
action-desc.javadump=\
\tDump diagnostic information from the server JVM. The --include       \n\
\toption can be used with the "heap" and "system" values.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
action-key.registerWinService=\
\ \ \ \ --registerWinService
action-desc.registerWinService=\
\tRegister the server specified as a Windows Service program.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
action-key.startWinService=\
\ \ \ \ --startWinService
action-desc.startWinService=\
\tStart the server specified as a Windows Service program.             \n\
\tIt must be registered before starting.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
action-key.stopWinService=\
\ \ \ \ --stopWinService
action-desc.stopWinService=\
\tStop the server specified as a Windows Service program.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
action-key.unregisterWinService=\
\ \ \ \ --unregisterWinService
action-desc.unregisterWinService=\
\tUnregister the server specified as a Windows Service program.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
action-key.help=\
\ \ \ \ --help
action-desc.help=\
\tPrint help information.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
action-key.pause=\
\ \ \ \ --pause
action-desc.pause=\
\tPause all the components in the server that can be paused. You can   \n\
\tpause a subset of the components by specifying the components on the \n\
\t--target option.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
action-key.resume=\
\ \ \ \ --resume
action-desc.resume=\
\tResume all paused components in the server. You can specify the      \n\
\t--target option to resume specific paused components.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
option-key.clean=\
\ \ \ \ --clean
option-desc.clean=\
\tClean all cached information related to this server instance.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
option-key.archive=\
\ \ \ \ --archive="path to the target archive file"
option-desc.dump.archive=\
\tSpecify the archive target to be generated by the dump action.       \n\
\tThe target can be specified either as an absolute path or as a       \n\
\trelative path. If this option is omitted, the archive file is created\n\
\tin the server output directory. The target file name extension might \n\
\tinfluence the format of the generated archive. The default archive   \n\
\tformat for the package action is "pax" on z/OS and "zip" on all other\n\
\tplatforms. Archive format "jar" produces a self-extracting jar       \n\
\tsimilar to the original installer archive.                                      
option-desc.package.archive=\
\tSpecify the archive target to be generated by the package action.    \n\
\tThe target can be specified either as an absolute path or as a       \n\
\trelative path. If this option is omitted, the archive file is created\n\
\tin the server output directory. The target file name extension might \n\
\tinfluence the format of the generated archive. The default archive   \n\
\tformat for the package action is "pax" on z/OS and "zip" on all other\n\
\tplatforms. Archive format "jar" will produce a self-extracting jar   \n\
\tsimilar to the original installer archive. Archive format "jar"      \n\
\tcombined with "runnable" on the --include option produces a runnable \n\
\tjar file that can run the Liberty server from the jar file by using  \n\
\tjava -jar.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
option-key.include=\
\ \ \ \ --include=value,value,...
option-desc.javadump.include=\
\tA comma-delimited list of values. The valid values are: heap, system \n\
\tthread.
option-desc.package.include=\
\tA comma-delimited list of values. The valid values are: all*, usr,   \n\
\tminify, runnable, wlp. If you specify runnable the resulting package \n\
\twill be an executable jar that runs the server. The minify option    \n\
\tproduces the smallest image possible for the server. The usr option  \n\
\tcreates a package that contains the server and application, but not  \n\
\tthe runtime. The wlp option produces a runtime that does not contain \n\
\tthe server configuration. The default all option produces a server   \n\
\tpackage that contains everything.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
option-key.template=\
\ \ \ \ --template="templateName"
option-desc.template=\
\tSpecify the name of the template to use when creating a new server. 
#------------------------------\n at 72 chars -- leading tab-----------\n\#
option-key.target=\
\ \ \ \ --target=value,value
option-desc.target=\
\tSpecifies a comma-delimited list of components that you can pause or \n\
\tresume.
#------------------------------\n at 72 chars -- leading tab-----------\n\#
option-key.os=\
\ \ \ \ --os=value,value,...
option-desc.os=\
\tSpecifies the operating systems that you want the packaged server to \n\
\tsupport. Supply a comma-separated list. The default value is any,    \n\
\tindicating that the server is to be deployable to any operating      \n\
\tsystem supported by the source.                                      \n\
\tTo specify that an operating system is not to be supported, prefix it\n\
\twith a minus sign ("-"). For a list of operating system values, refer\n\
\tto the OSGi Alliance web site at the following URL:                  \n\
\thttp://www.osgi.org/Specifications/Reference#os                      \n\
\tThis option applies only to the package operation, and can be used   \n\
\tonly with the --include=minify option. If you exclude an operating   \n\
\tsystem, you cannot later include it if you repeat the minify         \n\
\toperation on the archive.
#------------------------------\n at 72 chars -- leading tab-----------\n\# 
option-key.no-password=\
\ \ \ \ --no-password
option-desc.no-password=\
\tDisable generation of default keystore password
#------------------------------\n at 72 chars -- leading tab-----------\n\#
option-key.server-root=\
\ \ \ \ --server-root="root server folder in archive"
option-desc.package.server-root=\
\tSpecifies the root server folder name in the archive file.           \n\
