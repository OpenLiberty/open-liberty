<?xml version="1.0" encoding="UTF-8"?>
<!-- See the NOTICE file distributed with this work for additional information 
	regarding copyright ownership. Licensed under the Apache License, Version 
	2.0 (the "License"); you may not use this file except in compliance with 
	the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<job id="BonusPayoutJob.partitioned.cursorhold" xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	version="1.0">
	<properties>

		<!--  Default is 100 -->
		<property name="bonusAmount" value="#{jobParameters['bonusAmount']}?:100;" />
		
		<!--  Default is 100 -->
		<property name="chunkSize" value="#{jobParameters['chunkSize']}?:100;" />
		
		<!--  Default is jdbc/BonusPayoutDS -->
		<property name="dsJNDI" value="#{jobParameters['dsJNDI']}?:jdbc/BonusPayoutDS;" />
		<property name="dsNoTranJNDI" value="#{jobParameters['dsNoTranJNDI']}?:jdbc/BonusPayoutNoTranDS;" />

		<!--  Default is tmp dir, (defined in application logic) -->
		<property name="generateFileNameRoot" value="#{jobParameters['generateFileNameRoot']}" />
			
	    <!--  Default is 1000 records -->
		<property name="numRecords" value="#{jobParameters['numRecords']}?:1000;" />
		
		<!--  Default is 5 partitions -->
		<property name="numValidationPartitions" value="#{jobParameters['numValidationPartitions']}?:5;" />	
		
		<property name="tableName" value="#{jobParameters['tableName']}?:BONUSPAYOUT.ACCOUNT;" />
		
		<!-- These two will be accessed via the JobContext, rather than via injected 
			through @Inject @BatchProperty injection -->
		<property name="fileEncoding" value="#{jobParameters['fileEncoding']}" />
	</properties>
	<listeners>
		<listener
			ref="com.ibm.websphere.samples.batch.fat.EndOfJobNotificationListener" />
	</listeners>

	<!-- Generate random account-like data in CSV format into a text file -->
	<step id="generate" next="addBonus">
		<listeners>
			<listener ref="com.ibm.websphere.samples.batch.artifacts.BatchUpdateExceptionListener"/>
		</listeners>
		<batchlet
			ref="com.ibm.websphere.samples.batch.artifacts.GenerateDataBatchlet">
			<properties>
				<property name="numRecords" value="#{jobProperties['numRecords']}" />
			</properties>
		</batchlet>
	</step>
	<!-- Increment each account with configurable 'bonusAmount' (integer). -->
	<step id="addBonus" next="validation">
		<chunk item-count="#{jobProperties['chunkSize']}">
			<reader ref="com.ibm.websphere.samples.batch.artifacts.GeneratedCSVReader"/>
			<processor
				ref="com.ibm.websphere.samples.batch.artifacts.BonusCreditProcessor">
				<properties>
					<property name="bonusAmount" value="#{jobProperties['bonusAmount']}" />
				</properties>
			</processor>
			<writer
				ref="com.ibm.websphere.samples.batch.artifacts.AccountJDBCWriter">
				<properties>
				    <!--  Make sure we use the transactional datasource for this case. -->
					<property name="dsJNDI" value="#{jobProperties['dsJNDI']}" />
					<property name="tableName" value="#{jobProperties['tableName']}" />
				</properties>
			</writer>
		</chunk>
	</step>
	<!-- Read the records just written to the DB and read the original file 
		of generated data to confirm the correct "bonus amount" was added. -->
	<step id="validation">
		<listeners>
			<listener ref="com.ibm.websphere.samples.batch.artifacts.ForceFailureReadListener">
				<properties>
					<property name="forceFailure" value="#{jobParameters['forceFailure']}" />
				</properties>
			</listener>
			<listener ref="com.ibm.websphere.samples.batch.artifacts.ValidationUserDataChunkListener"/>
			<listener ref="com.ibm.websphere.samples.batch.artifacts.ValidationCountUpdatingWriteListener"/>
		</listeners>
		<chunk item-count="#{jobProperties['chunkSize']}">
			<reader ref="com.ibm.websphere.samples.batch.artifacts.ValidationCursorHoldReader">
				<properties>
				    <!--  Make sure we use the non-transactional datasource for this case. -->
					<property name="dsJNDI" value="#{jobProperties['dsNoTranJNDI']}" />
					<property name="maxRecordsToValidate" value="#{partitionPlan['partitionSize']}" />
					<property name="startAtIndex" value="#{partitionPlan['startAtIndex']}" />
					<property name="tableName" value="#{jobProperties['tableName']}" />
				</properties>
			</reader>
			<processor
				ref="com.ibm.websphere.samples.batch.artifacts.ValidationProcessor">
				<properties>
					<property name="bonusAmount" value="#{jobProperties['bonusAmount']}" />
				</properties>
			</processor>
			<writer ref="com.ibm.websphere.samples.batch.artifacts.NoOpWriter" />
		</chunk>
		<partition>			
			<mapper ref="com.ibm.websphere.samples.batch.artifacts.SimpleIntegerPartitionMapper">
				<properties>					
					<property name="numPartitions" value="#{jobProperties['numValidationPartitions']}" />
					<property name="numRecords" value="#{jobProperties['numRecords']}" />
				</properties>
			</mapper>			
			<analyzer ref="com.ibm.websphere.samples.batch.artifacts.ValidationPartitionAnalyzer" />
            <reducer ref="com.ibm.websphere.samples.batch.artifacts.ValidationPartitionReducer" />
		</partition>
	</step>
</job>
