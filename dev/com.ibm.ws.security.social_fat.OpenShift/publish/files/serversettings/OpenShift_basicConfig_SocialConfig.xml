<!--
    Copyright (c) 2019, 2022 IBM Corporation and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

    Contributors:
        IBM Corporation - initial API and implementation
 -->
<server>

	<oauth2Login
		id="openShiftLogin1"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter1"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_badClientId"
        scope="user:full"
        clientId="somebadClient"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_badClientId"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_blankClientId"
        scope="user:full"
        clientId=" "
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_blankClientId"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_emptyClientId"
        scope="user:full"
        clientId=""
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_emptyClientId"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_badClientSecret"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="badSecret"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_badClientSecret"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_blankClientSecret"
        scope="user:full"
        clientId="${client.id}"
        clientSecret=" "
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_blankClientSecret"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_emptyClientSecret"
        scope="user:full"
        clientId="${client.id}"
        clientSecret=""
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_emptyClientSecret"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_XOR_Secret"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="{xor}${client.xor.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_xorSecret"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_bad_XOR_Secret"
		clientSecret="{xor}DDAyOh0+Ow8o"
        scope="user:full"
        clientId="${client.id}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_bad_xorSecret"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_enabledTrue"
		enabled="true"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_enabledTrue"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_enabledFalse"
		enabled="false"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_enabledFalse"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_badAuthFilterRef"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_badAuthFilterRef"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_goodTrust"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_goodTrust"
		sslRef="DefaultSSLSettings"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_badTrust"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_badTrust"
		sslRef="BadTrustSSLSettings"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_blankTrust"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_blankTrust"
		sslRef=" "
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_emptyTrust"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
        authFilterRef="authFilter_emptyTrust"
		sslRef=""
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_badAuthEndpoint"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authrize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_badAuthEndpoint"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_blankAuthEndpoint"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint=" "
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_blankAuthEndpoint"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_emptyAuthEndpoint"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint=""
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube"
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_emptyAuthEndpoint"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_reallyBadAuthEndpoint"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="someStringno"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_reallyBadAuthEndpoint"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_badTokenEndpoint"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="https://somehost:8443/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_badTokenEndpoint"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_blankTokenEndpoint"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint=" "
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_blankTokenEndpoint"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_emptyTokenEndpoint"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint=""
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_emptyTokenEndpoint"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_tEAM_clientSecretBasic"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		tokenEndpointAuthMethod="client_secret_basic"
		authFilterRef="authFilter_tEAM_clientSecretBasic"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_tEAM_clientSecretPost"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		tokenEndpointAuthMethod="client_secret_post"
		authFilterRef="authFilter_tEAM_clientSecretPost"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_goodUserApi"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_goodUserApi"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_badUserApi"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/okenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_badUserApi"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_blankUserApi"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi=" "
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_blankUserApi"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_emptyUserApi"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi=""
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_emptyUserApi"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_basicUserApiType"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="basic" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_basicUserApiType"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_introspectUserApiType"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="introspect" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_introspectUserApiType"
	>
	</oauth2Login>
	
	<oauth2Login
		id="openShiftLogin_kubeUserApiType"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_kubeUserApiType"
	>
	</oauth2Login>
	
	<oauth2Login
		id="openShiftLogin_goodUserApiToken"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_good_userApiToken"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_badUserApiToken"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="someBadTokenValue.123456.8796asd"
		authFilterRef="authFilter_bad_userApiToken"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_UserApiToken_missingPermissions"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token.missing.permissions}"
		authFilterRef="authFilter_missingPermissions_userApiToken"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_blankUserApiToken"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken=" "
		authFilterRef="authFilter_blank_userApiToken"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_emptyUserApiToken"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken=""
		authFilterRef="authFilter_empty_userApiToken"
	>
	</oauth2Login>
			
	<oauth2Login
		id="openShiftLogin_realmName"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		realmName="myOpenShiftRealm"
		authFilterRef="authFilter_realmName"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_blankRealmName"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		realmName=" "
		authFilterRef="authFilter_blankRealmName"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_emptyRealmName"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		realmName=""
		authFilterRef="authFilter_emptyRealmName"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_mapToUserRegistryFalse"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		mapToUserRegistry="false"
		authFilterRef="authFilter_mapToUserRegistryFalse"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_mapToUserRegistryTrue"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		mapToUserRegistry="true"
		authFilterRef="authFilter_mapToUserRegistryTrue"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_goodjwt_builder"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_good_jwt_builder"
	>
		<jwt builder="goodJwtBuilder" />
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_blankjwt_builder"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_blank_jwt_builder"
	>
		<jwt builder=" " />
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_emptyjwt_builder"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_empty_jwt_builder"
	>
		<jwt builder="" />
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_jwtRef_HS256"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_jwt_builder_HS256"
	>
		<jwt builder="goodJwtBuilder_HS256" />
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_isClientSideRedirectSupported_true"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_isClientSideRedirectSupported_true"
		isClientSideRedirectSupported="true"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_isClientSideRedirectSupported_false"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_isClientSideRedirectSupported_false"
		isClientSideRedirectSupported="false"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_badScope"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		scope="my dog has fleas"
		authFilterRef="authFilter_badScope"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_blankScope"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		scope=" "
		authFilterRef="authFilter_blankScope"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_emptyScope"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		scope=""
		authFilterRef="authFilter_emptyScope"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_goodUserNameAttribute"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_goodUserNameAttribute"
        userNameAttribute="username"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_badUserNameAttribute"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_badUserNameAttribute"
		userNameAttribute="someBadName"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_blankUserNameAttribute"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_blankUserNameAttribute"
		userNameAttribute=" "
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_emptyUserNameAttribute"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_emptyUserNameAttribute"
		userNameAttribute=""
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_goodGroupNameAttribute"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_goodGroupNameAttribute"
		groupNameAttribute="groups"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_badGroupNameAttribute"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_badGroupNameAttribute"
		groupNameAttribute="someBadGroup"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_blankGroupNameAttribute"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_blankGroupNameAttribute"
		groupNameAttribute=" "
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_emptyGroupNameAttribute"
		scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_emptyGroupNameAttribute"
		groupNameAttribute=""
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_goodRealmNameAttribute"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
        authFilterRef="authFilter_goodRealmNameAttribute"
		realmNameAttribute="username"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_badRealmNameAttribute"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
        authFilterRef="authFilter_badRealmNameAttribute"
		realmNameAttribute="someBadRealm"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_blankRealmNameAttribute"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
        authFilterRef="authFilter_blankRealmNameAttribute"
		realmNameAttribute=" "
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_emptyRealmNameAttribute"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
        authFilterRef="authFilter_emptyRealmNameAttribute"
		realmNameAttribute=""
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_goodUserUniqueIdAttribute"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_goodUserUniqueIdAttribute"
		userUniqueIdAttribute="id"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_badUserUniqueIdAttribute"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_badUserUniqueIdAttribute"
		userUniqueIdAttribute="someBadUserUniqueName"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_blankUserUniqueIdAttribute"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_blankUserUniqueIdAttribute"
		userUniqueIdAttribute=" "
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_emptyUserUniqueIdAttribute"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_emptyUserUniqueIdAttribute"
		userUniqueIdAttribute=""
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_goodRedirectToRPHostAndPort"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_goodRedirectToRPHostAndPort"
        redirectToRPHostAndPort="https://localhost:${bvt.prop.security_2_HTTP_default.secure}"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_badRedirectToRPHostAndPort"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_badRedirectToRPHostAndPort"
		redirectToRPHostAndPort="https://myBogusMachine.austin.ibm.com:${bvt.prop.security_2_HTTP_default.secure}"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_blankRedirectToRPHostAndPort"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_blankRedirectToRPHostAndPort"
		redirectToRPHostAndPort=" "
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_emptyRedirectToRPHostAndPort"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_emptyRedirectToRPHostAndPort"
		redirectToRPHostAndPort=""
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_codeResponseType"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_codeResponseType"
        responseType="code"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_accessTokenRequiredTrue"
        scope="user:full"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_accessTokenRequiredTrue"
		accessTokenRequired="true"
	>
	</oauth2Login>
	
	<oauth2Login
		id="openShiftLogin_accessTokenRequiredFalse"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_accessTokenRequiredFalse"
		accessTokenRequired="false"
	>
	</oauth2Login>
	
	
	<oauth2Login
		id="openShiftLogin_accessTokenSupportedTrue_optionalParmsOmitted"
        scope="user:full"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_accessTokenSupportedTrue_optionalParmsOmitted"
		accessTokenSupported="true"
	>
	</oauth2Login>
	
	<oauth2Login
		id="openShiftLogin_accessTokenSupportedTrue_optionalParmsIncluded"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_accessTokenSupportedTrue_optionalParmsIncluded"
		accessTokenSupported="true"
	>
	</oauth2Login>
	
	<oauth2Login
		id="openShiftLogin_accessTokenSupportedFalse"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_accessTokenSupportedFalse"
		accessTokenSupported="false"
	>
	</oauth2Login>
	
	<oauth2Login
		id="openShiftLogin_accessTokenRequiredTrue_accessTokenSupportedTrue"
        scope="user:full"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_accessTokenRequiredTrue_accessTokenSupportedTrue"
		accessTokenRequired="true"
		accessTokenSupported="true"
	>
	</oauth2Login>
	
	<oauth2Login
		id="openShiftLogin_accessTokenHeaderNameBearer"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_accessTokenHeaderNameBearer"
		accessTokenRequired="true"
 		accessTokenHeaderName="Authorization"
	>
	</oauth2Login>
	
	<oauth2Login
		id="openShiftLogin_accessTokenHeaderNameXForwardedAccessToken"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_accessTokenHeaderNameXForwardedAccessToken"
		accessTokenRequired="true"
		accessTokenHeaderName="X-Forwarded-Access-Token"
	>
	</oauth2Login>

	<oauth2Login
		id="openShiftLogin_accessTokenHeaderNameUserDefined"
        scope="user:full"
        clientId="${client.id}"
        clientSecret="${client.secret}"
        authorizationEndpoint="${oauth.server}/oauth/authorize"
        tokenEndpoint="${oauth.server}/oauth/token"
        userNameAttribute="username"
        groupNameAttribute="groups"
        userApiType="kube" 
        userApi="${oauth.server.userapi}/apis/authentication.k8s.io/v1/tokenreviews"
        userApiToken="${service.account.token}"
		authFilterRef="authFilter_accessTokenHeaderNameUserDefined"
		accessTokenRequired="true"
 		accessTokenHeaderName="UserDefinedHeader"
	>
	</oauth2Login>	
	
</server>
