################################################################################
# Copyright (c) 2016, 2018 Oracle and/or its affiliates. All rights reserved.
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v1.0 and Eclipse Distribution License v. 1.0
# which accompanies this distribution.
# The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
# and the Eclipse Distribution License is available at
# http://www.eclipse.org/org/documents/edl-v10.php.
#
# Contributors:
# Roman Grigoriadi
# David Kral
################################################################################
#NLS_MESSAGEFORMAT_VAR
#NLS_ENCODING=UNICODE

cannotMarshallObject = \u7121\u6cd5\u914d\u7f6e\u7269\u4ef6
typeResolutionError = \u89e3\u6790 {0} \u985e\u578b\u7684\u57f7\u884c\u6642\u671f\u985e\u578b\u6642\u767c\u751f\u932f\u8aa4
genericBoundNotFound = \u627e\u4e0d\u5230 {1} \u4e2d\u5ba3\u544a\u4e4b {0} \u985e\u578b\u7684\u4e00\u822c\u7bc4\u570d
cantConvertJsonValue = \u7121\u6cd5\u5c07 JSON \u503c\u8f49\u63db\u6210 {0}
cantCreateRootInstance = \u7121\u6cd5\u5efa\u7acb\u6839\u6848\u4f8b
invokingGetter = \u547c\u53eb getter \u65b9\u6cd5\u6642\u767c\u751f\u932f\u8aa4\u3002
gettingValue = \u53d6\u5f97\u6b04\u4f4d\u503c\u6642\u767c\u751f\u932f\u8aa4\u3002
settingValue = \u8a2d\u5b9a\u6b04\u4f4d\u503c\u6642\u767c\u751f\u932f\u8aa4\u3002
noLoggerName = \u5fc5\u9808\u8a2d\u5b9a\u65e5\u8a8c\u7a0b\u5f0f\u540d\u7a31
resolveParametrizedType = \u7121\u6cd5\u89e3\u6790 {0} \u7684 ParameterizedType \u8d85\u985e\u5225
cantCreateInstance = \u7121\u6cd5\u5efa\u7acb\u5be6\u4f8b
inferTypeForUnmarshall = \u7121\u6cd5\u63a8\u65b7\u985e\u578b\u4ee5\u4fbf\u89e3\u9664\u914d\u7f6e\u6210 {0}
implClassIncompatible = \u5be6\u4f5c\u985e\u5225 {0} \u4e0d\u662f {1} \u4ecb\u9762\u7684\u5b50\u985e\u578b\u3002
notValueType = \u4e0d\u662f\u503c\u985e\u578b\uff1a{0}
unexpectedParseEvent = \u975e\u9810\u671f\u7684\u5256\u6790\u5668\u4e8b\u4ef6\uff1a{0}
processFromJson = \u4f7f\u7528\u8f49\u63db\u5668 {1} \u5f9e JSON \u8f49\u63db\u6210\u7a0b\u5e8f\u985e\u5225 {0}
processToJson = \u4f7f\u7528\u8f49\u63db\u5668 {1} \u5c07\u7a0b\u5e8f\u985e\u5225 {0} \u8f49\u63db\u6210 JSON
creatingHandles = \u5efa\u7acb\u63a7\u9ede\u6642\u767c\u751f\u932f\u8aa4\u3002
settingValueWith = \u8a2d\u5b9a {0} \u503c\u6642\u767c\u751f\u932f\u8aa4
gettingValueWith = \u53d6\u5f97 {0} \u503c\u6642\u767c\u751f\u932f\u8aa4
unpairedSurrogate = \u5b57\u4e32\u4e2d\u7684\u4ee3\u7406\u9805\u76ee\u4e0d\u6210\u5c0d\u3002
adapterException = \u5728 {2} \u985e\u5225\u4e2d\u5c07 {0} \u985e\u578b\u7684\u7269\u4ef6\u8abf\u6574\u6210 {1} \u6642\u767c\u751f\u554f\u984c
adapterFound = \u767c\u73fe\u5f9e {0} \u985e\u578b\u81f3 {1} \u985e\u578b\u7684\u914d\u63a5\u5668\u3002
adapterIncompatible = \u57f7\u884c\u6642\u671f\u985e\u578b {0} \u7684\u914d\u63a5\u5668\u4e0d\u7b26\u5408\u5167\u5bb9\u985e\u578b {1}
propertyOrder = \u7121\u6cd5\u8fa8\u8b58\u540d\u70ba {0} \u7684\u5167\u5bb9\u9806\u5e8f\u7b56\u7565
unsupportedJsonpSerializerValue=\u5c0d\u65bc JSON \u5e8f\u5217\u5316\u7a0b\u5f0f\uff0c\u4e0d\u652f\u63f4 {0} \u985e\u578b\u7684\u503c\u3002
noJndiEnvironment=\u627e\u4e0d\u5230 JNDI \u74b0\u5883 ({0}) \u4f86\u5c0b\u627e CDI \u63d0\u4f9b\u8005\u3002
noCdiApiProvider=\u5728\u985e\u5225\u6216\u6a21\u7d44\u8def\u5f91 {0} \u4e0a\u627e\u4e0d\u5230 CDI API\u3002
illegalAccess=Yasson \u5c0d {0} \u6c92\u6709\u8db3\u5920\u7684\u8a31\u53ef\u6b0a\u3002
usingDefaultConstructorInstantiator=\u627e\u4e0d\u5230 CDI Bean \u7ba1\u7406\u7a0b\u5f0f\uff0c\u5e8f\u5217\u5316\u7a0b\u5f0f\u548c\u914d\u63a5\u5668\u5c07\u4e0d\u652f\u63f4 CDI\u3002
noCdiEnvironment=CDI \u74b0\u5883\u7121\u6cd5\u4f7f\u7528\u3002
iJsonEnabledSingleValue = \u7121\u6cd5\u914d\u7f6e\u55ae\u4e00\u503c\uff0c\u56e0\u70ba\u5df2\u555f\u7528 I-Json\uff01
dateTypeNotSupported=\u4e0d\u652f\u63f4\u65e5\u671f\u985e\u578b\uff1a{0}
errorParsingDate=\u5256\u6790 {0} \u503c\u4e2d\u7684 {1} \u6642\u767c\u751f\u932f\u8aa4\u3002\
\u5c0d\u65bc {1} \u985e\u578b\uff0c\u8acb\u6aa2\u67e5\u60a8\u7684 @JsonbDateFormat \u662f\u5426\u5177\u6709\u6240\u6709\u7684\u6642\u9593\u55ae\u4f4d\uff0c\u6216\u8003\u91cf\u4f7f\u7528 org.eclipse.yasson.YassonProperties#ZERO_TIME_PARSE_DEFAULTING\u3002
noDefaultConstructor=\u7121\u6cd5\u5efa\u7acb {0} \u985e\u5225\u7684\u5be6\u4f8b\uff0c\u627e\u4e0d\u5230\u9810\u8a2d\u5efa\u69cb\u5b50\u3002
offsetDateTimeFromMillis=\u5256\u6790\u8d77\u81ea\u65b0\u7d00\u5143\u6beb\u79d2\u7684 {0}\uff0c\u5c07\u4f7f\u7528 UTC \u6642\u5340\u504f\u79fb\u3002
timeToEpochMillisError=\u7121\u6cd5\u9032\u884c {0} \u8207\u65b0\u7d00\u5143\u6beb\u79d2\u4e4b\u9593\u7684\u8f49\u63db\u3002
configPropertyInvalidType=JsonbConfig \u5167\u5bb9 [{0}] \u7684\u985e\u578b\u5fc5\u9808\u662f [{1}]\u3002
conversionNotSupported=\u4e0d\u652f\u63f4 [{0}] \u985e\u578b\u8207\u5b57\u4e32\u503c\u4e4b\u9593\u7684\u8f49\u63db\u3002
endOfJsonStructure=\u5df2\u9054 JSON \u7d50\u69cb\u5c3e\u7aef\u3002
invalidDeserializationType=\u7528\u4f86\u89e3\u9664\u5e8f\u5217\u5316\u70ba {1} \u7684 json \u503c\u985e\u578b {0} \u7121\u6548\u3002
czechDiacritics=p\u0159\u00edli\u0161,\u017elu\u0165ou\u010dk\u00fd,k\u016f\u0148,\u00fap\u011bl,\u010f\u00e1belsk\u00e9,\u00f3dy
russianDiacritics=\u0441\u043b\u0438\u0448\u043a\u043e\u043c,\u0436\u0435\u043b\u0442\u0435\u043d\u044c\u043a\u0438\u0439,\u043a\u043e\u043d\u044c,\u043f\u0435\u043b,\u0430\u0434\u0441\u043a\u0438\u0435,\u043e\u0434\u044b
propertyNotFoundDeserializer=\u5728 {1} \u985e\u5225\u4e2d\u627e\u4e0d\u5230 {0} \u5167\u5bb9\u3002\u6b63\u5728\u8df3\u904e\u503c {2}\u3002
settingPropertyDeserializer=\u5c07 {1} \u985e\u5225\u4e2d\u7684 {0} \u5167\u5bb9\u8a2d\u70ba\u503c {2}\u3002
classLoadNotAllowed=\u4e0d\u63a5\u53d7 {0} \u540d\u7a31\u7684\u985e\u5225\u8f09\u5165\uff01
errorCallingJsonbCreator=\u547c\u53eb\u985e\u5225 {0} \u4e0a\u7684 JSONB \u5efa\u7acb\u8005\u6642\uff0c\u767c\u751f\u7570\u5e38\u72c0\u6cc1\u3002
incompatibleFactoryCreatorReturnType=\u5efa\u7acb\u8005 {0} \u7684\u50b3\u56de\u985e\u578b\u5fc5\u9808\u662f {1} \u985e\u578b\u3002
multipleJsonbCreators=\u5728 {0} \u985e\u5225\u4e2d\u5ba3\u544a\u4e86\u591a\u500b @JsonbCreator\u3002
internalError=\u5167\u90e8\u932f\u8aa4\uff1a{0}
deserializeValueError=\u5c07 JSON \u503c\u89e3\u9664\u5e8f\u5217\u5316\u70ba {0} \u985e\u578b\u6642\u767c\u751f\u932f\u8aa4\u3002
parsingNumber=\u5256\u6790\u865f\u78bc {0}\uff08\u683c\u5f0f\u70ba {1}\uff09\u6642\u767c\u751f\u932f\u8aa4\u3002
unknownBinaryDataStrategy=\u4e0d\u660e\u7684\u4e8c\u9032\u4f4d\u8cc7\u6599\u7b56\u7565\uff1a{0}
invalidPropertyNamingStrategy=\u5167\u5bb9\u547d\u540d\u7b56\u7565\u5fc5\u9808\u662f\uff1a\u5b57\u4e32\u540d\u7a31\u6216 javax.json.bind.config.PropertyNamingStrategy \u7684\u5be6\u4f8b\u3002
creatorParameterNotAnnotated=\u5f15\u6578\u6c92\u6709 JsonbCreator {0} \u7684 JsonbProperty \u8a3b\u91cb\u3002
unknownJsonProperty=JSON \u5167\u5bb9 {0} \u7121\u6cd5\u5c0d\u6620\u81f3 {1} \u985e\u5225\u3002
jsonbCreatorMissingProperty=JSON \u683c\u5f0f\u4e2d\u907a\u6f0f JsonbCreator \u53c3\u6578 {0}\u3002
zoneParseError=\u7121\u6cd5\u5256\u6790 JSON \u503c {0} \u4e2d\u7684\u5340\u57df
jsonbTransientWithOtherAnnotations=JsonbTransient \u8a3b\u91cb\u7121\u6cd5\u8207\u76f8\u540c\u5167\u5bb9\u4e0a\u7684\u5176\u4ed6 jsonb \u8a3b\u91cb\u642d\u914d\u4f7f\u7528\u3002
nonParametrizedType={0} \u985e\u578b\u4e0d\u662f\u53c3\u6578\u5316\u985e\u578b\u3002
propertyNameClash={0} \u5167\u5bb9\u8207\u985e\u5225 {2} \u4e2d\u4f7f\u7528\u8b80\u53d6\u6216\u5beb\u5165\u540d\u7a31\u7684 {1} \u885d\u7a81\u3002
sqlDateIJsonError=\u5728 STRICT_IJSON \u6a21\u5f0f\u4e0b\uff0c\u4e0d\u652f\u63f4 java.sql.Date\u3002
recursiveReference=\u5728 {0} \u985e\u5225\u4e2d\u767c\u73fe\u905e\u8ff4\u53c3\u7167\u3002
datatypeFactoryCreationFailed=\u5efa\u7acb DatatypeFactory \u671f\u9593\u767c\u751f\u932f\u8aa4\u3002
multipleConstructorPropertiesCreators=\u6709\u591a\u500b\u5efa\u69cb\u5b50\u6a19\u8a3b\u4e86 {0} \u985e\u5225\u4e2d\u6240\u5ba3\u544a\u7684 @ConstructorProperties\u3002
annotationNotAvailable=\u8a3b\u91cb {0} \u5728\u6a21\u7d44\u6216\u985e\u5225\u8def\u5f91\u4e2d\u4e0d\u662f\u53ef\u898b\u7684\u3002\u5c07\u5ffd\u7565\u8a72\u8a3b\u91cb\u3002
missingValuePropertyInAnnotation=\u8a3b\u91cb {0} \u4e2d\u907a\u6f0f\u503c\u5167\u5bb9\u3002\u5c07\u5ffd\u7565\u8a72\u8a3b\u91cb\u3002
numberIncompatibleValueTypeArray=\u503c\u985e\u578b {0} \u4e0d\u662f JsonNumber\u3002
numberIncompatibleValueTypeObject=\u503c\u985e\u578b {0}\uff08\u4f4d\u65bc\u7d22\u5f15\u9375 {1}\uff09\u4e0d\u662f\u4e00\u500b JsonNumber\u3002
