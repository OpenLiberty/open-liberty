# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default localized string information
# Localized for Locale en_US

#CMVCPATHNAME javax.el-3.0/resources/javax/el/LocalStrings.properties
#ISMESSAGEFILE TRUE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_VAR

propertyNotFound=Vlastnost ''{1}'' nebyla nalezena na typu {0}
propertyNotReadable=Vlastnost ''{1}'' nebyla \u010diteln\u00e1 na typu {0}
propertyNotWritable=Vlastnost ''{1}'' nebyla schopn\u00e1 z\u00e1pisu na typu {0}
propertyReadError=Chyba p\u0159i \u010dten\u00ed ''{1}'' na typu {0}
propertyWriteError=Chyba p\u0159i z\u00e1pisu ''{1}'' na typu {0}
objectNotAssignable=Nelze p\u0159idat objekt typu [{0}] do pole objekt\u016f typu [{1}].

beanNameELResolver.beanReadOnly=N\u00e1zev objektu typu bean [{0}] jen pro \u010dten\u00ed
elProcessor.defineFunctionInvalidClass=T\u0159\u00edda [{0}] nen\u00ed ve\u0159ejn\u00e1
elProcessor.defineFunctionInvalidMethod=Metoda [{0}] na t\u0159\u00edd\u011b [{1}] nen\u00ed ve\u0159ejnou statickou metodou
elProcessor.defineFunctionInvalidParameterList=Seznam parametr\u016f [{0}] pro metodu [{1}] na t\u0159\u00edd\u011b [{2}] nen\u00ed platn\u00fd
elProcessor.defineFunctionInvalidParameterTypeName=Typ parametru [{0}] pro metodu [{1}] na t\u0159\u00edd\u011b [{2}] nen\u00ed platn\u00fd
elProcessor.defineFunctionNoMethod=Ve\u0159ejnou statickou metodu [{0}] pro t\u0159\u00eddu [{1}] nelze nal\u00e9zt
elProcessor.defineFunctionNullParams=Nejm\u00e9n\u011b jeden ze vstupn\u00edch parametr\u016f byl null

importHandler.ambiguousImport=T\u0159\u00eddu [{0}] nelze importovat, proto\u017ee je v konfliktu s [{1}], kter\u00fd ji\u017e byl importov\u00e1n
importHandler.ambiguousStaticImport=Statick\u00fd import [{0}] nelze zpracovat, proto\u017ee je v konfliktu s [{1}], kter\u00fd ji\u017e byl importov\u00e1n
importHandler.classNotFound=T\u0159\u00eddu [{0}] nelze importovat, proto\u017ee ji nelze nal\u00e9zt
importHandler.invalidClass=T\u0159\u00edda [{0}] mus\u00ed b\u00fdt ve\u0159ejn\u00e1, neabstraktn\u00ed a nesm\u00ed b\u00fdt rozhran\u00edm
importHandler.invalidClassName=N\u00e1zev t\u0159\u00eddy pro import [{0}] mus\u00ed obsahovat bal\u00edk
importHandler.invalidClassNameForStatic=T\u0159\u00edda [{0}] ur\u010den\u00e1 pro statick\u00fd import [{1}] nen\u00ed platn\u00e1
importHandler.invalidPackage=Bal\u00edk [{0}] nelze nal\u00e9zt
importHandler.invalidStaticName=N\u00e1zev statick\u00e9 metody nebo pole pro import [{0}] mus\u00ed obsahovat t\u0159\u00eddu
importHandler.staticNotFound=Statick\u00fd import [{0}] nebyl nalezen ve t\u0159\u00edd\u011b [{1}] pro import [{2}]

lambdaExpression.tooFewArgs=Pouze [{0}] argument\u016f bylo poskytnuto pro v\u00fdraz lambda, kter\u00fd vy\u017eaduje alespo\u0148 [{1}]

staticFieldELResolver.methodNotFound=Nebyla nalezena \u017e\u00e1dn\u00e1 odpov\u00eddaj\u00edc\u00ed ve\u0159ejn\u00e1 statick\u00e1 metoda s n\u00e1zvem [{0}] ve t\u0159\u00edd\u011b [{1}]
staticFieldELResolver.notFound=Nebylo nalezeno \u017e\u00e1dn\u00e9 ve\u0159ejn\u00e9 statick\u00e9 pole s n\u00e1zvem [{0}] ve t\u0159\u00edd\u011b [{1}]
staticFieldELResolver.notWriteable=Z\u00e1pis do statick\u00fdch pol\u00ed (v tomto p\u0159\u00edpad\u011b pole [{0}] pro t\u0159\u00eddu [{1}]) nen\u00ed povolen

util.method.notfound=Metoda nebyla nalezena: {0}.{1}({2})
util.method.ambiguous=Nelze naj\u00edt jednozna\u010dnou metodu: {0}.{1}({2})
