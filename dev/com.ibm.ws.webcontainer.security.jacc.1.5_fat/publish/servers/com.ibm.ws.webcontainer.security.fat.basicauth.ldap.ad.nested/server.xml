<!--
    Copyright (c) 2020 IBM Corporation and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
   
    Contributors:
        IBM Corporation - initial API and implementation
 -->
<server description="com.ibm.ws.webcontainer.security.fat.basicauth.ldap.ad.nested">

	<featureManager>
		<feature>appSecurity-2.0</feature>
		<feature>ldapRegistry-3.0</feature>
		<feature>jsp-2.2</feature>
		<feature>servlet-3.1</feature>
		<feature>usr:jaccTestProvider-1.0</feature>
	</featureManager>

	<jaccTestProvider roleMappingFile="${server.config.dir}/resources/security/roleMapping.props" />
	 <webContainer deferServletLoad="false"/>

	<ldapRegistry id="LDAP" realm="SampleLdapADRealm" host="${ldap.server.2.name}" port="${ldap.server.2.port}" ignoreCase="true"  baseDN="cn=users,dc=secfvt2,dc=austin,dc=ibm,dc=com"
		bindDN="cn=testuser,cn=users,dc=secfvt2,dc=austin,dc=ibm,dc=com"
		bindPassword="testuserpwd"
		ldapType="Microsoft Active Directory"
		searchTimeout="8m"
		recursiveSearch="true"
		activedFilters="myactivedfilters">
		<failoverServers name="failoverLdapServers">
		   <server host="${ldap.server.6.name}" port="${ldap.server.6.port}"/>
        </failoverServers>		
	</ldapRegistry>

	<activedLdapFilterProperties id="myactivedfilters"
			userFilter="(&amp;(sAMAccountName=%v)(objectcategory=user))"
			groupFilter="(&amp;(cn=%v)(objectcategory=group))"
			userIdMap="user:sAMAccountName"
			groupIdMap="*:cn"
			groupMemberIdMap="memberof:member">
	</activedLdapFilterProperties>		

	<application type="war" id="basicauth" name="basicauth" location="${server.config.dir}/apps/basicauth.war">
	</application>

	<include location="../fatTestPorts.xml" />
	<javaPermission className="javax.security.auth.AuthPermission" name="wssecurity.getCallerSubject"/>
	<javaPermission className="javax.security.auth.AuthPermission" name="wssecurity.getRunAsSubject"/>
    <javaPermission className="javax.security.auth.PrivateCredentialPermission" signedBy="com.ibm.ws.security.token.internal.SingleSignonTokenImpl" principalType="com.ibm.ws.security.authentication.principals.WSPrincipal" principalName="*" actions="read"/>

</server>
