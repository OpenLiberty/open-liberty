###############################################################################
# Copyright (c) 2011, 2022 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
#
#CMVCPATHNAME com.ibm.ws.jca/resources/OSGI-INF/l10n/metatype.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#

# ibmui groups

Advanced.name=Advanced Properties
Advanced.description=Additional properties for more advanced usage.

# Connection Manager

connectionManager=Connection Manager
connectionManager.desc=Connection Manager configuration

agedTimeout=Aged timeout
agedTimeout.desc=Amount of time before a connection can be discarded by pool maintenance. A value of -1 disables this timeout. A value of 0 discards every connection, which disables connection pooling.

abortLongRunningInuseConnections=Abort long running in use connections
abortLongRunningInuseConnections.desc=The amount of time before an in-use connection can be aborted by pool maintenance.  A value of -1 or 0 disables this timeout. Aborting connections that are in use can result in unexpected behaviors,  The recommended value is 20 minutes or more depending on the applications normal transaction times.  If transaction times are high, 10 minutes or more, then double your longest running transaction time for this value.

connTimeout=Connection timeout
connTimeout.desc=Amount of time after which a connection request times out. A value of -1 disables this timeout, meaning infinite wait. A value of 0 is immediate, meaning no wait.

maxIdleTime=Maximum idle time
maxIdleTime.desc=Amount of time a connection can be unused or idle until it can be discarded during pool maintenance, if doing so does not reduce the pool below the minimum size. A value of -1 disables this timeout.

maxPoolSize=Maximum connections
maxPoolSize.desc=Maximum number of physical connections for a pool. A value of 0 means unlimited. The optimal setting depends on the application characteristics. For an application in which every thread obtains a connection to the database, you might start with a 1:1 mapping to the `coreThreads` attribute.

minPoolSize=Minimum connections
minPoolSize.desc=Minimum number of physical connections to maintain in the pool. The pool is not pre-populated. Aged timeout can override the minimum.

purgePolicy=Purge policy
purgePolicy.desc=Specifies which connections to destroy when a stale connection is detected in a pool. This setting can provide a major improvement on large multi-core (8+) machines by reserving the specified number of database connections for each thread.
Using thread local storage for connections can increase performance for applications on multi-threaded systems. When you set numConnectionsPerThreadLocal to 1 or more, these connections per thread are stored in thread local storage. When you use numConnectionsPerThreadLocal, consider two other values:
The number of application threads
The connection pool maximum connections
For best performance, if you have n applications threads, you must set the maximum pool connections to at least n times the value of the numConnectionsPerThreadLocal attribute and you must use the same credentials for all connection requests. For example, if you use 20 application threads, set the maximum pool connections to 20 or more; If you set the value of numConnectionPerThreadLocal attribute as 2 and there are 20 application threads, set the maximum pool connection to 40 or more.
purgePolicy.EntirePool.desc=When a stale connection is detected, all connections in the pool are marked stale, and when no longer in use, are closed.
purgePolicy.FailingConnectionOnly.desc=When a stale connection is detected, only the connection which was found to be bad is closed.
purgePolicy.ValidateAllConnections.desc=When a stale connection is detected, connections are tested and those found to be bad are closed.

reapTime=Reap time
reapTime.desc=Amount of time between runs of the pool maintenance thread. A value of -1 disables pool maintenance.

# Connection Manager advanced properties

autoCloseCon=Automatically close connections
autoCloseCon.desc=Attempts to clean up after applications that leave connections open after the end of a servlet request, enterprise bean instance, managed executor task, contextual task, or managed completion stage. When an unsharable connection is obtained within one of these application artifacts and remains open when it ends, the container attempts to close the connection handle. The container may also close sharable connections that do not support DissociatableManagedConnection. Applications should always follow the programming model defined by the specification and close connections at the appropriate times rather than relying on the container, even when this option is enabled.

maxConPerThd=Maximum open connections per thread
maxConPerThd.desc=Limits the number of open connections on each thread.

numConPerThd=Number of cached connections per thread
numConPerThd.desc=Caches the specified number of connections for each thread.

enableSharing=Enable connection sharing for direct lookups
enableSharing.desc=If set to true, connections are shared. If set to false, connections are unshared.

enableContainerAuth=Enable container authentication on direct lookups
enableContainerAuth.desc=If set to true, connections use container authentication. If set to false, connections use application authentication.

