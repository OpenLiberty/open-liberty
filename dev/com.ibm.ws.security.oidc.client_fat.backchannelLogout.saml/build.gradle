/*******************************************************************************
 * Copyright (c) 2022 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-2.0/
 * 
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
apply from: '../com.ibm.ws.security.fat.common.backchannelLogout/CommonBackchannelLogout.gradle'
apply from: '../com.ibm.ws.security.saml.sso_fat.common/SAMLCommon.gradle'

/* copySamlFat_sp_server will populate files needed by the op to interact with the SAML IDP */
addRequiredLibraries.dependsOn copyApache, copyShibbolethIdpConfig, copyShibbolethServer, copySamlFat_sp_server, copyGenericServer, copyGenericClient

/* the tasks specified above will create the normal op and rp, plus, will popluate the op with needed saml files and create a shibboleth instance
 *  now, we need to add the mongodb specific files to that server */

/* copy additional files needed for the mongo server (the base op server files have already been copied) */ 
assemble.dependsOn ':com.ibm.ws.security.oauth_test.servlets:assemble' 
autoFVT.doLast {

  def servers = [
    'com.ibm.ws.security.backchannelLogout_fat.op.saml'
  ]
  servers.each { server ->
    copy { 
     from project(':com.ibm.ws.security.saml.sso_fat.common').file('securityKeys')
     into new File(autoFvtDir, 'publish/servers/' + server + '/')
     include 'samlKey.jks'
    }
    copy {
      from new File(projectDir, 'publish/files/serversettings/localhost')
      into new File(autoFvtDir, 'publish/servers/' + server + '/imports/localhost')
      include '*.xml.orig'
    }  
    
    /* The order of populating the op is not to be trusted - make sure that we end up with the correct instance of the ssl default config */
    println "Overwrite goodSSLSettings.xml" 
    copy { 
      from project(':com.ibm.ws.security.fat.common.backchannelLogout').file('publish/files/serversettings/')
      into new File(autoFvtDir, 'publish/servers/' + server + '/imports')
      include 'goodSSLSettings.xml'
    }
    
  }

}