#*******************************************************************************
# Copyright (c) 2023 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License 2.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-2.0/
# 
# SPDX-License-Identifier: EPL-2.0
#*******************************************************************************

-include= ~../cnf/resources/bnd/bundle.props

bVersion=1.0

openTelemetryVersion=1.29.0
alphaOpenTelemetryVersion=1.29.0.alpha

src: src, resources

Bundle-Name: io.openliberty.io.opentelemetry.1.1
Bundle-SymbolicName: io.openliberty.io.opentelemetry.1.1; singleton:=true
Bundle-Description: MicroProfile Telemetry Internal packages

javac.source: 11
javac.target: 11

Import-Package: \
  javax.net,\
  javax.net.ssl,\
  okhttp3,\
  okio,\
  zipkin2,\
  zipkin2.codec,\
  zipkin2.internal,\
  zipkin2.reporter,\
  zipkin2.reporter.okhttp3,\
  jakarta.interceptor,\
  jakarta.enterprise.util,\
  com.ibm.wsspi.classloading,\
  org.osgi.framework,\
  com.ibm.websphere.ras,\
  com.ibm.websphere.ras.annotation,\
  io.openliberty.microprofile.telemetry.common.resources

Export-Package: \
  io.opentelemetry.extension.trace.propagation;version=${openTelemetryVersion};thread-context=true,\
  io.opentelemetry.exporter.otlp.internal;version=${openTelemetryVersion};thread-context=true,\
  io.opentelemetry.exporter.jaeger.internal;version=${openTelemetryVersion};thread-context=true,\
  io.opentelemetry.exporter.internal.grpc;version=${openTelemetryVersion};thread-context=true,\
  io.opentelemetry.exporter.logging.internal;version=${openTelemetryVersion};thread-context=true,\
  io.opentelemetry.exporter.sender.okhttp.internal;version=${openTelemetryVersion};thread-context=true,\
  io.opentelemetry.exporter.zipkin.internal;version=${openTelemetryVersion};thread-context=true,\
  io.opentelemetry.sdk.autoconfigure.internal;version=${openTelemetryVersion};thread-context=true,\
  io.opentelemetry.*;version=${openTelemetryVersion}

Include-Resource: \
 META-INF=resources/META-INF

app-resources= \
  META-INF/services/io.opentelemetry.sdk.autoconfigure.spi.ConfigurablePropagatorProvider |\
  META-INF/services/io.opentelemetry.sdk.autoconfigure.spi.traces.ConfigurableSpanExporterProvider |\
  META-INF/services/io.opentelemetry.exporter.internal.grpc.GrpcSenderProvider |\
  META-INF/services/io.opentelemetry.exporter.internal.http.HttpSenderProvider |\
  META-INF/services/io.opentelemetry.sdk.autoconfigure.spi.ResourceProvider

Service-Component: \
    io.openliberty.io.opentelemetry.ResourceProvider; \
        implementation:=com.ibm.wsspi.classloading.ResourceProvider; \
        provide:=com.ibm.wsspi.classloading.ResourceProvider; \
        configuration-policy:=optional; \
        properties:="resources=${app-resources}"

Require-Capability: osgi.ee; filter:="(&(osgi.ee=JavaSE)(version=11))"

-buildpath: \
	io.openliberty.com.squareup.okhttp;version=latest,\
	io.openliberty.com.squareup.okio-jvm;version=latest,\
	io.openliberty.io.zipkin.zipkin2;version=latest,\
	io.openliberty.jakarta.interceptor.2.1;version=latest,\
	io.openliberty.jakarta.cdi.4.0;version=latest,\
	io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations-support;version=${alphaOpenTelemetryVersion};strategy=exact,\
	io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations;version=${openTelemetryVersion};strategy=exact,\
	io.opentelemetry.instrumentation:opentelemetry-instrumentation-api;version=${openTelemetryVersion};strategy=exact,\
	io.opentelemetry.instrumentation:opentelemetry-instrumentation-api-semconv;version=${alphaOpenTelemetryVersion};strategy=exact,\
	io.opentelemetry:opentelemetry-api;version=${openTelemetryVersion};strategy=exact,\
	io.opentelemetry:opentelemetry-api-events;version=${alphaOpenTelemetryVersion};strategy=exact,\
	io.opentelemetry:opentelemetry-context;version=${openTelemetryVersion};strategy=exact,\
	io.opentelemetry:opentelemetry-exporter-jaeger;version=${openTelemetryVersion};strategy=exact,\
	io.opentelemetry:opentelemetry-exporter-logging;version=${openTelemetryVersion};strategy=exact,\
	io.opentelemetry:opentelemetry-exporter-otlp-common;version=${openTelemetryVersion};strategy=exact,\
	io.opentelemetry:opentelemetry-exporter-otlp;version=${openTelemetryVersion};strategy=exact,\
	io.opentelemetry:opentelemetry-exporter-common;version=${openTelemetryVersion};strategy=exact,\
	io.opentelemetry:opentelemetry-exporter-sender-okhttp;version=${openTelemetryVersion};strategy=exact,\
	io.opentelemetry:opentelemetry-exporter-zipkin;version=${openTelemetryVersion};strategy=exact,\
	io.opentelemetry:opentelemetry-extension-trace-propagators;version=${openTelemetryVersion};strategy=exact,\
	io.opentelemetry:opentelemetry-sdk;version=${openTelemetryVersion};strategy=exact,\
	io.opentelemetry:opentelemetry-sdk-common;version=${openTelemetryVersion};strategy=exact,\
	io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi;version=${openTelemetryVersion};strategy=exact,\
	io.opentelemetry:opentelemetry-sdk-extension-autoconfigure;version=${openTelemetryVersion};strategy=exact,\
	io.opentelemetry:opentelemetry-sdk-logs;version=${openTelemetryVersion};strategy=exact,\
	io.opentelemetry:opentelemetry-sdk-metrics;version=${openTelemetryVersion};strategy=exact,\
	io.opentelemetry:opentelemetry-sdk-trace;version=${openTelemetryVersion};strategy=exact,\
	io.opentelemetry:opentelemetry-semconv;version=${alphaOpenTelemetryVersion};strategy=exact,\
	com.ibm.ws.classloading;version=latest,\
	org.eclipse.osgi;version=latest,\
	com.ibm.websphere.appserver.spi.logging;version=latest,\
	com.ibm.ws.org.osgi.annotation.versioning;version=latest,\
	io.openliberty.microprofile.telemetry.common;version=latest

WS-TraceGroup: TELEMETRY