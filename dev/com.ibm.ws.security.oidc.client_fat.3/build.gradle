/*******************************************************************************
 * Copyright (c) 2023 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-2.0/
 * 
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
apply from: '../com.ibm.ws.security.fat.common.SSO.clientTests/CommonTests.gradle'

addRequiredLibraries.dependsOn copyPKCEOPServer, copyPrivateKeyJwtOPServer, copyPKCEAndPrivateKeyJwtOPServer

repositories {
  if (isUsingArtifactory) {
    maven {
      credentials {
        username userProps.getProperty("artifactory.download.user")
        password userProps.getProperty("artifactory.download.token")
      }
      url ("https://" + gradle.userProps.getProperty("artifactory.download.server") + "/artifactory/wasliberty-maven-remote")
    }
  } else {
    mavenCentral()
  }
}

dependencies {
   requiredLibs project(':com.ibm.ws.security.fat.common'),
                project(':com.ibm.ws.security.fat.common.jwt'),
                project(':com.ibm.ws.security.fat.common.SSO.clientTests'),
                project(':com.ibm.ws.security.oauth.oidc_fat.common'),
                project(':com.ibm.ws.com.meterware.httpunit.1.7'),
                'jtidy:jtidy:4aug2000r7-dev',
                'rhino:js:1.5R4.1' // See NOTE below

  // NOTE: More current js versions have a bug that prevents multiple redirects - this causes
  // a couple of our tests to fail.

  /*
   * Previously we had an uber jar named htmlunit-2.20-OSGi.jar. It appears to have contained all of
   * the runtime dependencies for htmlunit. Instead of generating an uber jar, we'll add the dependencies
   * here. The uber jar also was configured to be an OSGi bundle, but it is not necessary for this bucket.
   */ 
  requiredLibs project(':com.ibm.ws.org.apache.commons.io'),        // htmlunit-2.44.0 --> 2.8.0
               project(':com.ibm.ws.org.apache.commons.lang3'),     // htmlunit-2.44.0 --> 3.11
               'net.sourceforge.htmlunit:htmlunit-core-js:2.44.0',
               'net.sourceforge.htmlunit:htmlunit-cssparser:1.6.0',
               'net.sourceforge.htmlunit:neko-htmlunit:2.44.0',
               'org.apache.httpcomponents:httpmime:4.5.12',
               'org.brotli:dec:0.1.2',
               'xalan:xalan:2.7.2',
               project(':io.openliberty.org.apache.xercesImpl'),
               'httpunit:httpunit:1.7',
               'xml-apis:xml-apis:1.4.01'
}

addRequiredLibraries.dependsOn addJakartaTransformer


/******************************************************************
 ******************************************************************
 **
 ** Copy feature bundles and applications to specific servers.
 **
 ******************************************************************
 ******************************************************************/
autoFVT.dependsOn ':com.ibm.ws.security.fat.common:assemble'
autoFVT.dependsOn ':com.ibm.ws.security.fat.common.jwt:assemble'
autoFVT.dependsOn ':com.ibm.ws.security.fat.common.SSO.clientTests:assemble'
autoFVT.dependsOn ':com.ibm.ws.security.oauth.oidc_fat.common:assemble'
autoFVT.doLast {

  /*
   * Copy common artifacts to test servers.
   */
  def servers = [
    'com.ibm.ws.security.openidconnect.client-1.0_fat.rp.pkce',
    'com.ibm.ws.security.openidconnect.client-1.0_fat.rp.privateKeyJwt',
    'com.ibm.ws.security.openidconnect.client-1.0_fat.rp.pkceAndPrivateKeyJwt'
  ]
  servers.each { server ->
    copy { 
      from new File(projectDir, 'publish/files/serversettings/')
      into new File(autoFvtDir, 'publish/servers/' + server + '/imports')
      include '*.xml'
    }

    copy { 
      from new File(project(':com.ibm.ws.security.fat.common').buildDir, 'test-application/testmarker.war')
      into new File(autoFvtDir, 'publish/servers/' + server + '/dropins')
    }

    /* copy shared key/trust stores from the common security fat project */
    copy { 
     from project(':com.ibm.ws.security.fat.common').file('publish/shared/securityKeys')
     into new File(autoFvtDir, 'publish/servers/' + server + '/')
     include 'allAlgKeyStore.p12'
     include 'allAlgTrustStore.p12'
    }
    
    copy { 
      from new File(project(':com.ibm.ws.security.fat.common').projectDir, 'publish/shared/config/')
      into new File(autoFvtDir, 'publish/servers/' + server + '/imports')
      include 'allAlgSSLSettings.xml'
    }
    
    copy {
      from new File(project(':com.ibm.ws.security.oauth.oidc_fat.common').projectDir, 'publish/files/serversettings/')
      into new File(autoFvtDir, 'publish/servers/' + server + '/imports')
      include 'oauthRoles_1.xml'
      include 'formlogin_1.xml'
      include 'op_fatTestPorts.xml'
    }  

    copy {
      from new File(project(':com.ibm.ws.security.oauth.oidc_fat.common').buildDir, 'test-application/formlogin.zip')
      into new File(autoFvtDir, 'publish/servers/' + server + '/test-apps')
      rename 'formlogin.zip', 'formlogin.war'
    }
  }

  servers = [
    'com.ibm.ws.security.openidconnect.client-1.0_fat.rp.privateKeyJwt',
    'com.ibm.ws.security.openidconnect.client-1.0_fat.rp.pkceAndPrivateKeyJwt'
  ]
  servers.each { server ->
    copy { 
      from new File(project(':com.ibm.ws.security.fat.common.SSO.clientTests').buildDir, 'test-application/privateKeyJwtTokenEndpoint.war')
      into new File(autoFvtDir, 'publish/servers/' + server + '/test-apps')
    }
    copy {
      from new File(project(':com.ibm.ws.security.fat.common.SSO.clientTests').projectDir, 'publish/shared/config/')
      into new File(autoFvtDir, 'publish/servers/' + server + '/imports')
      include 'privateKeyJwtTokenEndpointApp.xml'
      include 'privateKeyAllAlgSSLSettings.xml'
    }  
 
     /* copy shared key/trust stores from the common security fat project */
    copy {
     from project(':com.ibm.ws.security.fat.common.SSO.clientTests').file('publish/shared/securityKeys')
     into new File(autoFvtDir, 'publish/servers/' + server + '/')
     include 'altAllAlgKeyStore.p12'
     include 'altAllAlgTrustStore.p12'
     include 'diffTrustStore.p12'
    }           
                 
  }
}
