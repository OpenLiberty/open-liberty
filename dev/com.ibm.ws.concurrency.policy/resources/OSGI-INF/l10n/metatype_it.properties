###############################################################################
# Copyright (c) 2017 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
# -------------------------------------------------------------------------------------------------
#CMVCPATHNAME com.ibm.ws.concurrency.policy/resources/OSGI-INF/l10n/metatype.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE

# configuration elements

concurrencyPolicy=Politica di simultaneit\u00e0
concurrencyPolicy.desc=Una serie di comportamenti e vincoli che vengono applicati alle attivit\u00e0 che sono in grado di esecuzione asincrona, come simultaneit\u00e0 massima e dimensione massima della coda.

# attributes

expedite=Accelera
expedite.desc=Specifica un numero minimo di destinazione di attivit\u00e0 da eseguire contemporaneamente accelerando le richieste al pool di thread globale. Il numero effettivo di attivit\u00e0 che vengono eseguite simultaneamente potrebbe essere inferiore al numero di destinazione che si definisce. Se il valore di accelerazione viene aggiornato mentre \u00e8 in uso, l'aggiornamento va in vigore gradualmente, mano amano che si completano le richieste accelerate e non.

max=Simultaneit\u00e0 massima
max.desc=Specifica il numero massimo di attivit\u00e0 che possono essere eseguite contemporaneamente. Il valore predefinito \u00e8 Integer.MAX_VALUE. La simultaneit\u00e0 massima pu\u00f2 essere aggiornata mentre le attivit\u00e0 sono in corso. Se la simultaneit\u00e0 massima viene ridotta al di sotto del numero di attivit\u00e0 in esecuzione simultaneamente, l'aggiornamento va in vigore gradualmente, mano a mano che si completano le attivit\u00e0 in corso, invece di annullarle.

maxPolicy=Politica massima
maxPolicy.desc=Indica se applicare la simultaneit\u00e0 massima in modo rigido o meno, per le attivit\u00e0 eseguite sul thread del mittente attivit\u00e0. Le attivit\u00e0 possono essere eseguite sul thread del mittente attivit\u00e0 quando si utilizza il metodo invokeAll illimitato o, se si richiama solo una attivit\u00e0, il metodo invokeAny illimitato. Se \u00e8 configurato l'attributo Esegui se la coda \u00e8 piena, \u00e8 anche possibile per le attivit\u00e0 eseguire il thread del mittente attivit\u00e0 quando si utilizzano i metodi di esecuzione e inoltro. In tutti questi casi, questo attributo determina se l'esecuzione o meno sul thread del mittente conta rispetto alla simultaneit\u00e0 massima.
maxPolicy.loose.desc=Simultaneit\u00e0 massima applicata debolmente. Le attivit\u00e0 possono essere eseguite sul thread del mittente attivit\u00e0 senza essere considerate rispetto alla simultaneit\u00e0 massima.
maxPolicy.strict.desc=Simultaneit\u00e0 massima applicata rigidamente. Le attivit\u00e0 eseguite sul thread del mittente attivit\u00e0 contano rispetto alla simultaneit\u00e0 massima. Questa politica non consente di eseguire le attivit\u00e0 sul thread del mittente attivit\u00e0 quando si \u00e8 gi\u00e0 alla simultaneit\u00e0 massima.

maxQueueSize=Dimensione massima coda
maxQueueSize.desc=Specifica il numero massimo di attivit\u00e0 che possono essere nella coda in attesa di esecuzione. Mano a mano che le attivit\u00e0 sono avviate, annullate o interrotte, vengono rimosse dalla coda. Quando la coda \u00e8 a capacit\u00e0 e viene inoltrata un'altra attivit\u00e0, il comportamento viene determinato dall'attesa massima degli attributi Accoda e Esegui se la coda \u00e8 piena. Per garantire che un numero specifico di attivit\u00e0 possa essere accodato in un breve intervallo di tempo, utilizzare una dimensione massima della coda che sia almeno grande quanto quella quantit\u00e0. Il valore predefinito per la dimensione massima della coda \u00e8 Integer.MAX_VALUE. La dimensione coda massima pu\u00f2 essere aggiornata mentre le attivit\u00e0 sono in corso o in coda per l'esecuzione. Se la dimensione coda massima viene ridotta al di sotto del numero corrente di attivit\u00e0 accodate, l'aggiornamento va in vigore gradualmente, invece di annullare automaticamente le attivit\u00e0 accodate in eccesso.

maxWaitForEnqueue=Attesa massima per accodamento
maxWaitForEnqueue.desc=Specifica la durata massima di tempo di attesa per l'accodamento di una attivit\u00e0. Se non \u00e8 possibile accodare l'attivit\u00e0 entro questo intervallo, l'inoltro dell'attivit\u00e0 \u00e8 soggetto alla politica Esegui se la coda \u00e8 piena. Quando l'attesa massima per l'accodamento \u00e8 aggiornata, l'aggiornamento si applica solo alle attivit\u00e0 inoltrata dopo quel punto. Le attivit\u00e0 inoltrate gi\u00e0 in attesa di una posizione nella coda continueranno ad attendere per il valore precedentemente configurato.

runIfQueueFull=Esegui se la coda \u00e8 piena
runIfQueueFull.desc=Si applica quando si utilizzano i metodi di esecuzione o inoltro. Indica se eseguire o meno l'attivit\u00e0 sul thread del mittente quando la coda \u00e8 piena e l'attesa massima per l'accodamento \u00e8 stata superata. Quando configurato su false, l'inoltro dell'attivit\u00e0 viene rifiutato una volta trascorsa l'attesa massima per l'accodamento invece di essere eseguita sul thread del mittente.

startTimeout=Timeout di avvio
startTimeout.desc=Specifica la quantit\u00e0 massima di tempo che pu\u00f2 passare tra l'inoltro dell'attivit\u00e0 e l'avvio. Per impostazione predefinita, le attivit\u00e0 non scadono. Se sono abilitati sia l'attesa massima di accodamento che il timeout di avvio, configurare il timeout di avvio in modo che sia maggiore dell'attesa massima di accodamento. Quando il timeout di avvio viene aggiornato mentre in uso, il nuovo valore di timeout di avvio si applica alle attivit\u00e0 inoltrate dopo l'aggiornamento.
