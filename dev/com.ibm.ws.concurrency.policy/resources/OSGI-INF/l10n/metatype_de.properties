###############################################################################
# Copyright (c) 2017 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
# -------------------------------------------------------------------------------------------------
#CMVCPATHNAME com.ibm.ws.concurrency.policy/resources/OSGI-INF/l10n/metatype.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE

# configuration elements

concurrencyPolicy=Richtlinie f\u00fcr gemeinsamen Zugriff
concurrencyPolicy.desc=Eine Gruppe von Verhaltensweisen und Vorgaben, die auf Tasks angewendet werden, die asynchron ausgef\u00fchrt werden k\u00f6nnen, wie z. B. die maximale Anzahl gemeinsamer Zugriffe und die maximale Warteschlangengr\u00f6\u00dfe. 
# attributes

expedite=Beschleunigen
expedite.desc=Gibt eine minimale Sollanzahl von Tasks an, die gleichzeitig ausgef\u00fchrt werden sollen, indem Anforderungen umgehend an den globalen Thread-Pool \u00fcbergeben werden. Die tats\u00e4chliche Anzahl der Tasks, die gleichzeitig ausgef\u00fchrt werden, kann kleiner sein als der von Ihnen definierte Sollwert. Wenn der Wert f\u00fcr die Beschleunigung w\u00e4hrend der Verwendung aktualisiert wird, tritt die Aktualisierung schrittweise in Kraft, wenn vorherige beschleunigte und nicht beschleunigte Anforderungen abgeschlossen werden.

max=Maximale gemeinsame Zugriffe
max.desc=Gibt die maximale Anzahl an Tasks an, die gleichzeitig ausgef\u00fchrt werden k\u00f6nnen. Der Standardwert ist Integer.MAX_VALUE. Die maximale Anzahl gemeinsamer Zugriffe kann aktualisiert werden, w\u00e4hrend die Tasks in Bearbeitung sind. Wenn f\u00fcr die maximale Anzahl gemeinsamer Zugriffe ein Wert angegeben wird, der die Anzahl gleichzeitig ausgef\u00fchrter Tasks unterschreitet, wird die Aktualisierung schrittweise wirksam, wenn die in Bearbeitung befindlichen Tasks abgeschlossen werden.

maxPolicy=Richtlinie f\u00fcr maximale gemeinsame Zugriffe
maxPolicy.desc=Gibt an, ob die maximale Anzahl gleichzeitiger Zugriffe f\u00fcr Tasks, die im Thread des Tasksenders flexibel oder strikt umgesetzt werden soll. Tasks k\u00f6nnen im Thread des Tasksenders ausgef\u00fchrt werden, wenn die nicht zeitlich festgelegte Methode invokeAll verwendet wird oder wenn nur eine einzige Task, die nicht zeitlich festgelegte Methode invokeAny aufgerufen wird. Wenn das Attribut Bei voller Warteschlange ausf\u00fchren konfiguriert ist, k\u00f6nnen Tasks auch dann im Thread des Tasksenders ausgef\u00fchrt werden, wenn die Methoden execute und submit verwendet werden. In allen genannten F\u00e4llen bestimmt dieses Attribut, ob die Ausf\u00fchrung im Thread des Senders in der maximalen Anzahl gleichzeitiger Zugriffe ber\u00fccksichtigt wird oder nicht.
maxPolicy.loose.desc=Die maximale Anzahl gemeinsamer Zugriffe wird flexibel durchgesetzt. Tasks k\u00f6nnen im Thread des Tasksenders ausgef\u00fchrt werden, ohne dass sie in der maximalen Anzahl gleichzeitiger Zugriffe ber\u00fccksichtigt werden.
maxPolicy.strict.desc=Die maximale Anzahl gemeinsamer Zugriffe wird strikt durchgesetzt. Die im Thread des Tasksenders ausgef\u00fchrten Tasks werden in der maximalen Anzahl gleichzeitiger Zugriffe ber\u00fccksichtigt. Diese Richtlinie l\u00e4sst die Ausf\u00fchrung von Tasks im Thread des Tasksenders nicht zu, wenn die maximale Anzahl gleichzeitiger Zugriffe bereits erreicht ist.

maxQueueSize=Maximale Warteschlangengr\u00f6\u00dfe
maxQueueSize.desc=Gibt die maximale Anzahl an Tasks an, die zur Ausf\u00fchrung in die Warteschlange eingereiht werden k\u00f6nnen. Wenn Tasks gestartet oder abgebrochen werden, werden sie aus der Warteschlange entfernt. Wenn die Warteschlangenkapazit\u00e4t ersch\u00f6pft ist und eine weitere Task \u00fcbergeben wird, richtet sich das Verhalten nach den Einstellungen f\u00fcr die Attribute Maximale Wartezeit f\u00fcr Einreihen in die Warteschlange und Bei voller Warteschlange ausf\u00fchren. Um sicherzustellen, dass eine bestimmte Anzahl von Tasks innerhalb kurzer Zeit in die Warteschlange eingereiht werden k\u00f6nnen, verwenden Sie einen Wert f\u00fcr die maximale Warteschlangengr\u00f6\u00dfe, der mindestens so hoch ist wie die gew\u00fcnschte Anzahl. Der Standardwert f\u00fcr die maximale Warteschlangengr\u00f6\u00dfe ist Integer.MAX_VALUE. Die maximale Warteschlangengr\u00f6\u00dfe kann aktualisiert werden, w\u00e4hrend Tasks in Bearbeitung sind oder zur Ausf\u00fchrung in die Warteschlange eingereiht sind. Wenn die maximale Warteschlangengr\u00f6\u00dfe unter die aktuelle Anzahl der Tasks in der Warteschlange reduziert wird, tritt die Aktualisierung schrittweise in Kraft, anstatt die \u00fcbersch\u00fcssigen Tasks in der Warteschlange automatisch abzubrechen.

maxWaitForEnqueue=Maximale Wartezeit f\u00fcr Einreihen in die Warteschlange
maxWaitForEnqueue.desc=Gibt die maximale Wartezeit f\u00fcr das Einreihen einer Task in die Warteschlange ein. Wenn die Task innerhalb dieses Zeitraums nicht in die Warteschlange eingereiht werden kann, richtet sich die \u00dcbergabe der Task nach der Richtlinie Bei voller Warteschlange ausf\u00fchren. Wenn die maximale Wartezeit f\u00fcr das Einreihen in die Warteschlange aktualisiert wird, gilt die Aktualisierung nur f\u00fcr Tasks, die nach diesem Punkt \u00fcbergeben werden. F\u00fcr Task\u00fcbergaben, die bereits auf eine Position in der Warteschlange warten, gilt weiterhin der zuvor konfigurierte Wert.

runIfQueueFull=Bei voller Warteschlange ausf\u00fchren
runIfQueueFull.desc=Gilt f\u00fcr die Verwendung der Methoden execute und submit. Gibt an, ob die Task im Thread des Senders ausgef\u00fchrt werden soll, wenn die Warteschlange voll ist und die maximale Wartezeit f\u00fcr das Einreihen in die Warteschlange \u00fcberschritten wurde. Wenn diese Option mit false konfiguriert ist, wird die Task\u00fcbergabe nach Ablauf der maximalen Wartezeit f\u00fcr das Einreihen in die Warteschlange zur\u00fcckgewiesen, anstatt die Task im Thread des Senders auszuf\u00fchren.

startTimeout=Startzeitlimit
startTimeout.desc=Gibt den maximalen Zeitraum zwischen Task\u00fcbergabe und Taskstart an. Standardm\u00e4\u00dfig gibt es kein Zeitlimit f\u00fcr die Ausf\u00fchrung von Tasks. Wenn die Option Maximale Wartezeit f\u00fcr Einreihen in die Warteschlange und die Option Startzeitlimit beide aktiviert sind, konfigurieren Sie ein Startzeitlimit, das h\u00f6her ist als die maximale Wartezeit f\u00fcr das Einreihen in die Warteschlange. Wenn das Startzeitlimit w\u00e4hrend der Verwendung aktualisiert wird, gilt der neue Wert f\u00fcr das Startzeitlimit f\u00fcr Tasks, die nach der Aktualisierung \u00fcbergeben werden.
