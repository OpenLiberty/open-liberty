#*******************************************************************************
# Copyright (c) 2017, 2019 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
#*******************************************************************************
-include= ~../cnf/resources/bnd/bundle.props
bVersion=4.0

Bundle-Name: Container service interfaces
Bundle-SymbolicName: com.ibm.ws.container.service
Bundle-Description: This bundle provides service interfaces for use by container helpers to link into container services. Typical use is to provide interfaces under which containers can publish to the SR as a whiteboard ; version=${bVersion}

Include-Resource: \
    OSGI-INF/permissions.perm=../com.ibm.ws.container.service.compat/resources/permissions.perm

# For each exported package, create (in that package) a package-info.java
# file, and place an @version javadoc tag in package-level javadoc. 
# Append ";provide:=true" if this bundle also provides an implementation
# for the exported API.

Export-Package: \
   com.ibm.ejs.j2c, \
   com.ibm.ejs.util, \
   com.ibm.ejs.util.dopriv, \
   com.ibm.jtc.adapter;provide:=true, \
   com.ibm.websphere.csi;-split-package:=merge-last, \
   com.ibm.ws.container.service.annotations; provide:=true, \
   com.ibm.ws.container.service.annotations.internal; provide:=true, \
   com.ibm.ws.container.service.annocache; provide:=true, \
   com.ibm.ws.container.service.annocache.internal; provide:=true, \
   com.ibm.ws.container.service.app.deploy; provide:=true, \
   com.ibm.ws.container.service.app.deploy.extended; provide:=true, \
   com.ibm.ws.container.service.config; provide:=true, \
   com.ibm.ws.container.service.config.extended; provide:=true, \
   com.ibm.ws.container.service.config.internal; provide:=true, \
   com.ibm.ws.container.service.metadata; provide:=true, \
   com.ibm.ws.container.service.metadata.extended; provide:=true, \
   com.ibm.ws.container.service.naming; provide:=false, \
   com.ibm.ws.container.service.security; provide:=true, \
   com.ibm.ws.container.service.state; provide:=true, \
   com.ibm.ws.exception;provide:=true, \
   com.ibm.ws.runtime.metadata, \
   com.ibm.ws.threadContext, \
   com.ibm.ws.util;provide:=true, \
   com.ibm.ws.util.dopriv, \
   com.ibm.wsspi.runtime;provide:=true, \
   com.ibm.ws.xml, \
   com.ibm.ws.URL

Import-Package: \
    !*.internal.*, *

Private-Package: \
    com.ibm.jtc.adapter, \
    com.ibm.ws.container.service.*.internal.*, \
    com.ibm.ws.container.service.resources, \
    com.ibm.ws.runtime

-dsannotations-inherit: true
-dsannotations: \
	com.ibm.ws.container.service.naming.RemoteObjectInstanceFactoryImpl, \
	com.ibm.ws.container.service.annocache.internal.CDIContainerAnnotationsAdapterImpl, \
	com.ibm.ws.container.service.annocache.internal.ContainerAnnotationsAdapterImpl, \
	com.ibm.ws.container.service.annocache.internal.ModuleAnnotationsAdapterImpl, \
	com.ibm.ws.container.service.annocache.internal.WebAnnotationsAdapterImpl

Service-Component: \
   com.ibm.ws.container.service.annotations.ContainerAnnotationsAdapter; \
      implementation:=com.ibm.ws.container.service.annotations.internal.ContainerAnnotationsAdapter; \
      provide:=com.ibm.wsspi.adaptable.module.adapters.ContainerAdapter; \
      annoService=com.ibm.wsspi.anno.service.AnnotationService_Service; \
      configuration-policy:=optional; \
      optional:="annoService"; \
      dynamic:="annoService"; \
      properties:="service.vendor=IBM,toType=com.ibm.ws.container.service.annotations.ContainerAnnotations", \
   com.ibm.ws.container.service.annotations.ModuleAnnotationsAdapter; \
      implementation:=com.ibm.ws.container.service.annotations.internal.ModuleAnnotationsAdapter; \
      provide:=com.ibm.wsspi.adaptable.module.adapters.ContainerAdapter; \
      annoService=com.ibm.wsspi.anno.service.AnnotationService_Service; \
      configuration-policy:=optional; \
      optional:="annoService"; \
      dynamic:="annoService"; \
      properties:="service.vendor=IBM,toType=com.ibm.ws.container.service.annotations.ModuleAnnotations", \
   com.ibm.ws.container.service.annotations.WebAnnotationsAdapter; \
      implementation:=com.ibm.ws.container.service.annotations.internal.WebAnnotationsAdapter; \
      provide:=com.ibm.wsspi.adaptable.module.adapters.ContainerAdapter; \
      annoService=com.ibm.wsspi.anno.service.AnnotationService_Service; \
      configuration-policy:=optional; \
      optional:="annoService"; \
      dynamic:="annoService"; \
      properties:="service.vendor=IBM,toType=com.ibm.ws.container.service.annotations.WebAnnotations", \
   com.ibm.ws.container.service.app.deploy.extended.ApplicationInfoFactory; \
      implementation:=com.ibm.ws.container.service.app.deploy.internal.ApplicationInfoFactoryImpl; \
      provide:=com.ibm.ws.container.service.app.deploy.extended.ApplicationInfoFactory; \
      j2eeNameFactory=com.ibm.websphere.csi.J2EENameFactory; \
      properties:="service.vendor=IBM", \
   com.ibm.ws.container.service.app.deploy.InjectionClassListAdapter; \
      implementation:=com.ibm.ws.container.service.app.deploy.internal.InjectionClassListAdapter; \
      provide:=com.ibm.wsspi.adaptable.module.adapters.ContainerAdapter; \
      injectionClassListProviders=com.ibm.ws.container.service.app.deploy.InjectionClassListProvider; \
      configuration-policy:=ignore; \
      immediate:=true; \
      optional:="injectionClassListProviders"; \
      dynamic:="injectionClassListProviders"; \
      multiple:="injectionClassListProviders"; \
      properties:="service.vendor=IBM,toType=com.ibm.ws.container.service.app.deploy.InjectionClassList", \
   com.ibm.ws.container.service.app.deploy.WebModuleClassesInfoAdapter; \
      implementation:=com.ibm.ws.container.service.app.deploy.internal.WebModuleClassesInfoAdapter; \
      provide:=com.ibm.wsspi.adaptable.module.adapters.ContainerAdapter; \
      configuration-policy:=optional; \
      properties:="service.vendor=IBM,toType=com.ibm.ws.container.service.app.deploy.WebModuleClassesInfo", \
   com.ibm.ws.container.service.config.WebFragmentsInfoAdapter; \
      implementation:=com.ibm.ws.container.service.config.internal.WebFragmentsInfoAdapter; \
      provide:=com.ibm.wsspi.adaptable.module.adapters.ContainerAdapter; \
      version=com.ibm.ws.javaee.version.ServletVersion?;\
      greedy:=version;\
      configuration-policy:=optional; \
      properties:="service.vendor=IBM,toType=com.ibm.ws.container.service.config.WebFragmentsInfo", \
   com.ibm.ws.container.service.metadata.MetaDataService; \
      implementation:=com.ibm.ws.container.service.metadata.internal.MetaDataServiceImpl; \
      provide:='com.ibm.ws.container.service.metadata.MetaDataService,com.ibm.ws.container.service.metadata.internal.MetaDataServiceImpl,com.ibm.ws.container.service.metadata.extended.MetaDataIdentifierService'; \
      applicationMetaDataListeners/addApplicationMetaDataListener=com.ibm.ws.container.service.metadata.ApplicationMetaDataListener*; \
      moduleMetaDataListeners/addModuleMetaDataListener=com.ibm.ws.container.service.metadata.ModuleMetaDataListener*; \
      componentMetaDataListeners/addComponentMetaDataListener=com.ibm.ws.container.service.metadata.ComponentMetaDataListener*; \
      methodMetaDataListeners/addMethodMetaDataListener=com.ibm.ws.container.service.metadata.MethodMetaDataListener*; \
      deferredMetaDataFactory=com.ibm.ws.container.service.metadata.extended.DeferredMetaDataFactory*; \
      greedy:="deferredMetaDataFactory";\
      properties:="service.vendor=IBM", \
   com.ibm.ws.container.service.metadata.MetaDataSlotService; \
      implementation:=com.ibm.ws.container.service.metadata.internal.MetaDataSlotServiceImpl; \
      servicefactory:=true; \
      provide:=com.ibm.ws.container.service.metadata.MetaDataSlotService; \
      metaDataService=com.ibm.ws.container.service.metadata.internal.MetaDataServiceImpl; \
      properties:="service.vendor=IBM", \
   com.ibm.ws.container.service.metadata.internal.J2EENameFactoryImpl; \
      implementation:=com.ibm.ws.container.service.metadata.internal.J2EENameFactoryImpl; \
      provide:=com.ibm.websphere.csi.J2EENameFactory; \
      properties:="service.vendor=IBM", \
   com.ibm.ws.container.service.serialization.classProvider; \
      implementation:=com.ibm.ws.serialization.DeserializationClassProvider; \
      provide:=com.ibm.ws.serialization.DeserializationClassProvider; \
      properties:="service.vendor=IBM, \
      classes=com.ibm.ws.container.service.metadata.internal.J2EENameImpl", \
   com.ibm.ws.container.service.security.SecurityRolesAdapter; \
      implementation:=com.ibm.ws.container.service.security.internal.SecurityRolesAdapter; \
      provide:=com.ibm.wsspi.adaptable.module.adapters.ContainerAdapter; \
      configAdmin=org.osgi.service.cm.ConfigurationAdmin; \
      configuration-policy:=ignore; \
      properties:="service.vendor=IBM,toType=com.ibm.ws.container.service.security.SecurityRoles", \
   com.ibm.ws.container.service.state.StateChangeService; \
      implementation:=com.ibm.ws.container.service.state.internal.StateChangeServiceImpl; \
      provide:='com.ibm.ws.container.service.state.StateChangeService,com.ibm.ws.container.service.state.internal.StateChangeServiceImpl'; \
      applicationStateListeners/addApplicationStateListener=com.ibm.ws.container.service.state.ApplicationStateListener*; \
      moduleStateListeners/addModuleStateListener=com.ibm.ws.container.service.state.ModuleStateListener*; \
      properties:="service.vendor=IBM"

instrument.classesExcludes: com/ibm/ws/container/service/resources/*.class

-buildpath: \
	com.ibm.websphere.org.osgi.core;version=latest,\
	com.ibm.websphere.org.osgi.service.cm;version=latest,\
	com.ibm.websphere.org.osgi.service.component;version=latest,\
	com.ibm.wsspi.org.osgi.service.component.annotations;version=latest,\
	com.ibm.ws.anno;version=latest,\
	com.ibm.ws.adaptable.module;version=latest,\
	com.ibm.ws.artifact;version=latest,\
	com.ibm.ws.artifact.overlay;version=latest,\
	com.ibm.ws.kernel.boot.core;version=latest,\
	com.ibm.ws.kernel.service;version=latest,\
	com.ibm.ws.kernel.security.thread;version=latest,\
	com.ibm.ws.logging.core;version=latest,\
	com.ibm.ws.container.service.compat;version=latest,\
	com.ibm.ws.javaee.dd;version=latest,\
	com.ibm.ws.javaee.dd.common;version=latest,\
	com.ibm.ws.resource;version=latest,\
	com.ibm.ws.javaee.version;version=latest,\
	com.ibm.ws.org.osgi.annotation.versioning;version=latest

-testpath: \
	org.hamcrest:hamcrest-all;version=1.3, \
	../build.sharedResources/lib/junit/old/junit.jar;version=file, \
	com.ibm.ws.junit.extensions;version=latest, \
	org.jmock:jmock-junit4;strategy=exact;version=2.5.1, \
	org.jmock:jmock;strategy=exact;version=2.5.1, \
	org.jmock:jmock-legacy;version=2.5.0, \
	com.ibm.ws.org.objenesis:objenesis;version=1.0, \
	cglib:cglib-nodep;version=3.2.10
