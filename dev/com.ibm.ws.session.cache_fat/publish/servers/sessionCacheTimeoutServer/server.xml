<server>

    <featureManager>
        <feature>servlet-3.1</feature>
        <feature>componenttest-1.0</feature>
        <feature>jdbc-4.1</feature>
        <feature>jndi-1.0</feature>
    </featureManager>
    
    <include location="../fatTestPorts.xml"/>
    
     <!-- Use this config for sessionCache -->
     <featureManager>
        <feature>sessionCache-1.0</feature>
    </featureManager>   
    <httpSession maxInMemorySessionCount="1" allowOverflow="false" invalidationTimeout="5s" reaperPollInterval="30"/>
    <httpSessionCache libraryRef="HazelcastLib" writeContents="ALL_SESSION_ATTRIBUTES">
      <properties hazelcast.config.location="file:${shared.resource.dir}/hazelcast/hazelcast-localhost-only.xml"/>
    </httpSessionCache>

    <!-- Use this config for testing sessionDatabase 
    <featureManager>
        <feature>sessionDatabase-1.0</feature>
    </featureManager>
   
    <httpSessionDatabase id="FATDB" dataSourceRef="DerbyDS"/>
    
    <httpSession storageRef="FATDB" maxInMemorySessionCount="1" allowOverflow="false" invalidationTimeout="5s" reaperPollInterval="30"/>
	-->

    <library id="HazelcastLib">
        <file name="${shared.resource.dir}/hazelcast/hazelcast.jar"/>
    </library>

	<library id="DerbyLib">
	    <file name="${shared.resource.dir}/derby/derby.jar"/>
	</library>

    <!-- Used for testing that data source can be stored in a session -->
	<authData id="DerbyAuth" user="userName" password="userPassword"/>    
    <dataSource id="DerbyDS" jndiName="jdbc/derby" containerAuthDataRef="DerbyAuth">
	    <jdbcDriver libraryRef="DerbyLib"/>
	    <properties.derby.embedded createDatabase="create" databaseName="memory:testdb"/>
	</dataSource>

	<javaPermission codebase="${shared.resource.dir}/derby/derby.jar" className="java.security.AllPermission"/>
	
	<variable name="hazelcast" value="${shared.resource.dir}/hazelcast/hazelcast.jar"/>
    <javaPermission codebase="${hazelcast}" className="java.io.FilePermission" actions="read" name="${shared.resource.dir}/hazelcast/hazelcast-localhost-only.xml"/>
    <javaPermission codebase="${hazelcast}" className="java.lang.RuntimePermission" name="accessClassInPackage.sun.management"/>
    <javaPermission codebase="${hazelcast}" className="java.lang.RuntimePermission" name="accessClassInPackage.sun.misc"/>
    <javaPermission codebase="${hazelcast}" className="java.lang.RuntimePermission" name="accessClassInPackage.sun.nio.ch"/>
    <javaPermission codebase="${hazelcast}" className="java.lang.RuntimePermission" name="accessClassInPackage.sun.net.www.protocol.wsjar"/>
    <javaPermission codebase="${hazelcast}" className="java.lang.RuntimePermission" name="accessDeclaredMembers"/>
    <javaPermission codebase="${hazelcast}" className="java.lang.RuntimePermission" name="enableContextClassLoaderOverride"/>
    <javaPermission codebase="${hazelcast}" className="java.lang.RuntimePermission" name="getClassLoader"/>
    <javaPermission codebase="${hazelcast}" className="java.lang.RuntimePermission" name="getenv.HZ_PHONE_HOME_ENABLED"/>
    <javaPermission codebase="${hazelcast}" className="java.lang.RuntimePermission" name="setContextClassLoader"/>
    <javaPermission codebase="${hazelcast}" className="java.lang.RuntimePermission" name="shutdownHooks"/>
    <javaPermission codebase="${hazelcast}" className="java.lang.reflect.ReflectPermission" name="suppressAccessChecks"/>
    <javaPermission codebase="${hazelcast}" className="java.net.NetPermission" name="getNetworkInformation"/>
    <javaPermission codebase="${hazelcast}" className="java.net.SocketPermission" actions="accept,connect,listen,resolve" name="*"/>
    <javaPermission codebase="${hazelcast}" className="java.net.URLPermission" actions="GET:User-Agent" name="http://phonehome.hazelcast.com/ping"/>
	<javaPermission codebase="${hazelcast}" className="java.util.PropertyPermission" actions="read,write" name="*"/>
</server>