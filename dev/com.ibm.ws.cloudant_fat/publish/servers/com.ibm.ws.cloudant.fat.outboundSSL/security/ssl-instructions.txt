If the keystore is ever corrupted/expired, here are the steps to regenerate.

On the DB server:
1 - run the following command that will create a certificate that will be valid for 10 years:
  > openssl req -new -x509 -key privkey.pem -out <db_server_name>.pem -days 3650
   
   where 'privkey.pem' is generated using: 'openssl genrsa > privkey.pem'.  You can generate this, or
   use the one already generated for CouchDB. 
   
2 - copy the certificate <db_server_name>.pem over to your local machine


On your local machine:
1 - Using the 'keytool' command (it comes with the JRE) import the certificate to a new keystore:
  > keytool -importcert -keystore keystore.jks -keypass liberty -file ../../../files/ssl-certs/couchdb.pem -alias testcontainers

2 - This will generate a new file called "keystore.jks" in your current directory, that has the 
    certificate imported into it.  If keystore.jks already exists, and you are running this for a second time
    for a second server's certificate, the second (3rd, 4th, 5th, etc.) certificate will be imported (appended).
    NOTE: Since the cloudant tests require Java 8, I'd suggest using a Java 8 for creating the keystore.....I can't
    say for certain that it matters, but something to keep in mind.

3 - Point to the keystore in the server.xml configuration.  The minimal configuration for ssl is:
  <server>
    <featureManager>
      <feature>ssl-1.0</feature>
    </featureManager>
  
    <ssl id="defaultSSLConfig" keyStoreRef="DefaultKeyStore"/>
    <keyStore id="DefaultKeyStore" location="<path_to_keystore>/keystore.jks" type="JKS" password="liberty" />
  </server> 
