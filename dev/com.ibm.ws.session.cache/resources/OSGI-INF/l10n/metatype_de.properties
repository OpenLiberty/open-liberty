###############################################################################
# Copyright (c) 2018 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
################################################################################
#
#CMVCPATHNAME com.ibm.ws.session.cache/resources/OSGI-INF/l10n/metatype.properties
#ISMESSAGEFILE FALSE
#NLS_ENCODING=UNICODE
#NLS_MESSAGEFORMAT_NONE
#

httpSessionCache=HTTP-Sitzungscache
httpSessionCache.desc=Steuert, wie HTTP-Sitzungen mit JCache persistent gespeichert werden.

libraryRef=Gemeinsam genutzte Bibliothek
libraryRef.desc=Gibt die JCache-Provider-Dateien an.

uri=URI f\u00fcr JCache-Konfiguration
uri.desc=Der URI f\u00fcr die anbieterspezifische JCache-Konfiguration, der bei Anforderung des CacheManager an den JCache-Provider \u00fcbergeben wird.

properties=JCache-Konfigurationseigenschaften
properties.desc=Liste der anbieterspezifischen JCache-Konfigurationseigenschaften, die bei der Anforderung des CacheManager an den JCache-Provider \u00fcbergeben werden.

extraProperties.name=Anbieterspezifische Eigenschaften
extraProperties.description=Liste der anbieterspezifischen JCache-Konfigurationseigenschaften, die bei der Anforderung des CacheManager an den JCache-Provider \u00fcbergeben werden.

# performance group properties:

performance.name=Leistung
performance.description=Verwenden Sie diese Eigenschaften, um die Leistung zu optimieren.

scheduleInval1=Erste Stunde der geplanten Invalidierung
scheduleInval2=Zweite Stunde der geplanten Invalidierung
scheduleInval.desc=W\u00e4hlen Sie diese Option aus, um die Anzahl der Cacheaktualisierungen zu verringern, die erforderlich sind, um ung\u00fcltig gemachte HTTP-Sitzungen zu entfernen. Geben Sie eine Stunde an, zu der die wenigsten Aktivit\u00e4ten stattfinden. Wenn Sie diese Option abw\u00e4hlen, wird in einem Intervall von wenigen Minuten ein Inaktivierungsprozess ausgef\u00fchrt, der die inaktivierten HTTP-Sitzungen entfernt.

writeContents=Inhalt schreiben
writeContents.desc=Gibt an, welche Sitzungsdaten in den persistenten Speicher geschrieben werden.
writeContents.set=Es werden nur Attribute in den persistenten Speicher geschrieben, f\u00fcr die setAttribute aufgerufen wird.
writeContents.getset=Attribute, f\u00fcr die getAttribute oder setAttribute aufgerufen wird, werden in den persistenten Speicher geschrieben. Dies kann f\u00fcr Anwendungen hilfreich sein, die getAttribute f\u00fcr den Abruf und die \u00c4nderung von Attributwerte ohne die Verwendung von setAttribute verwenden, um explizit anzufordern, dass sie in den persistenten Speicher geschrieben werden.
writeContents.all=Alle Attribute werden in den persistenten Speicher geschrieben, unabh\u00e4ng davon, ob getAttribute oder setAttribute aufgerufen wird.

writeFrequency=Schreibfrequenz
writeFrequency.desc=Gibt an, wann Sitzungsdaten in den persistenten Speicher geschrieben werden.
writeFrequency.es=Sitzungsdaten werden nach Abschluss der Servletausf\u00fchrung in den persistenten Speicher geschrieben
writeFrequency.mu=Sitzungsdaten werden bei einer programmgesteuerten Synchronisation des IBMSession-Objekts in den persistenten Speicher geschrieben.
writeFrequency.tb=Sitzungsdaten werden im Schreibintervall in den persistenten Speicher geschrieben.

writeInterval=Schreibintervall
writeInterval.desc=Gibt an, wie oft Sitzungsdaten in den persistenten Speicher geschrieben werden. Dieser Wert wird verwendet, wenn die zeitbasierte Schreibfrequenz aktiviert ist.
