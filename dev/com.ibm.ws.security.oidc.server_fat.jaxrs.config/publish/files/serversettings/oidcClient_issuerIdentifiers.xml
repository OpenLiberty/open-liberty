<!--
    Copyright (c) 2021 IBM Corporation and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

    Contributors:
        IBM Corporation - initial API and implementation
 -->

<server>


	<!-- one issuer - may need multiple clients for this will oauth and oidc 
		be different (was sometimes getting http/https multiple entries in list entry 
		in list is longer than what will be in the token ie: https:/..../snoop/blah 
		and less https://.../<omit snoop> -->



	<authFilter id="myAuthFilter_one_entry">
		<requestUrl
			id="myRequestUrl"
			urlPattern="helloworld_one_entry"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="client_one_entry"
		scope="openid profile"
		clientId="client01"
		clientSecret="{xor}LDo8LTor"
		sharedKey="secret"
		httpsRequired="false"
		inboundPropagation="required"
		redirectToRPHostAndPort="http://localhost:${bvt.prop.security_3_HTTP_default}"
		authorizationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/authorize"
		tokenEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/token"
		validationEndpointUrl="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/${providerSample}/${oAuthOidcRSValidationType}"
		validationMethod="${oAuthOidcRSValidationType}"
		jwkEndpointUrl="${oidcJWKValidationURL}"
		issuerIdentifier="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/${providerSample}"
		signatureAlgorithm="${oidcSignAlg}"
		authFilterRef="myAuthFilter_one_entry"
	>
	</openidConnectClient>

	<authFilter id="myAuthFilter_one_bad_entry">
		<requestUrl
			id="myRequestUrl"
			urlPattern="helloworld_one_bad_entry"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="client_one_bad_entry"
		scope="openid profile"
		clientId="client01"
		clientSecret="{xor}LDo8LTor"
		sharedKey="secret"
		httpsRequired="false"
		inboundPropagation="required"
		redirectToRPHostAndPort="http://localhost:${bvt.prop.security_3_HTTP_default}"
		authorizationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/authorize"
		tokenEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/token"
		validationEndpointUrl="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/${providerSample}/${oAuthOidcRSValidationType}"
		validationMethod="${oAuthOidcRSValidationType}"
		jwkEndpointUrl="${oidcJWKValidationURL}"
		issuerIdentifier="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/someOtherEntry"
		signatureAlgorithm="${oidcSignAlg}"
		authFilterRef="myAuthFilter_one_bad_entry"
	>
	</openidConnectClient>

	<authFilter id="myAuthFilter_multiple_entries">
		<requestUrl
			id="myRequestUrl"
			urlPattern="helloworld_multiple_entries"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="client_multiple_entries"
		scope="openid profile"
		clientId="client01"
		clientSecret="{xor}LDo8LTor"
		sharedKey="secret"
		httpsRequired="false"
		inboundPropagation="required"
		redirectToRPHostAndPort="http://localhost:${bvt.prop.security_3_HTTP_default}"
		authorizationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/authorize"
		tokenEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/token"
		validationEndpointUrl="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/${providerSample}/${oAuthOidcRSValidationType}"
		validationMethod="${oAuthOidcRSValidationType}"
		jwkEndpointUrl="${oidcJWKValidationURL}"
		issuerIdentifier="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/${providerSample}, https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/someOtherEntry,http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/someOtherEntry"
		signatureAlgorithm="${oidcSignAlg}"
		authFilterRef="myAuthFilter_multiple_entries"
	>
	</openidConnectClient>

	<authFilter id="myAuthFilter_multiple_bad_entries">
		<requestUrl
			id="myRequestUrl"
			urlPattern="helloworld_multiple_bad_entries"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="client_multiple_bad_entries"
		scope="openid profile"
		clientId="client01"
		clientSecret="{xor}LDo8LTor"
		sharedKey="secret"
		httpsRequired="false"
		inboundPropagation="required"
		redirectToRPHostAndPort="http://localhost:${bvt.prop.security_3_HTTP_default}"
		authorizationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/authorize"
		tokenEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/token"
		validationEndpointUrl="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/${providerSample}/${oAuthOidcRSValidationType}"
		validationMethod="${oAuthOidcRSValidationType}"
		jwkEndpointUrl="${oidcJWKValidationURL}"
		issuerIdentifier="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/badEntry, https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/someOtherEntry,http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/someOtherEntry"
		signatureAlgorithm="${oidcSignAlg}"
		authFilterRef="myAuthFilter_multiple_bad_entries"
	>
	</openidConnectClient>

	<authFilter id="myAuthFilter_substring">
		<requestUrl
			id="myRequestUrl"
			urlPattern="helloworld_substring"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="client_substring"
		scope="openid profile"
		clientId="client01"
		clientSecret="{xor}LDo8LTor"
		sharedKey="secret"
		httpsRequired="false"
		inboundPropagation="required"
		redirectToRPHostAndPort="http://localhost:${bvt.prop.security_3_HTTP_default}"
		authorizationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/authorize"
		tokenEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/token"
		validationEndpointUrl="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/${providerSample}/${oAuthOidcRSValidationType}"
		validationMethod="${oAuthOidcRSValidationType}"
		jwkEndpointUrl="${oidcJWKValidationURL}"
		issuerIdentifier="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint"
		signatureAlgorithm="${oidcSignAlg}"
		authFilterRef="myAuthFilter_substring"
	>
	</openidConnectClient>

	<authFilter id="myAuthFilter_extended_string">
		<requestUrl
			id="myRequestUrl"
			urlPattern="helloworld_extended_string"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="client_extended_string"
		scope="openid profile"
		clientId="client01"
		clientSecret="{xor}LDo8LTor"
		sharedKey="secret"
		httpsRequired="false"
		inboundPropagation="required"
		redirectToRPHostAndPort="http://localhost:${bvt.prop.security_3_HTTP_default}"
		authorizationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/authorize"
		tokenEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/token"
		validationEndpointUrl="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/${providerSample}/${oAuthOidcRSValidationType}"
		validationMethod="${oAuthOidcRSValidationType}"
		jwkEndpointUrl="${oidcJWKValidationURL}"
		issuerIdentifier="https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/${providerSample}/something"
		signatureAlgorithm="${oidcSignAlg}"
		authFilterRef="myAuthFilter_extended_string"
	>
	</openidConnectClient>

</server>
