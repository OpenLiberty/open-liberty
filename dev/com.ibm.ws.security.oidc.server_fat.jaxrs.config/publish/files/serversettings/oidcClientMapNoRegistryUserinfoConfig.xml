<!--
    Copyright (c) 2021 IBM Corporation and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

    Contributors:
        IBM Corporation - initial API and implementation
 -->

<server>

	<authFilter id="myAuthFilter_testMapDflt">
		<requestUrl
			id="myRequestUrl"
			urlPattern="helloworld_testMapDflt"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="client_testMapDflt"
		scope="openid profile"
		clientId="client01"
		clientSecret="{xor}LDo8LTor"
		sharedKey="secret"
		httpsRequired="false"
		inboundPropagation="required"
		redirectToRPHostAndPort="http://localhost:${bvt.prop.security_3_HTTP_default}"
		authorizationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/authorize"
		tokenEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/token"
		validationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/userinfo"
		issuerIdentifier="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample},https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/${providerSample}"
		jwkEndpointUrl="${oidcJWKValidationURL}"
		signatureAlgorithm="${oidcSignAlg}"
		validationMethod="userinfo"
		authFilterRef="myAuthFilter_testMapDflt"
	>
	</openidConnectClient>

	<authFilter id="myAuthFilter_testMax">
		<requestUrl
			id="myRequestUrl"
			urlPattern="helloworld_testMax"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="client_testMax"
		scope="openid profile"
		clientId="client01"
		clientSecret="{xor}LDo8LTor"
		sharedKey="secret"
		httpsRequired="false"
		inboundPropagation="required"
		redirectToRPHostAndPort="http://localhost:${bvt.prop.security_3_HTTP_default}"
		authorizationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/authorize"
		tokenEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/token"
		validationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/userinfo"
		issuerIdentifier="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample},https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/${providerSample}"
		jwkEndpointUrl="${oidcJWKValidationURL}"
		signatureAlgorithm="${oidcSignAlg}"
		validationMethod="userinfo"
		mapIdentityToRegistryUser="false"
		userIdentityToCreateSubject="sub"
		userIdentifier="sub"
		groupIdentifier="groupIds"
		realmName="MyRealm"
		realmIdentifer="realmName"
		uniqueUserIdentifier="uniqueSecurityName"
		authFilterRef="myAuthFilter_testMax"
	>
	</openidConnectClient>


	<authFilter id="myAuthFilter_testUIdsBad">
		<requestUrl
			id="myRequestUrl"
			urlPattern="helloworld_testUIdsBad"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="client_testUIdsBad"
		scope="openid profile"
		clientId="client01"
		clientSecret="{xor}LDo8LTor"
		sharedKey="secret"
		httpsRequired="false"
		inboundPropagation="required"
		redirectToRPHostAndPort="http://localhost:${bvt.prop.security_3_HTTP_default}"
		authorizationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/authorize"
		tokenEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/token"
		validationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/userinfo"
		issuerIdentifier="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample},https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/${providerSample}"
		jwkEndpointUrl="${oidcJWKValidationURL}"
		signatureAlgorithm="${oidcSignAlg}"
		validationMethod="userinfo"
		mapIdentityToRegistryUser="false"
		userIdentifier=""
		userIdentityToCreateSubject="badClaim"
		authFilterRef="myAuthFilter_testUIdsBad"
	>
	</openidConnectClient>

	<authFilter id="myAuthFilter_testUIdSubOK">
		<requestUrl
			id="myRequestUrl"
			urlPattern="helloworld_testUIdSubOK"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="client_testUIdSubOK"
		scope="openid profile"
		clientId="client01"
		clientSecret="{xor}LDo8LTor"
		sharedKey="secret"
		httpsRequired="false"
		inboundPropagation="required"
		redirectToRPHostAndPort="http://localhost:${bvt.prop.security_3_HTTP_default}"
		authorizationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/authorize"
		tokenEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/token"
		validationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/userinfo"
		issuerIdentifier="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample},https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/${providerSample}"
		jwkEndpointUrl="${oidcJWKValidationURL}"
		signatureAlgorithm="${oidcSignAlg}"
		validationMethod="userinfo"
		mapIdentityToRegistryUser="false"
		userIdentityToCreateSubject="sub"
		authFilterRef="myAuthFilter_testUIdSubOK"
	>
	</openidConnectClient>

	<authFilter id="myAuthFilter_testIdentsGood">
		<requestUrl
			id="myRequestUrl"
			urlPattern="helloworld_testIdentsGood"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="client_testIdentsGood"
		scope="openid profile"
		clientId="client01"
		clientSecret="{xor}LDo8LTor"
		sharedKey="secret"
		httpsRequired="false"
		inboundPropagation="required"
		redirectToRPHostAndPort="http://localhost:${bvt.prop.security_3_HTTP_default}"
		authorizationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/authorize"
		tokenEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/token"
		validationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/userinfo"
		issuerIdentifier="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample},https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/${providerSample}"
		jwkEndpointUrl="${oidcJWKValidationURL}"
		signatureAlgorithm="${oidcSignAlg}"
		validationMethod="userinfo"
		mapIdentityToRegistryUser="false"
		userIdentifier="sub"
		groupIdentifier="groupIds"
		realmIdentifer="realmName"
		uniqueUserIdentifier="uniqueSecurityName"
		authFilterRef="myAuthFilter_testIdentsGood"
	>
	</openidConnectClient>

	<authFilter id="myAuthFilter_testRealmsBad">
		<requestUrl
			id="myRequestUrl"
			urlPattern="helloworld_testRealmsBad"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="client_testRealmsBad"
		scope="openid profile"
		clientId="client01"
		clientSecret="{xor}LDo8LTor"
		sharedKey="secret"
		httpsRequired="false"
		inboundPropagation="required"
		redirectToRPHostAndPort="http://localhost:${bvt.prop.security_3_HTTP_default}"
		authorizationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/authorize"
		tokenEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/token"
		validationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/userinfo"
		issuerIdentifier="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample},https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/${providerSample}"
		jwkEndpointUrl="${oidcJWKValidationURL}"
		signatureAlgorithm="${oidcSignAlg}"
		validationMethod="userinfo"
		mapIdentityToRegistryUser="false"
		userIdentifier="sub"
		groupIdentifier="groupIds"
		realmName=""
		realmIdentifer="badRealmName"
		uniqueUserIdentifier="uniqueSecurityName"
		authFilterRef="myAuthFilter_testRealmsBad"
	>
	</openidConnectClient>

	<authFilter id="myAuthFilter_testGroupBad">
		<requestUrl
			id="myRequestUrl"
			urlPattern="helloworld_testGroupBad"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="client_testGroupBad"
		scope="openid profile"
		clientId="client01"
		clientSecret="{xor}LDo8LTor"
		sharedKey="secret"
		httpsRequired="false"
		inboundPropagation="required"
		redirectToRPHostAndPort="http://localhost:${bvt.prop.security_3_HTTP_default}"
		authorizationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/authorize"
		tokenEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/token"
		validationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/userinfo"
		issuerIdentifier="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample},https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/${providerSample}"
		jwkEndpointUrl="${oidcJWKValidationURL}"
		signatureAlgorithm="${oidcSignAlg}"
		validationMethod="userinfo"
		mapIdentityToRegistryUser="false"
		userIdentifier="sub"
		groupIdentifier="badGroupIds"
		authFilterRef="myAuthFilter_testGroupBad"
	>
	</openidConnectClient>

	<authFilter id="myAuthFilter_testUniqueIdBad">
		<requestUrl
			id="myRequestUrl"
			urlPattern="helloworld_testUniqueIdBad"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="client_testUniqueIdBad"
		scope="openid profile"
		clientId="client01"
		clientSecret="{xor}LDo8LTor"
		sharedKey="secret"
		httpsRequired="false"
		inboundPropagation="required"
		redirectToRPHostAndPort="http://localhost:${bvt.prop.security_3_HTTP_default}"
		authorizationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/authorize"
		tokenEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/token"
		validationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/userinfo"
		issuerIdentifier="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample},https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/${providerSample}"
		jwkEndpointUrl="${oidcJWKValidationURL}"
		signatureAlgorithm="${oidcSignAlg}"
		validationMethod="userinfo"
		mapIdentityToRegistryUser="false"
		userIdentifier="sub"
		groupIdentifier="groupIds"
		realmIdentifer="realmName"
		uniqueUserIdentifier="badUniqueSecurityName"
		authFilterRef="myAuthFilter_testUniqueIdBad"
	>
	</openidConnectClient>

	<authFilter id="myAuthFilter_testRealmPrecedence">
		<requestUrl
			id="myRequestUrl"
			urlPattern="helloworld_testRealmPrecedence"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="client_testRealmPrecedence"
		scope="openid profile"
		clientId="client01"
		clientSecret="{xor}LDo8LTor"
		sharedKey="secret"
		httpsRequired="false"
		inboundPropagation="required"
		redirectToRPHostAndPort="http://localhost:${bvt.prop.security_3_HTTP_default}"
		authorizationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/authorize"
		tokenEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/token"
		validationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/userinfo"
		issuerIdentifier="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample},https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/${providerSample}"
		jwkEndpointUrl="${oidcJWKValidationURL}"
		signatureAlgorithm="${oidcSignAlg}"
		validationMethod="userinfo"
		mapIdentityToRegistryUser="false"
		userIdentifier="sub"
		realmName="MyRealm"
		groupIdentifier="groupIds"
		realmIdentifer="realmName"
		authFilterRef="myAuthFilter_testRealmPrecedence"
	>
	</openidConnectClient>

	<authFilter id="myAuthFilter_testuniqueIdTypeBad">
		<requestUrl
			id="myRequestUrl"
			urlPattern="helloworld_testuniqueIdTypeBad"
			matchType="contains" />
	</authFilter>

	<openidConnectClient
		id="client_testuniqueIdTypeBad"
		scope="openid profile"
		clientId="client01"
		clientSecret="{xor}LDo8LTor"
		sharedKey="secret"
		httpsRequired="false"
		inboundPropagation="required"
		redirectToRPHostAndPort="http://localhost:${bvt.prop.security_3_HTTP_default}"
		authorizationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/authorize"
		tokenEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/token"
		validationEndpointUrl="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample}/userinfo"
		issuerIdentifier="http://localhost:${bvt.prop.security_1_HTTP_default}/${providerRoot}/endpoint/${providerSample},https://localhost:${bvt.prop.security_1_HTTP_default.secure}/${providerRoot}/endpoint/${providerSample}"
		jwkEndpointUrl="${oidcJWKValidationURL}"
		signatureAlgorithm="${oidcSignAlg}"
		validationMethod="userinfo"
		mapIdentityToRegistryUser="false"
		uniqueUserIdentifier="iat"
		authFilterRef="myAuthFilter_testuniqueIdTypeBad"
	>
	</openidConnectClient>

</server>
