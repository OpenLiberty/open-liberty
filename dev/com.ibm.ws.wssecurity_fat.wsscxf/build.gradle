/*******************************************************************************
 * Copyright (c) 2020 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/

dependencies {
  requiredLibs project(':com.ibm.ws.wssecurity.fat.utils.common'),
               project(':io.openliberty.org.apache.commons.logging'),
               project(':io.openliberty.org.apache.commons.codec'),
               'org.apache.httpcomponents:httpclient:4.5.4',
               'org.apache.httpcomponents:httpcore:4.4.9',
               'org.apache.commons:commons-lang3:3.5',
               'org.apache.ws.security:wss4j:1.6.18',
               'net.sf.jtidy:jtidy:9.3.8',
               'httpunit:httpunit:1.5.4'
}

/* Unzip webcontent.war, WSSampleSeiClient.war from com.ibm.ws.wssecurity_fat.sample/apps */
task unzip1(type: Copy) {
  def zipFile1 = file('publish/servers/com.ibm.ws.wssecurity_fat.sample/apps/webcontent.war')
  def outputDir1 = file("${autoFvtDir}/publish/servers/com.ibm.ws.wssecurity_fat.sample/apps/webcontent")
  from zipTree(zipFile1)
    into outputDir1
}

task unzip2(type: Copy) {
  def zipFile2 = file('publish/servers/com.ibm.ws.wssecurity_fat.sample/apps/WSSampleSeiClient.war')
  def outputDir2 = file("${autoFvtDir}/publish/servers/com.ibm.ws.wssecurity_fat.sample/apps/WSSampleSeiClient")
  from zipTree(zipFile2)
    into outputDir2  
}

autoFVT.dependsOn unzip1, unzip2


autoFVT.doLast {

/* Copy securitykeys/key.jks, and sslServerTrust.jks to these servers */

  def servers = [
        'com.ibm.ws.wssecurity_fat.ssl',
        'com.ibm.ws.wssecurity_fat.pwdigest',
        'com.ibm.ws.wssecurity_fat.derived',
        'com.ibm.ws.wssecurity_fat.caller',
        'com.ibm.ws.wssecurity_fat.x509caller',
        'com.ibm.ws.wssecurity_fat.x509symcaller', 
        'com.ibm.ws.wssecurity_fat.wsstemplates',
        'com.ibm.ws.wssecurity_fat.wsstemplateswithep',
        'com.ibm.ws.wssecurity_fat.sample'
  ]

  servers.each { server ->
    copy { 
      from project.file('securitykeys')
      include "key.jks", "sslServerTrust.jks"
      into new File(autoFvtDir, 'publish/servers/' + server + '/')
    }
  }


/* Copy override/autoFVT/cxfclient-policies/BasicPlcyBA.wsdl to this server */
  
  servers = [
    'com.ibm.ws.wssecurity_fat.ssl'
  ]

  servers.each { server ->
    copy { 
      from project.file('override/autoFVT/cxfclient-policies')
      include "BasicPlcyBA.wsdl"
      into new File(autoFvtDir, 'publish/servers/' + server + '/')
    }
  }

/* Copy *.war to this server */
  
  servers = [
    'com.ibm.ws.wssecurity_fat.pwdigest'
  ]

  servers.each { server ->
    copy { 
      from project.file('lib')
      include "jsse.jar"
      into new File(autoFvtDir, 'lib/')
    }
  }


 /* Copy securitykeys/x509*.jks to these servers */
  servers = [
    'com.ibm.ws.wssecurity_fat.derived',
    'com.ibm.ws.wssecurity_fat.caller',
    'com.ibm.ws.wssecurity_fat.x509caller',
    'com.ibm.ws.wssecurity_fat.x509symcaller', 
    'com.ibm.ws.wssecurity_fat.wsstemplates',
    'com.ibm.ws.wssecurity_fat.wsstemplateswithep',
    'com.ibm.ws.wssecurity_fat.sample'
  ]

  servers.each { server ->
    copy { 
      from project.file('securitykeys')
      include "x509*.jks"
      into new File(autoFvtDir, 'publish/servers/' + server + '/')
    }   
  }

 
/* Copy securitykeys/x509Client*.properties to these servers */

  servers = [
    'com.ibm.ws.wssecurity_fat.caller',
    'com.ibm.ws.wssecurity_fat.x509caller',
    'com.ibm.ws.wssecurity_fat.x509symcaller', 
    'com.ibm.ws.wssecurity_fat.wsstemplates',
    'com.ibm.ws.wssecurity_fat.wsstemplateswithep'
  ]

  servers.each { server ->
    copy { 
      from project.file('securitykeys')
      include "x509Client*.properties"
      into new File(autoFvtDir, 'publish/servers/' + server + '/')
    }
  }


/* Copy securitykeys/enc-sender.jceks, and enc-receiver.jceks to these servers */

  servers = [        
       'com.ibm.ws.wssecurity_fat.mustunderstand'
  ]

  servers.each { server ->
    copy { 
      from project.file('securitykeys')
      include "enc-sender.jceks", "enc-receiver.jceks"
      into new File(autoFvtDir, 'publish/servers/' + server + '/')
    }
  
    copy { 
      from project.file('override/autoFVT/cxfclient-policies')
      include '**'
      into new File(autoFvtDir, 'cxfclient-policies')
    }
  }

/* Copy securitykeys/dsig-receiver.ks, and dsig-sender.ks to these servers */

  servers = [
     'com.ibm.ws.wssecurity_fat.mustunderstand'
  ]

  servers.each { server ->
    copy { 
      from project.file('securitykeys')
      include "dsig-receiver.ks", "dsig-sender.ks"
      into new File(autoFvtDir, 'publish/servers/' + server + '/')
    }
  }

}