/*******************************************************************************
 * Copyright (c) 2020 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/

package test.libertyfat.caller.contract;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.6.2
 * 2013-01-31T16:42:43.033-06:00
 * Generated source version: 2.6.2
 *
 */
@WebServiceClient(name = "FatBAC09Service",
                  wsdlLocation = "calltoken.wsdl",
                  targetNamespace = "http://caller.libertyfat.test/contract")
public class FatBAC09Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://caller.libertyfat.test/contract", "FatBAC09Service");
    public final static QName UrnCallerToken09 = new QName("http://caller.libertyfat.test/contract", "UrnCallerToken09");
    static {
        URL url = FatBAC09Service.class.getResource("calltoken.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(FatBAC09Service.class.getName()).log(java.util.logging.Level.INFO,
                                                                                    "Can not initialize the default wsdl from {0}", "calltoken.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public FatBAC09Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public FatBAC09Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FatBAC09Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     *
     * @return
     *         returns FVTVersionBAC
     */
    @WebEndpoint(name = "UrnCallerToken09")
    public FVTVersionBAC getUrnCallerToken09() {
        return super.getPort(UrnCallerToken09, FVTVersionBAC.class);
    }

    /**
     *
     * @param features
     *                     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy. Supported features not in the <code>features</code> parameter will have their
     *                     default values.
     * @return
     *         returns FVTVersionBAC
     */
    @WebEndpoint(name = "UrnCallerToken09")
    public FVTVersionBAC getUrnCallerToken09(WebServiceFeature... features) {
        return super.getPort(UrnCallerToken09, FVTVersionBAC.class, features);
    }

}
